% Encoding: UTF-8

@InProceedings{Alam2013,
  author    = {Mohammed S. Alam and Son T. Vuong},
  title     = {Random Forest Classification for Detecting Android Malware},
  booktitle = {2013 {IEEE} International Conference on Green Computing and Communications and {IEEE} Internet of Things and {IEEE} Cyber, Physical and Social Computing},
  year      = {2013},
  publisher = {{IEEE}},
  month     = {aug},
  doi       = {10.1109/greencom-ithings-cpscom.2013.122},
}

@Book{Alpaydin2010,
  author          = {Alpaydin, Ethem},
  title           = {{Introduction to Machine Learning}},
  year            = {2010},
  edition         = {Second Edi},
  publisher       = {The MIT Press},
  isbn            = {9780262012430},
  address         = {Cambridge, Massachusetts},
  file            = {:D$\backslash$:/OneDrive - Universit{\"{a}}t Koblenz/MA/Literatur/ML/Alpaydin{\_}Introduction to Machine Learning{\_}2010.pdf:pdf},
  mendeley-groups = {Masterarbeit},
}

@Article{Alsaeedi2019,
  author    = {Abdullah Alsaeedi and Mohammad Zubair Khan},
  title     = {Software Defect Prediction Using Supervised Machine Learning and Ensemble Techniques: A Comparative Study},
  journal   = {Journal of Software Engineering and Applications},
  year      = {2019},
  volume    = {12},
  number    = {05},
  pages     = {85--100},
  doi       = {10.4236/jsea.2019.125007},
  publisher = {Scientific Research Publishing, Inc,},
}

@Book{Apel2013,
  author    = {Sven Apel and Don Batory and Christian Kästner and Gunter Saake},
  title     = {Feature-Oriented Software Product Lines},
  year      = {2013},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-642-37521-7},
}

@InProceedings{Borg2019,
  author    = {Markus Borg and Oscar Svensson and Kristian Berg and Daniel Hansson},
  title     = {{SZZ} unleashed: an open implementation of the {SZZ} algorithm - featuring example usage in a study of just-in-time bug prediction for the Jenkins project},
  booktitle = {Proceedings of the 3rd {ACM} {SIGSOFT} International Workshop on Machine Learning Techniques for Software Quality Evaluation - {MaLTeSQuE} 2019},
  year      = {2019},
  publisher = {{ACM} Press},
  doi       = {10.1145/3340482.3342742},
}

@InCollection{Bottou2010,
  author    = {L{\'{e}}on Bottou},
  title     = {Large-Scale Machine Learning with Stochastic Gradient Descent},
  booktitle = {Proceedings of {COMPSTAT}{\textquotesingle}2010},
  year      = {2010},
  publisher = {Physica-Verlag {HD}},
  pages     = {177--186},
  doi       = {10.1007/978-3-7908-2604-3_16},
}

@InProceedings{Ceylan2006,
  author    = {Evren Ceylan and F. Onur Kutlubay and Ayse B. Bener},
  title     = {Software Defect Identification Using Machine Learning Techniques},
  booktitle = {32nd {EUROMICRO} Conference on Software Engineering and Advanced Applications ({EUROMICRO}{\textquotesingle}06)},
  year      = {2006},
  publisher = {{IEEE}},
  month     = {aug},
  doi       = {10.1109/euromicro.2006.56},
}

@Article{Challagulla2008,
  author          = {Challagulla, Venkata Udaya B. and Bastani, Farokh B. and Yen, I. Ling and Paul, Raymond A.},
  title           = {{Empirical assessment of machine learning based software defect prediction techniques}},
  journal         = {International Journal on Artificial Intelligence Tools},
  year            = {2008},
  volume          = {17},
  number          = {2},
  pages           = {389--400},
  issn            = {02182130},
  doi             = {10.1142/S0218213008003947},
  abstract        = {Automated reliability assessment is essential for systems that entail dynamic adaptation based on runtime mission-specific requirements. One approach along this direction is to monitor and assess the system using machine learning-based software defect prediction techniques. Due to the dynamic nature of software data collected, Instance-based learning algorithms are proposed for the above purposes. To evaluate the accuracy of these methods, the paper presents an empirical analysis of four different real-time software defect data sets using different predictor models.The results show that a combination of 1R and Instance-based learning along with Consistency-based subset evaluation technique provides a relatively better consistency in achieving accurate predictions as compared with other models. No direct relationship is observed between the skewness present in the data sets and the prediction accuracy of these models. Principal Component Analysis (PCA) does not show a consistent advantage in improving the accuracy of the predictions. While random reduction of attributes gave poor accuracy results, simple Feature Subset Selection methods performed better than PCA for most prediction models. Based on these results, the paper presents a high-level design of an Intelligent Software Defect Analysis tool (ISDAT) for dynamic monitoring and defect assessment of software modules.},
  file            = {:C$\backslash$:/Users/stefa/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Challagulla et al.{\_}2008.pdf:pdf},
  isbn            = {0769523471},
  keywords        = {Data analysis,Software defect prediction},
  mendeley-groups = {MA,Masterarbeit,Masterarbeit/Fehlervorhersage},
}

@Article{Chapman2000,
  author          = {Chapman, Pete and Clinton, Julian and Kerber, Randy and Khabaza, Thomas and Reinartz, Thomas and Shearer, Colin and Wirth, R{\"{u}}diger},
  title           = {{CRISP-DM 1.0}},
  journal         = {CRISP-DM Consortium},
  year            = {2000},
  pages           = {76},
  issn            = {0957-4174},
  doi             = {10.1109/ICETET.2008.239},
  abstract        = {This document describes the CRISP-DM process model and contains information about the CRISP-DM methodology, the CRISP-DM reference model, the CRISP-DM user guide, and the CRISP-DM reports, as well as an appendix with additional related information. This document and information herein are the exclusive property of the partners of the CRISP-DM consortium: NCR Systems Engineering Copenhagen (USA and Denmark), DaimlerChrysler AG (Germany), SPSS Inc. (USA), and OHRA Verzekeringen en Bank Groep B.V. (The Netherlands).},
  file            = {:C$\backslash$:/Users/stefa/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chapman et al. - 2000 - Crisp-Dm 1.0.pdf:pdf},
  isbn            = {9780769532677},
  mendeley-groups = {MA,Masterarbeit,Masterarbeit/Methodik},
}

@Article{Chawla2002,
  author    = {N. V. Chawla and K. W. Bowyer and L. O. Hall and W. P. Kegelmeyer},
  title     = {{SMOTE}: Synthetic Minority Over-sampling Technique},
  journal   = {Journal of Artificial Intelligence Research},
  year      = {2002},
  volume    = {16},
  pages     = {321--357},
  month     = {jun},
  doi       = {10.1613/jair.953},
  publisher = {{AI} Access Foundation},
}

@Article{Dhiauddin2012,
  author    = {Muhammad Dhiauddin and Suhaimi Ibrahim},
  journal   = {International Journal of Soft Computing and Software Engineering},
  title     = {A Prediction Model for System Testing Defects using Regression Analysis},
  year      = {2012},
  month     = {jul},
  number    = {7},
  pages     = {55--68},
  volume    = {2},
  doi       = {10.7321/jscse.v2.n7.6},
  publisher = {International Journal of Soft Computing and Software Engineering},
}

@Article{Dreiseitl2002,
  author    = {Stephan Dreiseitl and Lucila Ohno-Machado},
  title     = {Logistic regression and artificial neural network classification models: a methodology review},
  journal   = {Journal of Biomedical Informatics},
  year      = {2002},
  volume    = {35},
  number    = {5-6},
  month     = {oct},
  pages     = {352--359},
  doi       = {10.1016/s1532-0464(03)00034-0},
  publisher = {Elsevier {BV}},
}

@Book{Weka2016,
  title     = {The WEKA Workbench. Online Appendix for "Data Mining: Practical Machine Learning Tools and Techniques"},
  publisher = {Morgan Kaufmann},
  year      = {2016},
  author    = {Eibe Frank and Mark A. Hall and Ian H. Witten},
  edition   = {Fourth Edition},
}

@Misc{Gandhi2018,
  author       = {Rohith Gandhi},
  howpublished = {Online. Zuletzt abgerufen am 20.03.2020.},
  month        = {June},
  title        = {Support Vector Machine — Introduction to Machine Learning Algorithms},
  year         = {2018},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://towardsdatascience.com/support-vector-machine-introduction-to-machine-learning-algorithms-934a444fca47},
}

@Misc{GoogleML,
  author       = {Google},
  howpublished = {Online. Zuletzt abgerufen am 20.03.2020.},
  title        = {Machine Learning Crash Course: Classification: ROC Curve and AUC},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://developers.google.com/machine-learning/crash-course/classification/roc-and-auc},
}

@Article{Hammouri2018,
  author    = {Awni Hammouri and Mustafa Hammad and Mohammad Alnabhan and Fatima Alsarayrah},
  title     = {Software Bug Prediction using Machine Learning Approach},
  journal   = {International Journal of Advanced Computer Science and Applications},
  year      = {2018},
  volume    = {9},
  number    = {2},
  doi       = {10.14569/ijacsa.2018.090212},
  publisher = {The Science and Information Organization},
}

@Article{Hunsen2015,
  author    = {Claus Hunsen and Bo Zhang and Janet Siegmund and Christian Kästner and Olaf Le{\ss}enich and Martin Becker and Sven Apel},
  title     = {Preprocessor-based variability in open-source and industrial software systems: An empirical study},
  journal   = {Empirical Software Engineering},
  year      = {2015},
  volume    = {21},
  number    = {2},
  pages     = {449--482},
  month     = {apr},
  doi       = {10.1007/s10664-015-9360-1},
  publisher = {Springer Science and Business Media {LLC}},
}

@Misc{KNIMETV2019,
  author       = {KNIMETV},
  howpublished = {Video on YouTube. Zuletzt abgerufen am 20.03.2020..},
  month        = sep,
  title        = {What is an ROC Curve?},
  year         = {2019},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://www.youtube.com/watch?v=kWDHmroVWs8},
}

@InProceedings{Li2017,
  author    = {Jian Li and Pinjia He and Jieming Zhu and Michael R. Lyu},
  booktitle = {2017 {IEEE} International Conference on Software Quality, Reliability and Security ({QRS})},
  title     = {Software Defect Prediction via Convolutional Neural Network},
  year      = {2017},
  month     = {jul},
  publisher = {{IEEE}},
  doi       = {10.1109/qrs.2017.42},
}

@InProceedings{Liebig2010,
  author    = {Jörg Liebig and Sven Apel and Christian Lengauer and Christian Kästner and Michael Schulze},
  title     = {An analysis of the variability in forty preprocessor-based software product lines},
  booktitle = {Proceedings of the 32nd {ACM}/{IEEE} International Conference on Software Engineering - {ICSE} {\textquotesingle}10},
  year      = {2010},
  publisher = {{ACM} Press},
  doi       = {10.1145/1806799.1806819},
}

@Article{Linder2004,
  author    = {Roland Linder and Jeannine Geier and Mathias Kölliker},
  title     = {Artificial neural networks, classification trees and regression: Which method for which customer base?},
  journal   = {Journal of Database Marketing {\&} Customer Strategy Management},
  year      = {2004},
  volume    = {11},
  number    = {4},
  month     = {jul},
  pages     = {344--356},
  doi       = {10.1057/palgrave.dbm.3240233},
  publisher = {Springer Science and Business Media {LLC}},
}

@Misc{Luber2019,
  author       = {Stefan Luber and Nico Litzel},
  howpublished = {Online. Zuletzt abgerufen am 20.03.2020.},
  month        = nov,
  title        = {Was ist eine Support Vector Machine?},
  year         = {2019},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://www.bigdata-insider.de/was-ist-eine-support-vector-machine-a-880134/},
}

@Article{Medeiros2018,
  author    = {Flavio Medeiros and Marcio Ribeiro and Rohit Gheyi and Sven Apel and Christian Kastner and Bruno Ferreira and Luiz Carvalho and Baldoino Fonseca},
  journal   = {{IEEE} Transactions on Software Engineering},
  title     = {Discipline Matters: Refactoring of Preprocessor Directives in the {\#}ifdef Hell},
  year      = {2018},
  month     = {may},
  number    = {5},
  pages     = {453--469},
  volume    = {44},
  doi       = {10.1109/tse.2017.2688333},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
}

@InProceedings{Moser2008,
  author    = {Raimund Moser and Witold Pedrycz and Giancarlo Succi},
  title     = {A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction},
  booktitle = {Proceedings of the 13th international conference on Software engineering - {ICSE} {\textquotesingle}08},
  year      = {2008},
  publisher = {{ACM} Press},
  doi       = {10.1145/1368088.1368114},
}

@Misc{Narkhede2018,
  author       = {Sarang Narkhede},
  howpublished = {Online. Zuletzt abgerufen am 20.03.2020.},
  month        = jun,
  title        = {Understanding AUC - ROC Curve},
  year         = {2018},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://towardsdatascience.com/understanding-auc-roc-curve-68b2303cc9c5},
}

@Article{Noble2006,
  author    = {William S Noble},
  title     = {What is a support vector machine?},
  journal   = {Nature Biotechnology},
  year      = {2006},
  volume    = {24},
  number    = {12},
  month     = {dec},
  pages     = {1565--1567},
  doi       = {10.1038/nbt1206-1565},
  publisher = {Springer Science and Business Media {LLC}},
}

@Article{OShea2015,
  author      = {Keiron O'Shea and Ryan Nash},
  title       = {An Introduction to Convolutional Neural Networks},
  abstract    = {The field of machine learning has taken a dramatic twist in recent times, with the rise of the Artificial Neural Network (ANN). These biologically inspired computational models are able to far exceed the performance of previous forms of artificial intelligence in common machine learning tasks. One of the most impressive forms of ANN architecture is that of the Convolutional Neural Network (CNN). CNNs are primarily used to solve difficult image-driven pattern recognition tasks and with their precise yet simple architecture, offers a simplified method of getting started with ANNs. This document provides a brief introduction to CNNs, discussing recently published papers and newly formed techniques in developing these brilliantly fantastic image recognition models. This introduction assumes you are familiar with the fundamentals of ANNs and machine learning.},
  date        = {2015-11-26},
  eprint      = {http://arxiv.org/abs/1511.08458v2},
  eprintclass = {cs.NE},
  eprinttype  = {arXiv},
  file        = {:http\://arxiv.org/pdf/1511.08458v2:PDF},
  keywords    = {cs.NE, cs.CV, cs.LG},
}

@Article{scikit,
  author  = {Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V. and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P. and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
  title   = {Scikit-learn: Machine Learning in {P}ython},
  journal = {Journal of Machine Learning Research},
  year    = {2011},
  volume  = {12},
  pages   = {2825--2830},
}

@Article{Peng2002,
  author    = {Chao-Ying Joanne Peng and Kuk Lida Lee and Gary M. Ingersoll},
  title     = {An Introduction to Logistic Regression Analysis and Reporting},
  journal   = {The Journal of Educational Research},
  year      = {2002},
  volume    = {96},
  number    = {1},
  month     = {sep},
  pages     = {3--14},
  doi       = {10.1080/00220670209598786},
  publisher = {Informa {UK} Limited},
}

@InProceedings{Preschern2019,
  author    = {Christopher Preschern},
  booktitle = {Proceedings of the 24th European Conference on Pattern Languages of Programs - {EuroPLop} {\textquotesingle}19},
  title     = {Patterns to escape the {\#}ifdef hell},
  year      = {2019},
  publisher = {{ACM} Press},
  doi       = {10.1145/3361149.3361151},
}

@InProceedings{Queiroz2016,
  author    = {Rodrigo Queiroz and Thorsten Berger and Krzysztof Czarnecki},
  title     = {Towards predicting feature defects in software product lines},
  booktitle = {Proceedings of the 7th International Workshop on Feature-Oriented Software Development - {FOSD} 2016},
  year      = {2016},
  publisher = {{ACM} Press},
  doi       = {10.1145/3001867.3001874},
}

@Article{Queiroz2015,
  author    = {Rodrigo Queiroz and Leonardo Passos and Marco Tulio Valente and Claus Hunsen and Sven Apel and Krzysztof Czarnecki},
  journal   = {Software {\&} Systems Modeling},
  title     = {The shape of feature code: an analysis of twenty C-preprocessor-based systems},
  year      = {2015},
  month     = {jul},
  number    = {1},
  pages     = {77--96},
  volume    = {16},
  doi       = {10.1007/s10270-015-0483-z},
  publisher = {Springer Science and Business Media {LLC}},
}

@InProceedings{Rahman2013,
  author    = {Foyzur Rahman and Premkumar Devanbu},
  title     = {How, and why, process metrics are better},
  booktitle = {2013 35th International Conference on Software Engineering ({ICSE})},
  year      = {2013},
  month     = {may},
  publisher = {{IEEE}},
  doi       = {10.1109/icse.2013.6606589},
}

@Article{Raschka2014,
  author      = {Sebastian Raschka},
  title       = {Naive Bayes and Text Classification I - Introduction and Theory},
  date        = {2014-10-16},
  eprint      = {http://arxiv.org/abs/1410.5329v4},
  eprintclass = {cs.LG},
  eprinttype  = {arXiv},
  abstract    = {Naive Bayes classifiers, a family of classifiers that are based on the popular Bayes' probability theorem, are known for creating simple yet well performing models, especially in the fields of document classification and disease prediction. In this article, we will look at the main concepts of naive Bayes classification in the context of document categorization.},
  file        = {:http\://arxiv.org/pdf/1410.5329v4:PDF},
  keywords    = {cs.LG},
}

@InProceedings{Ratzinger2008,
  author    = {Jacek Ratzinger and Thomas Sigmund and Harald C. Gall},
  title     = {On the relation of refactorings and software defect prediction},
  booktitle = {Proceedings of the 2008 international workshop on Mining software repositories - {MSR} {\textquotesingle}08},
  year      = {2008},
  publisher = {{ACM} Press},
  doi       = {10.1145/1370750.1370759},
}

@InCollection{Rokach2005,
  author    = {Lior Rokach and Oded Maimon},
  title     = {Decision Trees},
  booktitle = {Data Mining and Knowledge Discovery Handbook},
  year      = {2005},
  publisher = {Springer-Verlag},
  pages     = {165--192},
  doi       = {10.1007/0-387-25465-x_9},
}

@InProceedings{Singh2016,
  author    = {Anagh Singh and B. Shiva Prakash and K. Chandrasekaran},
  title     = {A comparison of linear discriminant analysis and ridge classifier on Twitter data},
  booktitle = {2016 International Conference on Computing, Communication and Automation ({ICCCA})},
  year      = {2016},
  publisher = {{IEEE}},
  month     = {apr},
  doi       = {10.1109/ccaa.2016.7813704},
}

@Article{Sliwerski2005,
  author    = {Jacek {\'{S}}liwerski and Thomas Zimmermann and Andreas Zeller},
  title     = {When do changes induce fixes?},
  journal   = {{ACM} {SIGSOFT} Software Engineering Notes},
  year      = {2005},
  volume    = {30},
  number    = {4},
  pages     = {1},
  month     = {jul},
  doi       = {10.1145/1082983.1083147},
  publisher = {Association for Computing Machinery ({ACM})},
}

@Article{Son2019,
  author    = {Le Son and Nakul Pritam and Manju Khari and Raghvendra Kumar and Pham Phuong and Pham Thong},
  title     = {Empirical Study of Software Defect Prediction: A Systematic Mapping},
  journal   = {Symmetry},
  year      = {2019},
  volume    = {11},
  number    = {2},
  month     = {feb},
  pages     = {212},
  doi       = {10.3390/sym11020212},
  publisher = {{MDPI} {AG}},
}

@InProceedings{Spadini2018,
  author    = {Davide Spadini and Mauricio Aniche and Alberto Bacchelli},
  title     = {{PyDriller}: Python framework for mining software repositories},
  booktitle = {Proceedings of the 2018 26th {ACM} Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering - {ESEC}/{FSE} 2018},
  year      = {2018},
  publisher = {{ACM} Press},
  doi       = {10.1145/3236024.3264598},
}

@Misc{Srinivasan2019,
  author       = {Aishwarya V Srinivasan},
  howpublished = {Online. Zuletzt abgerufen am 20.03.2020.},
  month        = sep,
  title        = {Stochastic Gradient Descent — Clearly Explained !!},
  year         = {2019},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://towardsdatascience.com/stochastic-gradient-descent-clearly-explained-53d239905d31},
}

@Manual{Stallmann2016,
  title        = {The C Preprocessor},
  author       = {Richard M. Stallmann and Zachary Weinberg},
  edition      = {For GCC version 6.3.0},
  organization = {Free Software Foundation, Inc},
  year         = {2016},
  url          = {https://scicomp.ethz.ch/public/manual/gcc/6.3.0/cpp.pdf},
}

@Article{Thuem2014,
  author    = {Thomas Thüm and Sven Apel and Christian Kästner and Ina Schaefer and Gunter Saake},
  title     = {A Classification and Survey of Analysis Strategies for Software Product Lines},
  journal   = {{ACM} Computing Surveys},
  year      = {2014},
  volume    = {47},
  number    = {1},
  month     = {jun},
  pages     = {1--45},
  doi       = {10.1145/2580950},
  publisher = {Association for Computing Machinery ({ACM})},
}

@Article{Tzotsos2006,
  author          = {Tzotsos, Angelos},
  title           = {{A Support Vector Machine Approach for Object Based Image}},
  journal         = {Proceedings of 1st International Conference on Object-based Image Analysis},
  year            = {2006},
  number          = {Negnevitsky},
  pages           = {4--5},
  abstract        = {The Support Vector Machine is a theoretically superior machine learning methodology with great results in classification of high- dimensional datasets and has been found competitive with the best machine learning algorithms. In the past, SVMs have been tested and evaluated only as pixel-based image classifiers. Moving from pixel-based techniques towards object-based representation, the dimensions of remote sensing imagery feature space increases significantly. This results increasing complexity of the classification process, and causes problems to traditional sample-based classification schemes. The objective of this study was to evaluate SVMs for effectiveness and prospects for object-based image classification as a modern computational intelligence method. An SVM approach for multi-class classification was followed, based on primitive image objects produces by a multi-resolution segmentation algorithm. The segmentation algorithm produced primitive objects of variable sizes and shapes. Then, a feature selection step took place in order to provide the features for classification which involved spectral, texture and shape information. Contextual information was not used. Following the feature selection step, a module integrating an SVM classifier and the segmentation algorithm was developed in C++ and based on XML technology for feature representation. For training the SVM, sample image objects, derived from the segmentation procedure were used. The SVM procedure produced the final object classification results which were compared to the Nearest Neighbor classifier results, of the eCognition software, and were found satisfactory. The SVM approach seems very promising for Object Based Image Analysis and future work will focus on the integration SVM classifiers with rule-based classifiers},
  file            = {:D$\backslash$:/OneDrive - Universit{\"{a}}t Koblenz/MA/Literatur/Klassifikatoren/A Support Vector Machine Approach for Object Based Image Analysis.pdf:pdf},
  isbn            = {3021077226},
  keywords        = {computational intelligence,machine learning,multi-scale,object oriented classification,remote sensing},
  mendeley-groups = {Masterarbeit/Klassifikatoren},
}

@Article{Wang2011,
  author   = {Wang, Huanjing and Khoshgoftaar, Taghi M. and Seliya, Naeem},
  journal  = {Proceedings of the 24th International Florida Artificial Intelligence Research Society, FLAIRS - 24},
  title    = {{How many software metrics should be selected for defect prediction?}},
  year     = {2011},
  number   = {Mi},
  pages    = {69--74},
  abstract = {A software practitioner is interested in the solution to "for a given project, what is the minimum number of software metrics that should be considered for building an effective defect prediction model?" During the development life cycle various software metrics are collected for different reasons. In the case of a metrics-based defect prediction model, an intelligent selection of software metrics prior to building defect predictors is likely to improve model performance. This study utilizes the proposed threshold-based feature selection technique to remove irrelevant and redundant software metrics (a.k.a. features or attributes). A comparative investigation is presented for evaluating the size of the selected feature subsets. The case study is based on software measurement data obtained from a real-world project, and the defect predictors are trained using three commonly used classifiers. The empirical case study results demonstrate that an effective defect predictor can be built with only three metrics; and moreover, model performances improved when over 98.5{\%} of the software metrics were eliminated. Copyright {\textcopyright} 2011, Association for the Advancement of Artificial Intelligence. All rights reserved.},
  file     = {:D$\backslash$:/OneDrive - Universit{\"{a}}t Koblenz/MA/Literatur/Metriken/Wang, Khoshgoftaar, Seliya{\_}How many software metrics should be selected for defect prediction{\_}2011.pdf:pdf},
  isbn     = {9781577355014},
  keywords = {General Conference Papers},
}

@InProceedings{Wang2012,
  author    = {Jun Wang and Beijun Shen and Yuting Chen},
  booktitle = {2012 12th International Conference on Quality Software},
  title     = {Compressed C4.5 Models for Software Defect Prediction},
  year      = {2012},
  month     = {aug},
  publisher = {{IEEE}},
  doi       = {10.1109/qsic.2012.19},
}

@InProceedings{Wen2019,
  author    = {Ming Wen and Rongxin Wu and Yepang Liu and Yongqiang Tian and Xuan Xie and Shing-Chi Cheung and Zhendong Su},
  booktitle = {Proceedings of the 2019 27th {ACM} Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering - {ESEC}/{FSE} 2019},
  title     = {Exploring and exploiting the correlations between bug-inducing and bug-fixing commits},
  year      = {2019},
  publisher = {{ACM} Press},
  doi       = {10.1145/3338906.3338962},
}

@Misc{IanWitten,
  author       = {Ian H. Witten},
  howpublished = {Online-Video. Zuletzt abgerufen am 20.03.2020.},
  title        = {Data Mining with WEKA: Cross-valiadation},
  comment      = {Zuletzt abgerufen am 20.03.2020.},
  url          = {https://www.futurelearn.com/courses/data-mining-with-weka/0/steps/25384},
}

@Article{Zhang2016,
  author    = {Zhongheng Zhang},
  title     = {Introduction to machine learning: k-nearest neighbors},
  journal   = {Annals of Translational Medicine},
  year      = {2016},
  volume    = {4},
  number    = {11},
  month     = {jun},
  pages     = {218--218},
  doi       = {10.21037/atm.2016.03.37},
  publisher = {{AME} Publishing Company},
}

@InProceedings{Zimmermann2007,
  author    = {Thomas Zimmermann and Rahul Premraj and Andreas Zeller},
  title     = {Predicting Defects for Eclipse},
  booktitle = {Third International Workshop on Predictor Models in Software Engineering ({PROMISE}{\textquotesingle}07: {ICSE} Workshops 2007)},
  year      = {2007},
  month     = {may},
  publisher = {{IEEE}},
  doi       = {10.1109/promise.2007.10},
}

@Book{Sammut2017,
  editor    = {Claude Sammut and Geoffrey I. Webb},
  publisher = {Springer {US}},
  title     = {Encyclopedia of Machine Learning and Data Mining},
  year      = {2017},
  doi       = {10.1007/978-1-4899-7687-1},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: saveOrderConfig:specified;author;false;bibtexkey;false;abstract;false;}
