-- MySQL dump 10.13  Distrib 8.0.18, for Win64 (x86_64)
--
-- Host: localhost    Database: dataset_evaluation_feat_message
-- ------------------------------------------------------
-- Server version	8.0.18

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `libxml2`
--

DROP TABLE IF EXISTS `libxml2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `libxml2` (
  `name` varchar(255) DEFAULT NULL,
  `release_number` varchar(255) DEFAULT NULL,
  `commit_hash` longtext,
  `commit_author` varchar(255) DEFAULT NULL,
  `commit_msg` longtext,
  `filename` varchar(255) DEFAULT NULL,
  `nloc` varchar(255) DEFAULT NULL,
  `cycomplexity` varchar(255) DEFAULT NULL,
  `lines_added` varchar(255) DEFAULT NULL,
  `lines_removed` varchar(255) DEFAULT NULL,
  `corrective` varchar(255) DEFAULT NULL,
  `bug_introducing` varchar(255) DEFAULT NULL,
  `refactor` varchar(255) DEFAULT NULL,
  `date` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `libxml2`
--

LOCK TABLES `libxml2` WRITE;
/*!40000 ALTER TABLE `libxml2` DISABLE KEYS */;
INSERT INTO `libxml2` VALUES ('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX2.c','1963','668','48','48','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','debugXML.c','2572','784','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','debugXML.c','2572','784','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','globals.c','647','102','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','hash.c','675','214','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','hash.c','675','214','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','DOCBparser.h','52','0','9','9','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','HTMLparser.h','196','0','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','HTMLtree.h','77','0','19','19','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','catalog.h','108','0','35','35','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','catalog.h','108','0','35','35','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','encoding.h','108','0','14','14','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanohttp.h','56','0','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanohttp.h','56','0','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parserInternals.h','238','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlautomata.h','101','0','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlmodule.h','16','0','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlreader.h','298','0','19','20','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlwin32version.h','4','0','4','4','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpath.h','251','0','42','42','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpathInternals.h','254','0','78','78','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpathInternals.h','254','0','78','78','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpointer.h','71','0','23','23','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','pattern.c','1748','509','89','89','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','relaxng.c','8328','2268','49','49','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','rngparser.c','1179','325','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testHTML.c','499','100','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testapi.c','41742','6413','8','8','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','testapi.c','41742','6413','8','8','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','valid.c','4754','1551','95','95','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xinclude.c','1753','537','36','36','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlsave.c','1841','601','23','23','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xmlschemas.c','18721','4678','69','69','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpath.c','9825','3129','3','3','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpointer.c','1900','551','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup\n\nremove all space before tabs and space and tabs at end of lines.','xpointer.c','1900','551','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0\n\n* libxml.spec.in: update\n* doc/*: updated and regenerated\n* libxml2.syms testapi.c: regenerated','testapi.c','41782','6418','56','8','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes\n\nbuilding 2.9.0 on msvc7.1 was failing\n\nthis is because have_config_h is not #defined\nthe patch addresses the above, adds testrecurse.exe and the\nstandard \"make check\" suite of tests to the msvc makefile, and also\nfixes the following (msvc7.1) warnings:\nbuf.c(674) : warning c4028: formal parameter 1 different from\ndeclaration\nlibxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from\ndeclaration','timsort.h','316','75','10','2','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes\n\nbuilding 2.9.0 on msvc7.1 was failing\n\nthis is because have_config_h is not #defined\nthe patch addresses the above, adds testrecurse.exe and the\nstandard \"make check\" suite of tests to the msvc makefile, and also\nfixes the following (msvc7.1) warnings:\nbuf.c(674) : warning c4028: formal parameter 1 different from\ndeclaration\nlibxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from\ndeclaration','timsort.h','316','75','10','2','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','7457c67fb95e9b129f793d48ad5e4142cf0f228b','Daniel Veillard','remove potential calls to exit()','threads.c','565','173','0','2','false','false','false','2012-10-11 12:25:51+08:00'),('libxml2','2.9.0','1abd221be56e535fc2e3b2de27b55a8538a41fc6','Daniel Veillard','add a --pushsmall option to xmllint\n\nto test the push parser with small chunks or 10 bytes','xmllint.c','2727','860','9','4','false','true','false','2012-10-25 15:37:50+08:00'),('libxml2','2.9.0','1abd221be56e535fc2e3b2de27b55a8538a41fc6','Daniel Veillard','add a --pushsmall option to xmllint\n\nto test the push parser with small chunks or 10 bytes','xmllint.c','2727','860','9','4','false','true','false','2012-10-25 15:37:50+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','runtest.c','3178','653','16','6','false','true','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=862969\nthe new code trying to detect excessive input lookup would\njust get wrong sometimes in the case of very large file parsed\ndirectly from memory.','libxml.h','21','0','2','0','true','false','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=862969\nthe new code trying to detect excessive input lookup would\njust get wrong sometimes in the case of very large file parsed\ndirectly from memory.','libxml.h','21','0','2','0','true','false','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=862969\nthe new code trying to detect excessive input lookup would\njust get wrong sometimes in the case of very large file parsed\ndirectly from memory.','libxml.h','21','0','2','0','true','false','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','4ea74a440d6f7ff0f6e2d25a780aee21f86762a8','Daniel Veillard','fix a portability issue for gcc < 3.4.0','timsort.h','316','75','1','1','true','false','false','2012-10-29 10:27:18+08:00'),('libxml2','2.9.0','4ea74a440d6f7ff0f6e2d25a780aee21f86762a8','Daniel Veillard','fix a portability issue for gcc < 3.4.0','timsort.h','316','75','1','1','true','false','false','2012-10-29 10:27:18+08:00'),('libxml2','2.9.0','e4d16d7909d5c9bbff5dc45a19bb75c3269b4f70','Daniel Veillard','xmllint should not load dtd by default when using the reader','xmllint.c','2728','861','2','1','false','false','false','2012-12-21 10:58:14+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=692915\n\nthe new set of converting functions tried to limit the encoding\nconversion of the raw buffer to the consumption one to work in\na more progressive fashion. unfortunately this was bad for\nperformances and led to errors on progressive parsing when\na very large chunk was close to the end of the document. fix\nthe new internal function and switch back to the old way of\nconverting. fix another bug in the process.','enc.h','8','0','1','1','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','a9016c492788eb4792c42b52df0c72b46136787d','Alexey Neyman','fix a few problems with setentityloader\n\n1. setting entity loader does not increment the refcount on the python object\npassed in. this works only if the object is not deleted. for example, the\nfollowing code results in segmentation fault in python interpreter when\nattempting to process any document:\n\n[[[\ndef register_entity_loader():\n    def entity_loader(url, id, ctxt):\n        ...\n    libxml2.setentityloader(entity_loader\n\nregister_entity_loader()\n]]]\n\n2. setentityloader() does not verify if the passed object is callable. if it\nis not, current implementation attempts to call it anyway and failing that,\nsilently moves on to default entity loader. attached patch makes\nsetentityloader raise valueerror exception if non-callable object is\npassed.\n\n3. in debug mode, pythonexternalentityloader() outputs the result object to\nstderr, while the messages before and after the object (description + newline)\ngo to stdout. attached patch makes them all go to stdout.','libxml.c','2895','582','8','1','true','false','false','2013-02-25 16:07:09+08:00'),('libxml2','2.9.0','c100e69c4b4be13ba760eda45f72165e684c483f','Daniel Veillard','fix schema validation in combination with xsi:nil\n\nbased on thomas gamper <icicle@cg.tuwien.ac.at> findings and\ninitial patch\n\nthere is no point doing a regexp validation of further\ncontent if there actually is no further content because the\nelement is nilled.','xmlschemas.c','18729','4680','17','0','true','false','false','2013-02-28 19:02:32+08:00'),('libxml2','2.9.0','e1631e1cfcdf4bd7e7ec4999ec5aae9675390797','Denis Pauk','few cleanup patches for windows\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=690878\nprovided by cole <coleharrisjohnson@gmail.com>','catalog.c','2520','776','6','4','false','false','false','2013-03-27 09:55:14+08:00'),('libxml2','2.9.0','113384f126155d129387a765beb942725dad50cd','Daniel Veillard','add documentation for xmllint --xpath\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=694822\n\nthis wasn\'t documented in the man page, and there was a typo in\nxmllint help output.','xmllint.c','2728','861','1','1','false','true','false','2013-03-27 11:43:41+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','libxml_wrap.h','139','0','9','0','true','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3\n\nwhile still compiling on recent python2:\n  - change the handling of files, tweak the generator, get the fd\n    instead of the file *, dup it and fdopen based on mode, add a\n    release function on python3 and call to flush from the generated\n    python stubs\n  - switch to using capsules instead of cobjects\n  - fix pystring to pybytes\n  - fix pyint to pylong\n  - tweak the module registration to compile on both versions\n  - drop pyinstance check for passed xmlnodes and instead check\n    attributes presence\n\ndaniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7\n\nneed fixing on the capsule usage, the lack of pybytes,\nlack of io module and the way to access exception details.','libxml_wrap.h','139','0','19','0','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7\n\nneed fixing on the capsule usage, the lack of pybytes,\nlack of io module and the way to access exception details.','types.c','693','164','14','4','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization\n\nreported by petr sumbera <petr.sumbera@oracle.com>\ntwo threads entering xmlinitializedict concurently could lead\nto a lockup due to multiple initializations of the lock used.\nto avoid this problem move this to a new private function\ncalled from xmlonceinit() and deprecate the old initalizer.\nsince threaded programs must call xmlinitparser() and this\nwill lead to dereference of private data and the call to\nxmlonceinit() guaranteed to be unique this should be safe now.','dict.c','756','270','21','6','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization\n\nreported by petr sumbera <petr.sumbera@oracle.com>\ntwo threads entering xmlinitializedict concurently could lead\nto a lockup due to multiple initializations of the lock used.\nto avoid this problem move this to a new private function\ncalled from xmlonceinit() and deprecate the old initalizer.\nsince threaded programs must call xmlinitparser() and this\nwill lead to dereference of private data and the call to\nxmlonceinit() guaranteed to be unique this should be safe now.','dict.c','756','270','21','6','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','e50ba8164eee06461c73cd8abb9b46aa0be81869','Daniel Veillard','improve handling of xmlstopparser()\n\nadd a specific parser error\ntry to stop parsing as quickly as possible','parser.c','10210','3472','65','6','false','true','false','2013-04-11 15:54:51+08:00'),('libxml2','2.9.1','722923bc9b788f028e4221c77138fc66735a3113','Petr Sumbera','fix for compilation with python 2.6.8\n\nremap pycapsule to pycobject based on the macro being available\ninstead of using the python version','libxml_wrap.h','139','0','2','2','true','false','false','2013-05-03 22:25:38+08:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=698550\n\nsomehow the behaviour of the internal parser routine changed\nslightly when encountering cr/lf, which led to a bug when\nparsing document with non-ascii names','parser.c','10218','3476','5','1','true','true','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','6eea2f2c60e6a97491920cdf86b847869a2411dd','Armin K','python: fix compiler warnings when building python3 bindings','libxml.c','2962','592','2','2','true','false','false','2013-06-03 22:03:28+02:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"\n\n https://bugzilla.gnome.org/show_bug.cgi?id=705267','encoding.c','2934','700','2','0','false','false','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"\n\n https://bugzilla.gnome.org/show_bug.cgi?id=705267','testlimits.c','1057','251','6','0','false','false','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"\n\n https://bugzilla.gnome.org/show_bug.cgi?id=705267','xpath.c','9844','3138','363','364','false','true','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','a885f13a675d449e06529f9e68a6826acf45e19c','Gaurav','fix a possible null dereference\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=705400\nin case of allocation error the pointer was dereferenced before the\ntest for a failure','SAX2.c','1976','673','2','2','true','false','false','2013-08-03 22:16:02+08:00'),('libxml2','2.9.1','2205ff4b0d4a70ed986f28b27c4a2037f6f0af1f','Tim Galeckas','xmllint --pretty crashed without following numeric argument\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=674789\n\nwe need to check for null argument before calling atoi()','xmllint.c','2746','863','7','5','false','false','false','2013-08-29 16:44:33+08:00'),('libxml2','2.9.1','2205ff4b0d4a70ed986f28b27c4a2037f6f0af1f','Tim Galeckas','xmllint --pretty crashed without following numeric argument\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=674789\n\nwe need to check for null argument before calling atoi()','xmllint.c','2746','863','7','5','false','false','false','2013-08-29 16:44:33+08:00'),('libxml2','2.9.1','2671b013d88b381d8a9139ef85381234aafc5ce0','Gaurav','fix potential null pointer dereferences in regexp code\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=707749\n\nfix 3 cases where we might dereference null','xmlregexp.c','5832','1971','5','3','true','false','false','2013-09-11 14:59:06+08:00'),('libxml2','2.9.1','2671b013d88b381d8a9139ef85381234aafc5ce0','Gaurav','fix potential null pointer dereferences in regexp code\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=707749\n\nfix 3 cases where we might dereference null','xmlregexp.c','5832','1971','5','3','true','false','false','2013-09-11 14:59:06+08:00'),('libxml2','2.9.1','080a22c5ea395adede98d555d2dab2c85b16b269','Gaurav','avoid a possibility of dangling encoding handler\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=711149\n\nin function:\nint xmlcharencclosefunc(xmlcharencodinghandler *handler)\n\nif the freed handler is any one of handlers[i] list, then it will make that\nhanldlers[i] as dangling. this may lead to crash issues at places where\nhandlers is read.','encoding.c','2945','705','14','2','false','false','false','2013-11-29 23:10:50+08:00'),('libxml2','2.9.1','080a22c5ea395adede98d555d2dab2c85b16b269','Gaurav','avoid a possibility of dangling encoding handler\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=711149\n\nin function:\nint xmlcharencclosefunc(xmlcharencodinghandler *handler)\n\nif the freed handler is any one of handlers[i] list, then it will make that\nhanldlers[i] as dangling. this may lead to crash issues at places where\nhandlers is read.','encoding.c','2945','705','14','2','false','false','false','2013-11-29 23:10:50+08:00'),('libxml2','2.9.1','761c9e99019dfd778352f5d8ed037c5ca0272aa4','Jan Pokorný','get rid of \'replacement character\' unicode chars in xmlschemas.c\n\nmiddle dot pairs (as in [1]) turned to grave accents/backticks,\nsection signs to dollars (for compatibility with ascii).\n\n[1] http://www.w3.org/tr/xmlschema-1/\n\nsigned-off-by: jan pokorný <jpokorny@redhat.com>','xmlschemas.c','18732','4681','274','274','false','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers\n\nno change of semantic','globals.h','160','0','12','5','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers\n\nno change of semantic','xmlIO.h','188','0','1','1','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix\n\nundefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','trio.c','4730','1078','62','52','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability\n\nsupport for va_list declared as an array (cannot be referenced\nexplicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','437f4f5977f023bbaa7e2da781ca233d5c108954','Patrick Monnerat','use specific macros for portability to os/400\n\nsome of the entry points for posix networking calls in os/400\ndiffers slightly due to not using const arguments','nanoftp.c','1401','418','17','17','false','false','false','2013-12-12 15:23:09+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms\n\navailable from http://nchrem.tnw.tudelft.nl/openvms/software2.html','trio.c','4732','1078','10','4','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms\n\navailable from http://nchrem.tnw.tudelft.nl/openvms/software2.html','trio.c','4732','1078','10','4','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms\n\navailable from http://nchrem.tnw.tudelft.nl/openvms/software2.html','triostr.c','1107','188','3','1','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','15d12040ff48c5190addd315092c9262fbe54e91','Daniel Veillard','fix an fd leak in an error case','catalog.c','2522','776','5','0','true','false','false','2014-02-06 10:38:00+01:00'),('libxml2','2.9.1','1af8b7b22e3bb569b2c27642064224bc14a1924a','Nicolas Le Cam','fix compilation with minimum and schematron.\n\nadd a hard dependancy on tree.\ndisable write and close callbacks when output is disabled.','schematron.c','1212','283','2','0','true','false','false','2014-02-10 10:33:31+08:00'),('libxml2','2.9.1','52010c639a5da3d40ef73d9aff5c43c3a642661c','Nicolas Le Cam','compile out use of xmlvalidatencname() when not available.\n\nfix compilation with minimum and valid.','SAX2.c','1976','674','2','0','false','false','false','2014-02-10 10:36:20+08:00'),('libxml2','2.9.1','41586ca6674d2fae32b17156494cb6f244ac1170','Nicolas Le Cam','fix compilation with minimum and xinclude.\n\nxinclude needs xmladdnextsibling().\ncompile out use of xmllocationsetptr when xptr is disabled.\ninclude xpath header.','xinclude.c','1754','536','2','1','true','false','false','2014-02-10 10:36:40+08:00'),('libxml2','2.9.1','23243301a68ac56cc5dbfdcf2271589bd46fa71c','Daniel Veillard','xml shell command \"cd\" does not handle \"/\" at end of path\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=731832\nsmall fix','debugXML.c','2575','785','5','0','false','false','false','2014-07-14 17:59:31+08:00'),('libxml2','2.9.1','5777ae75ee0382149971a5bc2094f9d14e7e11f8','Philip Withnall','runtest: fix a memory leak on parse failure\n\ncoverity issue: #60439\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=731990','runtest.c','3180','653','4','1','true','false','false','2014-07-26 20:16:33+08:00'),('libxml2','2.9.1','42870f46ccf36f83a55fde03344657d360ba0793','Daniel Veillard','add couple of missing null checks\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=733710\nreported by gaurav but with slightly different fixes','tree.c','6362','2424','4','0','false','false','false','2014-07-26 21:04:54+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.h','8','0','40','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.h','8','0','40','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','5621c81b49cf2c2eb7b110d862f4b52b916f82b2','Patrick Monnerat','os400: easy character transcoding support','transcode.h','14','0','43','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.c','114','16','211','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.c','114','16','211','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.h','91','0','141','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.h','91','0','141','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','rpgsupport.c','131','26','29','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','rpgsupport.h','95','0','8','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','bce6a61e68eca99575d4720a9b524ecbc30b04b1','Patrick Monnerat','os400: use c macros to implement equivalent rpg support procedures.','rpgsupport.c','130','19','5','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.c','147','22','34','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.c','147','22','34','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.h','101','0','9','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','d319eb922358754f0601ddde97e8f09449477d00','Gaurav Gupta','fix enum check and missing break\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=737403\n\nin file xmlreader.c\n1. an enum is checked to proper value instead of checking like a boolean.\n2. missing break statement added.','xmlreader.c','3841','1280','3','2','true','false','false','2014-10-06 12:24:17+08:00'),('libxml2','2.9.1','f985ada79027570d5e3f0d1b29c8ecf23921044a','Daniel Veillard','preparing for upcoming release of 2.9.2\n\nmoving configure.in to configure.ac since all tools complain about it','configure.ac','1562','0','1663','0','false','true','false','2014-10-09 23:59:36+08:00'),('libxml2','2.9.2','f985ada79027570d5e3f0d1b29c8ecf23921044a','Daniel Veillard','preparing for upcoming release of 2.9.2\n\nmoving configure.in to configure.ac since all tools complain about it','configure.ac','1562','0','1663','0','false','true','false','2014-10-09 23:59:36+08:00'),('libxml2','2.9.2','d0dc58135ac93392ff596e8f9e996a62ed0e42a5','Daniel Veillard','removal of old configure.in','configure.in','None','None','0','1663','false','false','false','2014-10-10 15:35:10+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=689483\n\nit seems there are functions that do use the const qualifier for some of the\narguments, but it seems that there are a lot of functions that don\'t use it and\nprobably should.\n\nso i created a patch against 2.9.0 that makes as much as possible const in\ntree.h, and changed other files as needed.\n\nthere were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually\ndo anything, there the *pointer* is constant not the object it points to. so i\nchanged those to \"const xmlnode *node\".\n\ni also removed some consts, mostly in the copy functions, because those\nfunctions can actually modify the doc or node they copy from','tree.h','823','0','37','37','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=689483\n\nit seems there are functions that do use the const qualifier for some of the\narguments, but it seems that there are a lot of functions that don\'t use it and\nprobably should.\n\nso i created a patch against 2.9.0 that makes as much as possible const in\ntree.h, and changed other files as needed.\n\nthere were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually\ndo anything, there the *pointer* is constant not the object it points to. so i\nchanged those to \"const xmlnode *node\".\n\ni also removed some consts, mostly in the copy functions, because those\nfunctions can actually modify the doc or node they copy from','tree.h','823','0','37','37','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=689483\n\nit seems there are functions that do use the const qualifier for some of the\narguments, but it seems that there are a lot of functions that don\'t use it and\nprobably should.\n\nso i created a patch against 2.9.0 that makes as much as possible const in\ntree.h, and changed other files as needed.\n\nthere were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually\ndo anything, there the *pointer* is constant not the object it points to. so i\nchanged those to \"const xmlnode *node\".\n\ni also removed some consts, mostly in the copy functions, because those\nfunctions can actually modify the doc or node they copy from','tree.c','6364','2427','47','47','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change\n\nthe doc methode for xmldocgetrootelement wasn\'t generated anymore','testapi.c','41872','6435','212','191','true','true','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change\n\nthe doc methode for xmldocgetrootelement wasn\'t generated anymore','testapi.c','41872','6435','212','191','true','true','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','7446445dec0e46a5af821e57fa5ee04405666efd','Yegor Yefremov','xmlmemory: handle realloc properly\n\nif realloc fails, free original pointer.\n\nsigned-off-by: yegor yefremov <yegorslists@googlemail.com>','xmlmemory.c','612','180','5','3','false','false','false','2014-10-13 20:46:37+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode\n\n(after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode\n\n(after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode\n\n(after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','4bb03d7a80057b1df71a2dc07d8569f0b6772e3f','Roumen Petrov','elfgcchack.h: more legacy needs xmlsax2startelement() and xmlsax2endelement()','elfgcchack.h','3183','0','2','2','false','false','false','2014-10-16 11:42:21+08:00'),('libxml2','2.9.2','21fec4999b5f42f2888480dd13896d1f2b33071a','Roumen Petrov','win32/libxml2.def.src after rebuild in doc','libxml2.def.src','1703','0','24','0','false','false','false','2014-10-16 11:44:33+08:00'),('libxml2','2.9.2','21fec4999b5f42f2888480dd13896d1f2b33071a','Roumen Petrov','win32/libxml2.def.src after rebuild in doc','libxml2.def.src','1703','0','24','0','false','false','false','2014-10-16 11:44:33+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','NEWS','2575','0','644','10','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','elfgcchack.h','3183','0','2','2','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"\n\nthis reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7.\nas this break xmlcatalog command\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"\n\nthis reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7.\nas this break xmlcatalog command\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"\n\nthis reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7.\nas this break xmlcatalog command\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','fff8a6b87e05200a0ad0af6f86c2e859c7de9172','Michael Heimpold','threads: use forward declarations only for glibc\n\nfixes bug #704908\n\nthe declarations of pthread functions, used to generate weak references\nto them, fail to suppress macros. thus, if any pthread function has\nbeen provided as a macro, compiling threads.c will fail.\nthis breaks on musl libc, which defines pthread_equal as a macro (in\naddition to providing the function, as required).\n\nprevent the declarations for e.g. musl libc by refining the condition.\n\nthe idea for this solution was borrowed from the alpine linux guys, see\nhttp://git.alpinelinux.org/cgit/aports/tree/main/libxml2/libxml2-pthread.patch\n\nsigned-off-by: michael heimpold <mhei@heimpold.de>','threads.c','570','173','2','2','false','false','false','2014-12-22 11:12:12+08:00'),('libxml2','2.9.2','fff8a6b87e05200a0ad0af6f86c2e859c7de9172','Michael Heimpold','threads: use forward declarations only for glibc\n\nfixes bug #704908\n\nthe declarations of pthread functions, used to generate weak references\nto them, fail to suppress macros. thus, if any pthread function has\nbeen provided as a macro, compiling threads.c will fail.\nthis breaks on musl libc, which defines pthread_equal as a macro (in\naddition to providing the function, as required).\n\nprevent the declarations for e.g. musl libc by refining the condition.\n\nthe idea for this solution was borrowed from the alpine linux guys, see\nhttp://git.alpinelinux.org/cgit/aports/tree/main/libxml2/libxml2-pthread.patch\n\nsigned-off-by: michael heimpold <mhei@heimpold.de>','threads.c','570','173','2','2','false','false','false','2014-12-22 11:12:12+08:00'),('libxml2','2.9.2','8985cde70901c62d3f0f04da225e73b7344a52d7','Martin von Gagern','xmlmemused is not thread-safe\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=747437\njust use the mutex to protect access to those variables','xmlmemory.c','620','180','12','2','false','false','false','2015-04-13 16:32:14+08:00'),('libxml2','2.9.2','b02a167af3d2a47c155bce123820cbb5fa19dc9c','Michael Catanzaro','silence clang\'s -wunknown-attribute\n\nclang doesn\'t have perfect feature compatibility with gcc,\nunfortunately.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=747870','xmlversion.h.in','5','0','1','1','false','false','false','2015-04-26 16:00:05-05:00'),('libxml2','2.9.2','b40c19405e9e069501ffd3b439347a7fdfc4d19d','Fabien Degomme','fix a small error in xmllint --format description\n\nobviously it operates on the output not the input','xmllint.c','2750','866','1','1','true','true','false','2015-10-23 19:35:02+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=757466\n\nproblem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8\nfor https://bugzilla.gnome.org/show_bug.cgi?id=711026','xmlIO.c','2166','717','6','6','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=757466\n\nproblem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8\nfor https://bugzilla.gnome.org/show_bug.cgi?id=711026','xmlIO.c','2166','717','6','6','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=757466\n\nproblem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8\nfor https://bugzilla.gnome.org/show_bug.cgi?id=711026','xzlib.c','578','149','4','2','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','e3b1597421ad7cbeb5939fc3b54f43f141c82366','Daniel Veillard','reuse xmlhaltparser() where it makes sense\n\nunify the various place where either xmlstopparser was called\n(which resets the error as a side effect) and places where we\nused ctxt->instate = xml_parser_eof to stop further processing','parser.c','10355','3523','17','20','false','false','false','2015-11-20 14:59:30+08:00'),('libxml2','2.9.3','e6b97476a0bcc023f6fc05bddcbc140001f9832f','David Kilzer','bug 758572: asan crash in make check <https://bugzilla.gnome.org/show_bug.cgi?id=758572>\n\ninstead of sending a random string length into api methods,\ncompute the string length properly to fix out-of-bounds accesses\ncaught with addresssanitizer turned on.\n\n* testapi.c:\n(test_htmlcreatememoryparserctxt):\n(test_htmlcreatepushparserctxt):\n(test_htmlctxtreadmemory):\n(test_htmlparsechunk):\n(test_htmlreadmemory):\n(test_xmldictexists):\n(test_xmldictlookup):\n(test_xmlcreatepushparserctxt):\n(test_xmlctxtreadmemory):\n(test_xmlctxtresetpush):\n(test_xmlparsechunk):\n(test_xmlparseinnodecontext):\n(test_xmlparsememory):\n(test_xmlreadmemory):\n(test_xmlrecovermemory):\n(test_xmlsaxparsememory):\n(test_xmlsaxparsememorywithdata):\n(test_xmlsaxuserparsememory):\n(test_xmlcreatememoryparserctxt):\n(test_xmlrelaxngnewmemparserctxt):\n(test_xmlbufferadd):\n(test_xmlbufferaddhead):\n(test_xmlbuildqname):\n(test_xmldocdumpformatmemory):\n(test_xmldocdumpformatmemoryenc):\n(test_xmldocdumpmemory):\n(test_xmlnewcdatablock):\n(test_xmlnewdoctextlen):\n(test_xmlnewtextlen):\n(test_xmlnodeaddcontentlen):\n(test_xmlnodesetcontentlen):\n(test_xmlsplitqname3):\n(test_xmlstringlengetnodelist):\n(test_xmltextconcat):\n(test_xmloutputbufferwrite):\n(test_xmlparserinputbuffercreatemem):\n(test_xmlparserinputbuffercreatestatic):\n(test_xmlparserinputbufferpush):\n(test_xmlreaderformemory):\n(test_xmlreadernewmemory):\n(test_xmlschemanewmemparserctxt):\n(test_xmlcharstrndup):\n(test_xmlstrncatnew):\n(test_xmlstrncmp):\n(test_xmlstrndup):\n(test_xmlstrsub):\n(test_xmltextwriterwritebase64):\n(test_xmltextwriterwritebinhex):\n(test_xmltextwriterwriterawlen):','testapi.c','41875','6486','52','49','true','true','false','2016-04-08 10:18:06+08:00'),('libxml2','2.9.3','9811ce7864a5362492ed0e14a8a6df776d5b8413','Jan Pokorný','fix typos: path_{ seaparator -> separator }\n\nsigned-off-by: jan pokorný <jpokorny@redhat.com>','catalog.c','2522','776','4','4','true','false','false','2016-04-15 22:22:43+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}\n\nsigned-off-by: jan pokorný <jpokorny@redhat.com>','xpath.c','9859','3143','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','rpgsupport.h','101','0','7','7','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','rpgsupport.h','101','0','7','7','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.4','c71f9305a99b6aa03cb08fab31106c9c56f1be4f','Patrick Monnerat','dict.h: move xmldictptr definition before includes to allow direct inclusion.','dict.h','40','0','12','6','false','false','false','2016-05-03 13:52:00+08:00'),('libxml2','2.9.4','82b73039dc0eed620621cb699b1140c6e0c89cce','Nick Wellnhofer','fix namespace axis traversal\n\nwhen the namespace axis is traversed in \"tobool\" mode, the traversal\ncan exit early, before visiting all nodes. in this case, the xpath\ncontext still contains a non-null tmpnslist.\n\nthis means that\n\n- the check when to start a new traversal was wrong and\n- the tmpnslist could be leaked.\n\nfixes bug #750037 and, by accident, bug #756075:\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=750037\nhttps://bugzilla.gnome.org/show_bug.cgi?id=756075','xpath.c','9872','3145','9','1','true','false','false','2016-05-05 15:30:00+02:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct\n\ncommit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc\ncpp construct which not understood by apibuild, leading to make dist\nfailures, ask to ignore that construct.','testapi.c','41872','6435','49','52','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','5c37382f0fe298d946f4dad0b4c3626fbd8591e2','David Kilzer','implement \"runtest -u\" mode\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=611807\n\nusing \"make tests\" to add new tests is error prone.\nthis patch implements a \"runtest -u\" mode that makes it much\neasier to create baselines for new tests.','runtest.c','3212','668','43','7','false','false','false','2016-05-22 09:58:30+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>\n\nreviewed by david kilzer.\n\n* htmlparser.c:\n(htmlparsename): add bounds check.\n(htmlparsenamecomplex): ditto.\n* result/html/758605.html: added.\n* result/html/758605.html.err: added.\n* result/html/758605.html.sax: added.\n* runtest.c:\n(pushparsetest): the input for the new test case was so small\n(4 bytes) that htmlparsechunk() was never called after\nhtmlcreatepushparserctxt(), thereby creating a false positive\ntest failure.  fixed by using a do-while loop so we always call\nhtmlparsechunk() at least once.\n* test/html/758605.html: added.','runtest.c','3224','669','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>\n\n* parser.c:\n(xmlparsencnamecomplex): store start position instead of a\npointer to the name since the underlying buffer may change,\nresulting in a stale pointer being used.\n* result/errors/759398.xml: added.\n* result/errors/759398.xml.err: added.\n* result/errors/759398.xml.str: added.\n* test/errors/759398.xml: added test case.','parser.c','10385','3538','4','5','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\ndecorate every method in libxml2 with the appropriate\nlibxml_attr_format(fmt,args) macro and add some cleanups\nfollowing the reports.','xmlerror.h','864','0','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\ndecorate every method in libxml2 with the appropriate\nlibxml_attr_format(fmt,args) macro and add some cleanups\nfollowing the reports.','libxml.h','22','0','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\ndecorate every method in libxml2 with the appropriate\nlibxml_attr_format(fmt,args) macro and add some cleanups\nfollowing the reports.','xmlreader.c','3868','1286','11','5','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\nadds a new xmlescapeformatstring() function to escape composed format\nstrings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\nadds a new xmlescapeformatstring() function to escape composed format\nstrings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=761029\n\nadds a new xmlescapeformatstring() function to escape composed format\nstrings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to\n\nthe old code would invoke the broken xmlxptrrangetofunction. range-to\nisn\'t really a function but a special kind of location step. remove\nthis function and always handle range-to in the xpath code.\n\nthe old xmlxptrrangetofunction could also be abused to trigger a\nuse-after-free error with the potential for remote code execution.\n\nfound with afl-fuzz.\n\nfixes cve-2016-5131.','xpath.c','9881','3149','6','1','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to\n\nthe old code would invoke the broken xmlxptrrangetofunction. range-to\nisn\'t really a function but a special kind of location step. remove\nthis function and always handle range-to in the xpath code.\n\nthe old xmlxptrrangetofunction could also be abused to trigger a\nuse-after-free error with the potential for remote code execution.\n\nfound with afl-fuzz.\n\nfixes cve-2016-5131.','xpath.c','9881','3149','6','1','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=772726\n\n* include/libxml/parser.h: add a new parser flag xml_parse_noxxe\n* elfgcchack.h, xmlio.h, xmlio.c: associated loading routine\n* include/libxml/xmlerror.h: new error raised\n* xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','false','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=772726\n\n* include/libxml/parser.h: add a new parser flag xml_parse_noxxe\n* elfgcchack.h, xmlio.h, xmlio.c: associated loading routine\n* include/libxml/xmlerror.h: new error raised\n* xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','false','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=772726\n\n* include/libxml/parser.h: add a new parser flag xml_parse_noxxe\n* elfgcchack.h, xmlio.h, xmlio.c: associated loading routine\n* include/libxml/xmlerror.h: new error raised\n* xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','false','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local\n\nfor https://bugzilla.gnome.org/show_bug.cgi?id=772726\n\n* include/libxml/parser.h: add a new parser flag xml_parse_noxxe\n* elfgcchack.h, xmlio.h, xmlio.c: associated loading routine\n* include/libxml/xmlerror.h: new error raised\n* xmllint.c: adds --noxxe flag to activate the option','xmlIO.c','2193','723','35','5','false','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','c851970c6ec2166df804b1d551df0998de182fc4','Nick Wellnhofer','rework final handling of xpath results\n\nmove cleanup of xpath stack to xmlxpathfreeparsercontext. this avoids\nmemory leaks if valuepop fails in some error cases. found with\nlibfuzzer and asan.\n\nrework handling of the final xpath result object in\nxmlxpathcompiledevalinternal and xmlxpatheval to avoid useless error\nmessages.','xpath.c','9845','3142','35','57','false','true','false','2017-05-27 16:03:48+02:00'),('libxml2','2.9.4','c851970c6ec2166df804b1d551df0998de182fc4','Nick Wellnhofer','rework final handling of xpath results\n\nmove cleanup of xpath stack to xmlxpathfreeparsercontext. this avoids\nmemory leaks if valuepop fails in some error cases. found with\nlibfuzzer and asan.\n\nrework handling of the final xpath result object in\nxmlxpathcompiledevalinternal and xmlxpatheval to avoid useless error\nmessages.','xpath.c','9845','3142','35','57','false','true','false','2017-05-27 16:03:48+02:00'),('libxml2','2.9.4','aed407c14bb67368f7ff1d691ee566e276ba9a32','Nick Wellnhofer','check for trailing characters in xpath expressions earlier\n\nmove the check for trailing characters from xmlxpatheval to\nxmlxpathevalexpr. otherwise, a valid portion of a syntactically invalid\nexpression would be evaluated before returning an error.','xpath.c','9835','3135','8','16','false','false','false','2017-05-27 16:04:07+02:00'),('libxml2','2.9.4','ff34ba3e88cdd2e83e1c95e0356bbf4bef47ae2e','Nick Wellnhofer','avoid out-of-bound array access in api tests\n\nthe api tests combine string buffers with arbitrary length values which\nmakes asan detect out-of-bound array accesses. even without asan, this\ncould lead to unwanted test failures.\n\nadd a check for \"len\", \"size\", and \"start\" arguments, assuming they\napply to the nearest char pointer. skip the test if they exceed the\nbuffer size. this is a somewhat naive heuristic but it seems to work\nwell.','testapi.c','42046','6551','174','0','false','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references\n\nthere were two bugs where parameter-entity references could lead to an\nunexpected change of the input buffer in xmlparsenamecomplex and\nxmldictlookup being called with an invalid pointer.\n\npercent sign in dtd names\n=========================\n\nthe nextl macro used to call xmlparserhandlepereference. when parsing\n\"complex\" names inside the dtd, this could result in entity expansion\nwhich created a new input buffer. the fix is to simply remove the call\nto xmlparserhandlepereference from the nextl macro. this is safe because\nno users of the macro require expansion of parameter entities.\n\n- xmlparsenamecomplex\n- xmlparsencnamecomplex\n- xmlparsenmtoken\n\nthe percent sign is not allowed in names, which are grammatical tokens.\n\n- xmlparseentityvalue\n\nparameter-entity references in entity values are expanded but this\nhappens in a separate step in this function.\n\n- xmlparsesystemliteral\n\nparameter-entity references are ignored in the system literal.\n\n- xmlparseattvaluecomplex\n- xmlparsechardatacomplex\n- xmlparsecommentcomplex\n- xmlparsepi\n- xmlparsecdsect\n\nparameter-entity references are ignored outside the dtd.\n\n- xmlloadentitycontent\n\nthis function is only called from xmlstringlendecodeentities and\nentities are replaced in a separate step immediately after the function\ncall.\n\nthis bug could also be triggered with an internal subset and double\nentity expansion.\n\nthis fixes bug 766956 initially reported by wei lei and independently by\nchromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone\ninvolved.\n\nxmlparsenamecomplex with xml_parse_old10\n========================================\n\nwhen parsing names inside an expanded parameter entity with the\nxml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the\ngrow macro if the input buffer was exhausted. at the end of the\nparameter entity\'s replacement text, this function would then call\nxmlpopinput which invalidated the input buffer.\n\nthere should be no need to invoke grow in this situation because the\nbuffer is grown periodically every xml_parser_chunk_size characters and,\nat least for utf-8, in xmlcurrentchar. this also matches the code path\nexecuted when xml_parse_old10 is not set.\n\nthis fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050).\nthanks to marcel böhme and thuan pham for the report.\n\nadditional hardening\n====================\n\na separate check was added in xmlparsenamecomplex to validate the\nbuffer size.','runtest.c','3234','670','3','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"\n\nthis reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.\n\nthe new flag doesn\'t work and the change even broke the xml_parse_nonet\noption.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"\n\nthis reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.\n\nthe new flag doesn\'t work and the change even broke the xml_parse_nonet\noption.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"\n\nthis reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.\n\nthe new flag doesn\'t work and the change even broke the xml_parse_nonet\noption.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"\n\nthis reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.\n\nthe new flag doesn\'t work and the change even broke the xml_parse_nonet\noption.','xmlIO.c','2166','717','5','35','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518\n\ntest/html/758518-entity.html exposed a bug in pushparsetest() in\nruntest.c which assumed that an input file was at least 4 bytes long.\nthat test case is only 3 bytes, so we now take the minimum of 4 bytes\nor the length of the test input.  we also now use \'chunksize\' in place\nof the hard-coded value \'1024\' later in the function.','runtest.c','3238','671','12','7','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','01a4b81a036228d7c692f29e5f306ff0d510597f','Nick Wellnhofer','support catalog and threads tests under --without-sax1','runtest.c','3239','672','6','2','false','false','false','2017-06-16 21:27:47+02:00'),('libxml2','2.9.4','01a4b81a036228d7c692f29e5f306ff0d510597f','Nick Wellnhofer','support catalog and threads tests under --without-sax1','testThreads.c','162','29','5','1','false','false','false','2017-06-16 21:27:47+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution\n\nthis detects regressions like bug 760367.','runtest.c','3260','674','27','10','false','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution\n\nthis detects regressions like bug 760367.','runtest.c','3260','674','27','10','false','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution\n\nthis detects regressions like bug 760367.','runtest.c','3260','674','27','10','false','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','1f09aea26d1a0b7343dcb5185a19aa7fa896807f','Nick Wellnhofer','fix compiler warnings in threads.c\n\nuse \'#pragma weak\' to declare weak functions.','threads.c','533','173','17','37','true','false','false','2017-06-17 15:05:34+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes\n\nfixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other\nmisspellings.','buf.c','755','240','2','2','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes\n\nfixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other\nmisspellings.','debugXML.c','2575','785','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes\n\nfixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other\nmisspellings.','debugXML.c','2575','785','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c\n\nintroduce static functions xmlencinputchunk and xmlencoutputchunk\nthat handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c\n\nintroduce static functions xmlencinputchunk and xmlencoutputchunk\nthat handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c\n\nintroduce static functions xmlencinputchunk and xmlencoutputchunk\nthat handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','e5107772ff317875bc08b859900254de058de368','Nick Wellnhofer','fix pathological performance when outputting charrefs\n\nif a character can\'t be represented in the output encoding, it is\nconverted to a character reference. this used to to replace the\ncharacter in the input stream by calling xmlbufaddhead or\nxmlbufferaddhead. these functions shifted the entire input array\naround, leading to quadratic performance when converting a run of\nnon-representable characters. this is most pronounced when dumping to\nmemory.\n\noutput the charref directly instead.\n\nfound with libfuzzer.','encoding.c','2808','657','59','70','true','false','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr\n\nfixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.5','ca8635bfc23d67f6a9cce33733981ee768945b69','Nick Wellnhofer','fix debug dump of streaming xpath expressions\n\nthe debug function xmlxpathdebugdumpcompexpr would crash when\ncalled with a \"streaming\" expression.\n\nfixes bug 787368.','xpath.c','9838','3143','11','4','true','false','false','2017-09-07 15:46:12+02:00'),('libxml2','2.9.5','ca8635bfc23d67f6a9cce33733981ee768945b69','Nick Wellnhofer','fix debug dump of streaming xpath expressions\n\nthe debug function xmlxpathdebugdumpcompexpr would crash when\ncalled with a \"streaming\" expression.\n\nfixes bug 787368.','xpath.c','9838','3143','11','4','true','false','false','2017-09-07 15:46:12+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','threads.c','533','173','2','2','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__\n\n\"linux\" without leading underscores is deprecated and less reliable.','threads.c','533','173','2','2','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows\n\non 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer.\nswitch to ptrdiff_t instead which should be the same size as a pointer\non every somewhat sane platform without requiring c99 types like\nintptr_t.\n\nfixes bug 788312.\n\nthanks to j. peter mugaas for the report and initial patch.','parser.c','10223','3464','9','8','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows\n\ntranslate wsa error codes instead of blindly redefining posix error\ncodes on windows. the redefinitions caused warnings in modern windows\nenvironments, but simply ifdef\'ing out the redefinitions seems like\nthe wrong approach.','nanohttp.c','1151','390','16','2','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','45b0ebdc8d1336092d8dd2e3c77a08fda4dd4e70','Nick Wellnhofer','socklen_t is always int on windows\n\ndefine xml_socklen_t as `int` unconditionally in wsockcompat.h. fixes\ncompiler warnings and removes some duplicated code.','wsockcompat.h','5','0','2','4','false','false','false','2017-10-09 13:57:42+02:00'),('libxml2','2.9.6','bee8f1e47b0072e8ea216ed08ed819df96812a25','Nick Wellnhofer','don\'t include winsock2.h in xmllint.c\n\ni\'m not sure why xmllint.c did include winsock2.h at all. stop\nincluding the header as both mingw and msvc builds don\'t seem to\nrequire it.','xmllint.c','2755','868','0','14','false','false','false','2017-10-09 13:59:44+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','nanoftp.h','74','0','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','win32config.h','36','8','0','5','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','nanoftp.c','1410','422','1','7','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','nanohttp.c','1150','390','1','6','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','threads.c','533','173','1','0','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','timsort.h','312','78','2','2','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','config.h','36','8','0','5','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess\n\ndon\'t include windows.h and wsockcompat.h from config.h but only when\nneeded.\n\ndon\'t define _winsockapi_ manually. this was apparently done to stop\nwindows.h from including winsock.h which is a problem if winsock2.h\nwasn\'t included first. but on mingw, this causes compiler warnings.\ndefine win32_lean_and_mean instead which has the same effect.\n\nalways use the compiler-defined _win32 macro instead of win32.','xmlmodule.c','209','38','2','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','ecbdfa9eb3ee478193deaf6d0bb2400a80ef172d','Nick Wellnhofer','fix unused variable warnings in nanohttp.c\n\nsome variables are only used if certain macros are set. move the\ndeclarations around.','nanohttp.c','1150','390','4','3','true','false','false','2017-10-09 14:35:55+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions\n\nremove \"native\" non-unicode functions which were only needed for\npre-nt systems like windows 95/98.\n\ndon\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','6472dfe337f8cc81c68ce903b81d7ec8a321369d','Nick Wellnhofer','fix a couple of warnings in dict.c and threads.c\n\nonly visible on windows.','threads.c','536','173','7','4','true','true','false','2017-10-09 16:52:15+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision\n\nupgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15\nfrom https://github.com/swenson/sort\n\nremoved all code unrelated to timsort and made minor adjustments for\ncross-platform compatibility.','timsort.h','359','88','331','248','false','true','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','a4864c2f98f2a093402e6a4bb14a10af45025f40','J. Peter Mugaas','fix pointer comparison warnings on 64-bit windows','nanohttp.c','1150','390','2','2','true','false','false','2017-10-21 14:01:10+02:00'),('libxml2','2.9.6','882a165a3f2b275c9679b2a1ef18e0421ec32ef2','J. Peter Mugaas','fix preprocessor conditional in threads.h\n\nmake sure that the preprocessor conditions and types for xmldllmain\nmatch exactly in threads.h and threads.c.','threads.h','43','0','7','2','true','false','false','2017-10-21 14:50:44+02:00'),('libxml2','2.9.6','cf820462b7cd6f5ef443ebf3a71d293a6b00ce2c','Nick Wellnhofer','rework handling of return values in thread tests\n\npass a struct to each thread that contains the filename and the return\nvalue. this avoids casting a dword to a pointer on windows.','runtest.c','3263','674','37','37','false','false','false','2017-10-21 14:52:35+02:00'),('libxml2','2.9.7','4b4135977e82b7c9d3bba87a24fb7b5609312e14','Nick Wellnhofer','skip ebcdic tests if ebcdic isn\'t supported\n\nfixes bug 603432.','runtest.c','3270','676','10','0','false','false','false','2017-11-04 15:25:30+01:00'),('libxml2','2.9.7','4b4135977e82b7c9d3bba87a24fb7b5609312e14','Nick Wellnhofer','skip ebcdic tests if ebcdic isn\'t supported\n\nfixes bug 603432.','runtest.c','3270','676','10','0','false','false','false','2017-11-04 15:25:30+01:00'),('libxml2','2.9.7','0b19f236a263a7b0acacd4ea84dc7237303ee3d9','Joel Hockey','fixed icu to set flush correctly and provide pivot buffer.\n\nby always setting flush=true when doing multiple reads, icu\nwill not correctly handle truncated utf8 chars across read\nboundaries.\n\nthe fix is to set flush=true only on final read, and to\nprovide a pivot buffer which is maintained by libxml\nbetween calls to ucnv_convertex.','encoding.c','2817','658','25','21','true','false','false','2017-11-04 15:25:31+01:00'),('libxml2','2.9.7','0b19f236a263a7b0acacd4ea84dc7237303ee3d9','Joel Hockey','fixed icu to set flush correctly and provide pivot buffer.\n\nby always setting flush=true when doing multiple reads, icu\nwill not correctly handle truncated utf8 chars across read\nboundaries.\n\nthe fix is to set flush=true only on final read, and to\nprovide a pivot buffer which is maintained by libxml\nbetween calls to ucnv_convertex.','encoding.h','111','0','5','0','true','false','false','2017-11-04 15:25:31+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop\n\nupdate xmlnop\'s name to xmlinputreadcallbacknop and its type signature\nto match xmlinputreadcallback.\n\nfixes bug 786134.','libxml.h','24','0','1','1','false','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop\n\nupdate xmlnop\'s name to xmlinputreadcallbacknop and its type signature\nto match xmlinputreadcallback.\n\nfixes bug 786134.','libxml.h','24','0','1','1','false','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures\n\nmake sure that all parameters and return values of hash callback\nfunctions exactly match the callback function type. this is required\nto pass clang\'s control flow integrity checks and to allow compilation\nto asm.js with emscripten.\n\nfixes bug 784861.','entities.c','724','195','11','10','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures\n\nmake sure that all parameters and return values of hash callback\nfunctions exactly match the callback function type. this is required\nto pass clang\'s control flow integrity checks and to allow compilation\nto asm.js with emscripten.\n\nfixes bug 784861.','valid.c','4781','1561','74','46','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures\n\nmake sure that all parameters and return values of hash callback\nfunctions exactly match the callback function type. this is required\nto pass clang\'s control flow integrity checks and to allow compilation\nto asm.js with emscripten.\n\nfixes bug 784861.','xmlschemas.c','18780','4694','40','18','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e5f33e56bafc332fd63f6643b687ebfe14bcba56','Nick Wellnhofer','fix misc callback signatures\n\nfix parameter and return types for xmlc14nisvisiblecallback and\nxmlregexeccallbacks.','xmlschemas.c','18779','4694','6','7','true','false','false','2017-11-09 17:29:22+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling\n\nuse c99 macros nan, infinity, isnan, isinf. if they\'re not available:\n\n- assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan.\n- use c89\'s huge_val for infinity.\n\nremove manual handling of nan, infinity and negative zero in functions\nxmlxpathvalueflipsign and xmlxpathdivvalues.\n\nremove xmlxpathgetsign. all the tests for negative zero can be replaced\nwith a test for negative or positive zero.\n\nsimplify xmlxpathroundfunction.\n\nremove trio dependency.\n\nthis should work on ieee 754 compliant implementations even if the c99\nmacros aren\'t available, but will likely break some ancient platforms.\nif problems arise, my plan is to port the relevant trionan.c solution\nto xpath.c. note that non-compliant implementations are impossible\nto fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','13acadbb1ca1f42a65c6466dca025d4020be192a','Nick Wellnhofer','ignore function pointer cast warnings\n\nuse gcc pragmas as these warnings are enabled by -wpedantic and there\'s\nno way to disable them selectively.','xmlmodule.c','211','38','2','0','false','false','false','2017-11-14 16:01:48+01:00'),('libxml2','2.9.7','ddbb075b70abdc8166f878f039c5efd27a9df3e0','Nick Wellnhofer','fix xmlxpathisnan broken by recent commit','xpath.c','9800','3124','1','1','true','false','false','2017-11-27 14:33:26+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','HTMLparser.c','4770','1393','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','c14n.c','1253','361','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','nanohttp.c','1150','390','8','8','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','wrappers.c','113','14','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','wrappers.h','16','0','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','parserInternals.c','1309','385','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','tree.c','6376','2430','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xlink.c','71','20','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmllint.c','2753','868','2','2','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmllint.c','2753','868','2','2','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xmlsave.c','1841','603','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection\n\nif libz or liblzma are detected with pkg-config, ac_check_headers must\nnot be run because the correct cppflags aren\'t set. it is actually not\nrequired have separate checks for libxml_zlib_enabled and have_zlib_h.\nonly check for libxml_zlib_enabled and remove have_zlib_h macro.\n\nfixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h\n\nthis seems to be an undocumented, internal gcc header added a long time\nago. i don\'t know why it was included, but i think it can be safely\nremoved.','xmlversion.h.in','4','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h\n\nthis seems to be an undocumented, internal gcc header added a long time\nago. i don\'t know why it was included, but i think it can be safely\nremoved.','xmlwin32version.h','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h\n\nthis seems to be an undocumented, internal gcc header added a long time\nago. i don\'t know why it was included, but i think it can be safely\nremoved.','xmlwin32version.h','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h\n\nthis seems to be an undocumented, internal gcc header added a long time\nago. i don\'t know why it was included, but i think it can be safely\nremoved.','xmlwin32version.h.in','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','2677fbf4a4a6dec69ff52265addab713fe48ad1f','Nick Wellnhofer','fix -wtautological-pointer-compare warnings\n\nskip tautological pointer comparisons on pthread systems where we don\'t\nuse the weak symbols hack.','threads.c','543','175','26','11','true','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','2677fbf4a4a6dec69ff52265addab713fe48ad1f','Nick Wellnhofer','fix -wtautological-pointer-compare warnings\n\nskip tautological pointer comparisons on pthread systems where we don\'t\nuse the weak symbols hack.','threads.c','543','175','26','11','true','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','d4049198707f7d7c344632a73119f847b6e5b217','ccpaging','add resource file to windows dll\n\nadd a resource file containing verison information for the windows dll.\nthis is only used by the msvc build for now.','libxml2.rc','32','0','36','0','false','false','false','2017-11-27 16:33:00+01:00'),('libxml2','2.9.8','7abec671473b837f99181442d59edd0cc2ee01d1','Nick Wellnhofer','nan and inf fixes for pre-c99 compilers\n\non some pre-c99 compilers, the nan and infinity macros don\'t expand to\nconstant expressions.\n\nsome msvc versions complain about floating point division by zero in\nconstants.\n\nthanks to fabrice manfroi for the report.','xpath.c','9803','3124','10','9','true','false','false','2018-03-16 15:09:42+01:00'),('libxml2','2.9.8','7abec671473b837f99181442d59edd0cc2ee01d1','Nick Wellnhofer','nan and inf fixes for pre-c99 compilers\n\non some pre-c99 compilers, the nan and infinity macros don\'t expand to\nconstant expressions.\n\nsome msvc versions complain about floating point division by zero in\nconstants.\n\nthanks to fabrice manfroi for the report.','xpath.c','9803','3124','10','9','true','false','false','2018-03-16 15:09:42+01:00'),('libxml2','2.9.8','ebe12882ee7e14fa6463bb07d7de5f5388f09573','Nick Wellnhofer','fix inconsistency in xmlxpathisinf\n\nwe don\'t use huge_val for infinity after the most recent fix.','xpath.c','9803','3124','2','2','true','false','false','2018-04-16 18:18:11+02:00'),('libxml2','2.9.8','e22a83b1d095dac25ce05e1a2d9f263f41d11c68','Nick Wellnhofer','stop using xpath_op_reset\n\nit only sets the context node to null which doesn\'t seem useful and can\neven cause bugs like bug #795299:\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=795299','xpath.c','9772','3114','3','34','false','false','false','2018-04-16 18:20:43+02:00'),('libxml2','2.9.8','665df41dcc6c4c3a609907c979b6c16472593d0d','Nick Wellnhofer','simplify and harden nodeset filtering\n\nif a nodeset to be filtered is empty, it can be returned without popping\nit from the stack.\n\nmake sure to restore the context node in all error paths and never set\nit to null.\n\nsave and restore the context node in rangeto operations.','xpath.c','9679','3109','41','111','false','false','false','2018-04-16 19:45:37+02:00'),('libxml2','2.9.8','8c9daf790abfc06e8ca3a44652542c577bb67d49','Nick Wellnhofer','check return value of nodepush in xmlsax2startelement\n\nif the maximum depth is exceeded, nodepush halts the parser which\nresults in freeing the input buffer since the previous commit. this\ninvalidates the attribute pointers, so the error condition must be\nchecked.\n\nfound by oss-fuzz.','SAX2.c','2000','683','8','2','false','false','false','2018-09-12 13:52:47+02:00'),('libxml2','2.9.8','da35eeae5b92b88d8ebdb64b4b327ac1c2cf1bce','Nick Wellnhofer','add newlines to \'xmllint --xpath\' output\n\nseparate nodes in a node-set with newlines and always add a terminating\nnewline. this is a breaking change but the old behavior of dumping text\nnodes without separator was mostly useless.\n\nalso use buffered i/o when dumping node-sets.','xmllint.c','2754','868','13','12','false','true','false','2018-09-23 01:34:26+02:00'),('libxml2','2.9.9','157cd3aed70845564e2ecc9754f3f826a3c9c65e','Nick Wellnhofer','fix null pointer deref in xmltextreadervalidateentity\n\nfound by oss-fuzz.','xmlreader.c','3874','1287','3','2','true','false','false','2019-01-06 14:05:36+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c\n\ncheck whether all param and return types are known before generating\nfunctions for param types. otherwise, unused functions end up in\ntestapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c\n\ncheck whether all param and return types are known before generating\nfunctions for param types. otherwise, unused functions end up in\ntestapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c\n\ncheck whether all param and return types are known before generating\nfunctions for param types. otherwise, unused functions end up in\ntestapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c\n\ncheck whether all param and return types are known before generating\nfunctions for param types. otherwise, unused functions end up in\ntestapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c\n\napply the same cross-platform modifications as previously in runtest.c.','testThreads.c','220','39','102','31','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c\n\napply the same cross-platform modifications as previously in runtest.c.','testThreadsWin32.c','None','None','0','150','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c\n\napply the same cross-platform modifications as previously in runtest.c.','testThreadsWin32.c','None','None','0','150','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','619534ef2ed501e5206915064a5bc36153a897f7','Nick Wellnhofer','fix windows compiler warning in testc14n.c','testC14N.c','218','53','3','0','true','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','d3de75782504c9136e504c6356bbae52fedf17e5','Nick Wellnhofer','fix nanohttp.c on mingw\n\ncommit e3890546 broke nanohttp.c on (old) mingw. mingw-w64 wasn\'t\naffected.\n\nshould fix #36. thanks to simon sobisch for the report.','wsockcompat.h','5','0','5','0','true','false','false','2019-01-15 12:33:48+01:00'),('libxml2','2.9.9','0f518611542115e0322acb60868750697ca03aab','Nick Wellnhofer','fix compilation with --with-minimum\n\npresence of xmlencodeattributeentities doesn\'t depend on output module.\n\nfixes #52.','save.h','10','0','2','1','true','false','false','2019-04-08 14:04:44+02:00'),('libxml2','2.9.9','5153c7baceca65f575efdcbb0244860d97031f96','Nick Wellnhofer','use break statements in xmlxpathcompopeval\n\nthis prepares for the next commit.','xpath.c','9716','3134','72','61','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','5153c7baceca65f575efdcbb0244860d97031f96','Nick Wellnhofer','use break statements in xmlxpathcompopeval\n\nthis prepares for the next commit.','xpath.c','9716','3134','72','61','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','64115ed62dd01dab81a9157a54738523fe117333','Nick Wellnhofer','optional recursion limit when evaluating xpath expressions\n\nuseful to avoid call stack overflows when fuzzing.','xpath.c','9731','3137','17','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','2d97a97aa515f1bd3efc35c8ea2aa68676c6f8e1','Nick Wellnhofer','optional recursion limit when parsing xpath expressions\n\nuseful to avoid call stack overflows when fuzzing. note that parsing a\nparenthesized expression currently consumes more than 10 stack frames,\nso this limit should be set rather low.','xpath.c','9744','3142','16','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation\n\nconsolidate code paths evaluating xpath predicates and filters.\n\ndon\'t push context node on stack when evaluating predicates. i have no\nidea why this was done. it seems completely useless and trying to pop\nthe context node from a corrupted stack has already caused security\nissues.\n\nfilter nodesets in-place and don\'t create node sets with null gaps which\nallows to simplify merging a great deal. simply move matched nodes\nbackward and create a compact node set.\n\nmerge xmlxpathcompopevalpositionalpredicate into\nxmlxpathcompopevalpredicate.','xpath.c','9443','3077','303','875','false','true','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation\n\nconsolidate code paths evaluating xpath predicates and filters.\n\ndon\'t push context node on stack when evaluating predicates. i have no\nidea why this was done. it seems completely useless and trying to pop\nthe context node from a corrupted stack has already caused security\nissues.\n\nfilter nodesets in-place and don\'t create node sets with null gaps which\nallows to simplify merging a great deal. simply move matched nodes\nbackward and create a compact node set.\n\nmerge xmlxpathcompopevalpositionalpredicate into\nxmlxpathcompopevalpredicate.','xpath.c','9443','3077','303','875','false','true','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','9948a9a3558095d91611382671084c60257a6463','Jérôme Duval','timsort.h: support older gccs\n\ncherry-pick upstream pull request: __builtin_clzll isn\'t available on older gccs','timsort.h','359','88','1','1','false','false','false','2019-05-01 16:31:05+02:00'),('libxml2','2.9.9','9948a9a3558095d91611382671084c60257a6463','Jérôme Duval','timsort.h: support older gccs\n\ncherry-pick upstream pull request: __builtin_clzll isn\'t available on older gccs','timsort.h','359','88','1','1','false','false','false','2019-05-01 16:31:05+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','HTMLparser.c','4770','1393','2','0','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','f209e55107697159b49460f43ef74c735c4bfd5b','Nick Wellnhofer','fix build without reader but with pattern\n\nbroken by commit dbc6b55b.','xmllint.c','2734','867','1','1','true','false','false','2019-06-25 11:45:16+02:00'),('libxml2','2.9.9','37189c08e61ee90e6a1e46276ac724decf467a4b','Nick Wellnhofer','dict.h: gcc 2.95 doesn\'t allow multiple storage classes\n\nthis is a partial revert of commit c71f9305. i\'m not sure what issue\nthis commit was trying to solve but it seems to be related to a\ncircular dependency. it might be related to tree.h being included\nfrom dict.h which is unnecessary.\n\nresolves !22.','dict.h','39','0','6','13','false','false','false','2019-07-08 12:23:13+02:00'),('libxml2','2.9.9','b17e3d1c2b6a6d4f3d365faa9908d2c91ca32420','Daniel Richard G','work around buggy ceil() function on aix\n\naix has a buggy ceil() function that does not handle negative-zero\ncorrectly.\n\ncloses #79.','xpath.c','9430','3069','5','0','false','false','false','2019-08-02 13:18:13+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive\n\nsplit xmlparseelement into subfunctions. use namenspush to store prefix,\nuri and nsnr on the heap, similar to the push parser.\n\ncloses #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive\n\nsplit xmlparseelement into subfunctions. use namenspush to store prefix,\nuri and nsnr on the heap, similar to the push parser.\n\ncloses #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive\n\nsplit xmlparseelement into subfunctions. use namenspush to store prefix,\nuri and nsnr on the heap, similar to the push parser.\n\ncloses #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','libxml.c','2962','592','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','relaxng.c','8386','2299','34','34','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','threads.c','543','175','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','tree.c','6390','2434','28','28','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','xinclude.c','1762','539','7','7','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','xmlregexp.c','5848','1980','32','32','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes\n\ncloses #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','elfgcchack.h','3185','0','10','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','elfgcchack.h','3185','0','10','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','24e3973bc03c15d534b2eac6e70fc2b2bef2b6c0','Nick Wellnhofer','make xmldumpelementcontent non-recursive\n\navoid call stack overflow when dumping deeply nested element\ndeclarations.\n\nfound by oss-fuzz.','valid.c','4785','1561','89','68','false','false','false','2019-10-04 14:42:59+02:00'),('libxml2','2.9.9','b88ae6d2e1c9f22931f59ff1ec490befe201fb26','Nick Wellnhofer','avoid ignored attribute warnings under gcc\n\ngcc doesn\'t support the unsigned-integer-overflow sanitizer.','dict.c','761','271','4','0','false','false','false','2019-10-14 15:40:32+02:00'),('libxml2','2.9.9','b88ae6d2e1c9f22931f59ff1ec490befe201fb26','Nick Wellnhofer','avoid ignored attribute warnings under gcc\n\ngcc doesn\'t support the unsigned-integer-overflow sanitizer.','hash.c','690','216','4','0','false','false','false','2019-10-14 15:40:32+02:00'),('libxml2','2.9.9','40e00bc5174ab61036c893078123467144b05a4a','Nick Wellnhofer','fix integer overflow when counting written bytes\n\ncheck for integer overflow when updating the `written` member of\nstruct xmloutputbuffer in xmlio.c.\n\ncloses #112. resolves !54 and !55.','xmlIO.c','2150','714','12','3','true','false','false','2019-10-14 17:06:20+02:00'),('libxml2','2.9.9','bfc0f674ccf5c3929ce22e29307a6ffae17428ad','Nick Wellnhofer','audit memory error handling in xpath.c\n\nmemory allocation errors in the following functions a often ignored.\nadd todo comments.\n\n- xmlxpathnodesetcreate\n- xmlxpathnodesetadd*\n- xmlxpathnodesetmerge*\n- xmlxpathnodesetdupns\n\nnote that the following functions currently lack a way to propagate\nmemory errors:\n\n- xmlxpathcomparenodesets\n- xmlxpathequalnodesets','xpath.c','9435','3070','34','6','true','false','false','2019-10-20 14:39:46+02:00');
/*!40000 ALTER TABLE `libxml2` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-03-25 16:48:38
