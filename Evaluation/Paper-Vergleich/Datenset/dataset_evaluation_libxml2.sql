-- MySQL dump 10.13  Distrib 8.0.18, for Win64 (x86_64)
--
-- Host: localhost    Database: dataset_evaluation
-- ------------------------------------------------------
-- Server version	8.0.18

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `libxml2`
--

DROP TABLE IF EXISTS `libxml2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `libxml2` (
  `name` varchar(255) DEFAULT NULL,
  `release_number` varchar(255) DEFAULT NULL,
  `commit_hash` longtext,
  `commit_author` varchar(255) DEFAULT NULL,
  `commit_msg` longtext,
  `filename` varchar(255) DEFAULT NULL,
  `nloc` varchar(255) DEFAULT NULL,
  `cycomplexity` varchar(255) DEFAULT NULL,
  `lines_added` varchar(255) DEFAULT NULL,
  `lines_removed` varchar(255) DEFAULT NULL,
  `corrective` varchar(255) DEFAULT NULL,
  `bug_introducing` varchar(255) DEFAULT NULL,
  `refactor` varchar(255) DEFAULT NULL,
  `date` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `libxml2`
--

LOCK TABLES `libxml2` WRITE;
/*!40000 ALTER TABLE `libxml2` DISABLE KEYS */;
INSERT INTO `libxml2` VALUES ('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','HTMLparser.c','4711','1373','25','8','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','53867.html','70','0','6','2','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','Down.html','11','0','4','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','attrents.html','6','0','5','3','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','autoclose.html','4','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','cf_128.html','23','0','15','7','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','doc2.htm','29','2','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','doc3.htm','571','3','210','75','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','entities.html','8','0','4','2','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','entities2.html','8','0','4','2','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','fp40.htm','98','0','16','4','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','html5_enc.html','9','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','liclose.html','14','0','4','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','lt.html','6','0','5','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','noscript.html','10','0','5','5','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','pre.html','6','0','4','2','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','python.html','9','0','4','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','reg1.html','12','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','reg2.html','15','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','reg3.html','16','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','reg4.html','13','0','4','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','repeat.html','7','0','3','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','script.html','10','0','2','1','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','script2.html','17','0','4','3','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','test2.html','35','0','7','4','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','test3.html','57','0','18','14','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','utf8bug.html','201','5','66','34','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','wired.html','539','0','332','156','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','f933c898132f20a50ba39ac6116378b71a01c700','Daniel Veillard','keep non-significant blanks node in html parser  for https://bugzilla.gnome.org/show_bug.cgi?id=681822  regardless if the option html_parse_noblanks is set or not, blank nodes are removed from a html document, for example:  <html>   <head>     <title>this is a test.</title>   </head>   <body>     <p>this is a test.</p>   </body> </html>  is read as:  <html><head><title>this is a test.</title></head><body>     <p>this is a test.</p>   </body></html>  this changes the default behaviour but the old behaviour is available as expected when using the parser flag html_parse_noblanks  based on original patch from igor ignatyuk <igor_ignatiouk@hotmail.com>  * htmlparser.c: change various places in the parser where ignorable_space   sax callback was called without checking for the parser flag preference * xmllint.c: make sure we use the new flag even for html parsing * result/html/*: this modifies the output of a number of tests','xmllint.c','2721','858','3','2','false','false','false','2012-09-07 19:32:12+08:00'),('libxml2','2.9.0','e00778b492030d3778011e68e6cd024c9c601a0f','Daniel Veillard','followup to libxml2 docs/examples cleanup patch','Makefile.am','109','0','117','116','false','false','false','2012-09-08 21:09:26+08:00'),('libxml2','2.9.0','e00778b492030d3778011e68e6cd024c9c601a0f','Daniel Veillard','followup to libxml2 docs/examples cleanup patch','examples.xml','751','0','11','11','false','false','false','2012-09-08 21:09:26+08:00'),('libxml2','2.9.0','e00778b492030d3778011e68e6cd024c9c601a0f','Daniel Veillard','followup to libxml2 docs/examples cleanup patch','index.py','273','65','19','19','false','false','false','2012-09-08 21:09:26+08:00'),('libxml2','2.9.0','429d3a0aae2eda7ba9451f9c9f8523c61cc0368b','Csaba Raduly','allow to set the quoting character of an xmlwriter  it\'s otherwise impossible to set the quoting character of attribute values of an xmlwriter.','xmlwriter.h','349','0','4','0','false','false','false','2012-09-11 11:52:46+08:00'),('libxml2','2.9.0','429d3a0aae2eda7ba9451f9c9f8523c61cc0368b','Csaba Raduly','allow to set the quoting character of an xmlwriter  it\'s otherwise impossible to set the quoting character of attribute values of an xmlwriter.','setup.py','None','None','0','0','false','false','false','2012-09-11 11:52:46+08:00'),('libxml2','2.9.0','429d3a0aae2eda7ba9451f9c9f8523c61cc0368b','Csaba Raduly','allow to set the quoting character of an xmlwriter  it\'s otherwise impossible to set the quoting character of attribute values of an xmlwriter.','xmlwriter.c','3150','723','20','0','false','false','false','2012-09-11 11:52:46+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','DOCBparser.c','136','20','6','6','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','HTMLparser.c','4711','1373','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','HTMLtree.c','766','269','18','18','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX.c','123','7','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX2.c','1963','668','48','48','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','c14n.c','1248','363','313','313','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','catalog.c','2520','776','42','42','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','chvalid.c','205','19','82','82','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','debugXML.c','2572','784','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','debugXML.c','2572','784','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','general.html','38','0','1','1','false','true','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2-parser.html','762','0','2','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2-tree.html','1588','0','6','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2-xmlmodule.html','97','0','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2-xmlregexp.html','280','1','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2-xmlschemas.html','314','0','16','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','libxml2.devhelp','3567','0','27','0','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','symbols.xml','1764','0','1','0','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','encoding.c','2932','697','3','3','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','entities.c','721','195','12','12','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','error.c','646','228','29','29','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','globals.c','647','102','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','hash.c','675','214','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','hash.c','675','214','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','DOCBparser.h','52','0','9','9','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','HTMLparser.h','196','0','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','HTMLtree.h','77','0','19','19','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX.h','135','0','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','SAX2.h','141','0','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','c14n.h','43','0','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','catalog.h','108','0','35','35','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','catalog.h','108','0','35','35','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','debugXML.h','128','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','encoding.h','108','0','14','14','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','hash.h','123','0','24','24','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','list.h','78','0','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.h','56','0','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.h','56','0','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.h','56','0','13','13','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.h','659','0','70','70','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parserInternals.h','238','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','schemasInternals.h','308','0','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','schematron.h','47','0','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','tree.h','823','0','149','149','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','valid.h','294','0','72','72','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xlink.h','72','0','7','7','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.h','188','0','61','61','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlautomata.h','101','0','22','22','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlexports.h','0','0','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlmodule.h','16','0','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlreader.h','298','0','19','20','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlschemas.h','135','0','4','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlschemastypes.h','123','0','20','20','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlstring.h','100','0','3','3','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlwin32version.h','4','0','4','4','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlwriter.h','349','0','0','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpath.h','251','0','42','42','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpathInternals.h','254','0','78','78','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpathInternals.h','254','0','78','78','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpointer.h','71','0','23','23','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','legacy.c','656','161','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','list.c','403','100','38','38','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanoftp.c','1401','418','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','nanohttp.c','1126','380','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parser.c','10113','3426','178','178','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','parserInternals.c','1287','383','26','26','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','pattern.c','1748','509','89','89','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','setup.py','None','None','0','0','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','relaxng.c','8328','2268','49','49','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','rngparser.c','1179','325','32','32','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','runsuite.c','981','201','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','runxmlconf.c','475','104','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','schematron.c','1212','283','17','17','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testAutomata.c','270','81','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testC14N.c','217','53','47','47','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testHTML.c','499','100','15','15','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testModule.c','41','5','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testOOM.c','291','71','6','6','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testOOMlib.c','147','29','14','14','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testRegexp.c','345','111','9','9','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testRelax.c','132','33','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSAX.c','737','157','11','11','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testSchemas.c','123','30','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testThreadsWin32.c','121','20','3','3','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testXPath.c','176','49','7','7','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testapi.c','41742','6413','8','8','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testapi.c','41742','6413','8','8','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testchar.c','415','121','6','6','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','testlimits.c','1057','250','9','9','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','trio.c','4730','1078','148','148','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','trionan.c','401','100','37','37','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','trionan.h','20','0','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','triostr.c','1106','188','73','73','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','valid.c','4754','1551','95','95','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xinclude.c','1753','537','36','36','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xlink.c','71','20','5','5','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlIO.c','2151','707','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlcatalog.c','509','164','12','12','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlmemory.c','611','181','1','1','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlmodule.c','209','37','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlreader.c','3841','1282','2','2','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlregexp.c','5830','1968','116','116','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlsave.c','1841','601','23','23','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlsave.c','1841','601','23','23','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlschemas.c','18721','4678','69','69','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlschemastypes.c','4318','1584','167','167','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlstring.c','524','198','17','17','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlunicode.c','1616','360','635','635','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xmlwriter.c','3150','723','8','8','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpath.c','9825','3129','3','3','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpointer.c','1900','551','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','f8e3db0445a1bc8cfe3f77326b07ec161482caa2','Daniel Veillard','big space and tab cleanup  remove all space before tabs and space and tabs at end of lines.','xpointer.c','1900','551','34','34','false','false','false','2012-09-11 13:26:36+08:00'),('libxml2','2.9.0','742a0bbbcc3fc285833a406d53c5df96aceb51b3','Daniel Veillard','keep libxml2.syms when running \"make distclean\"','Makefile.am','1161','0','1','1','false','false','false','2012-09-11 13:37:30+08:00'),('libxml2','2.9.0','7651606f316c366a6d66358b72b3527a829fb7fe','Daniel Veillard','various cleanups to avoid compiler warnings','SAX2.c','1963','668','1','1','false','true','false','2012-09-11 14:02:08+08:00'),('libxml2','2.9.0','7651606f316c366a6d66358b72b3527a829fb7fe','Daniel Veillard','various cleanups to avoid compiler warnings','entities.c','723','195','4','1','false','false','false','2012-09-11 14:02:08+08:00'),('libxml2','2.9.0','7651606f316c366a6d66358b72b3527a829fb7fe','Daniel Veillard','various cleanups to avoid compiler warnings','timsort.h','316','75','8','7','false','false','false','2012-09-11 14:02:08+08:00'),('libxml2','2.9.0','7651606f316c366a6d66358b72b3527a829fb7fe','Daniel Veillard','various cleanups to avoid compiler warnings','xpath.c','9823','3129','2','3','false','false','false','2012-09-11 14:02:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk0.html','301','0','4','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk1.html','382','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk10.html','674','0','1','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk11.html','339','0','6','2','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk12.html','927','0','9','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk13.html','680','0','10','32','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk14.html','471','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk15.html','454','0','5','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk16.html','374','0','4','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk17.html','580','0','12','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk18.html','463','0','5','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk19.html','373','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk21.html','400','0','6','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk22.html','599','0','5','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk23.html','667','0','6','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk24.html','1001','0','29','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk25.html','452','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk26.html','331','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk27.html','349','0','8','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk28.html','564','0','5','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk29.html','131','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk3.html','360','0','2','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk4.html','350','0','4','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk6.html','294','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk7.html','329','0','3','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk8.html','307','0','3','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIchunk9.html','273','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIconstructors.html','594','0','7','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIfiles.html','3586','0','28','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIfunctions.html','2342','0','26','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','APIsymbols.html','3582','0','28','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2-xmlwriter.html','478','0','8','3','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2-xpath.html','528','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2-xpathInternals.html','759','0','9','9','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2.devhelp','3569','0','2','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','index.html','14','0','3','3','false','true','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','book1.html','13','0','1','1','false','true','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','index.html','13','0','1','1','false','true','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-lib.html','13','0','1','1','false','true','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-parser.html','559','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-tree.html','989','0','5','2','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xmlmodule.html','38','0','2','2','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xmlregexp.html','143','1','1','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xmlschemas.html','185','0','14','2','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xmlwriter.html','261','0','4','1','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xpath.html','310','0','1','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml-xpathInternals.html','394','0','7','7','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2-api.xml','18483','1','16','6','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2-refs.xml','32149','0','12','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2.xsa','145','0','130','47','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','news.html','1941','0','130','7','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','xml.html','5486','0','138','10','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml.spec.in','74','0','2','2','false','true','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','libxml2.syms','1797','0','3','0','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','38bbd3412d1c2a2016cf5a1a221ad4010216d28e','Daniel Veillard','release of libxml2-2.9.0  * libxml.spec.in: update * doc/*: updated and regenerated * libxml2.syms testapi.c: regenerated','testapi.c','41782','6418','56','8','false','false','false','2012-09-11 15:00:08+08:00'),('libxml2','2.9.0','5d04ad11a8adb38537dc8ceb69416c0f6ca2b1b8','Daniel Veillard','downgrade autoconf requirement to 2.63  it was automatically bumped to 2.68 and that\'s not needed','configure.in','1404','0','1','1','false','false','false','2012-09-11 17:17:15+08:00'),('libxml2','2.9.0','81d7a8245cf9a31a49499a5a195c2b89e6f91180','Jan Pokorný','fix typos in parser comments  signed-off-by: jan pokorný <jpokorny@redhat.com>','parser.c','10113','3426','2','2','true','false','false','2012-09-13 22:40:28+08:00'),('libxml2','2.9.0','e7715a5963afebfb027120db6914926ec9a7373d','Wouter Van Rooy','rand_seed should be static in dict.c  for https://bugzilla.gnome.org/show_bug.cgi?id=683933 rand_seed should be a static variable in dict.c  we ran into a problem with another library that exports rand_seed as a function. combined with 2.7.8 this was not a problem but later versions have this problem.','dict.c','753','269','1','1','false','false','false','2012-09-14 14:39:42+08:00'),('libxml2','2.9.0','3f6cfbd1d38d0634a2ddcb9a0a13e1b5a2195a5e','Friedrich Haubensak','fix a thread portability problem  cannot compile libxml2-2.9.0 using studio 12.1 compiler on solaris 10  i.m.o. structure initializer (as pthread_once_init) cannot be used in a structure assignment anyway','threads.c','567','173','2','1','true','false','false','2012-09-15 17:21:23+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes  building 2.9.0 on msvc7.1 was failing  this is because have_config_h is not #defined the patch addresses the above, adds testrecurse.exe and the standard \"make check\" suite of tests to the msvc makefile, and also fixes the following (msvc7.1) warnings: buf.c(674) : warning c4028: formal parameter 1 different from declaration libxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from declaration','tree.h','823','0','1','1','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes  building 2.9.0 on msvc7.1 was failing  this is because have_config_h is not #defined the patch addresses the above, adds testrecurse.exe and the standard \"make check\" suite of tests to the msvc makefile, and also fixes the following (msvc7.1) warnings: buf.c(674) : warning c4028: formal parameter 1 different from declaration libxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from declaration','timsort.h','316','75','10','2','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes  building 2.9.0 on msvc7.1 was failing  this is because have_config_h is not #defined the patch addresses the above, adds testrecurse.exe and the standard \"make check\" suite of tests to the msvc makefile, and also fixes the following (msvc7.1) warnings: buf.c(674) : warning c4028: formal parameter 1 different from declaration libxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from declaration','timsort.h','316','75','10','2','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','bbe194518fbe67bb8d629c59bcd74f18fee3fd1c','Daniel Richard','windows build fixes  building 2.9.0 on msvc7.1 was failing  this is because have_config_h is not #defined the patch addresses the above, adds testrecurse.exe and the standard \"make check\" suite of tests to the msvc makefile, and also fixes the following (msvc7.1) warnings: buf.c(674) : warning c4028: formal parameter 1 different from declaration libxml2\\timsort.h(71) : warning c4028: formal parameter 1 different from declaration','Makefile.msvc','382','0','12','3','true','false','false','2012-09-18 11:15:06+08:00'),('libxml2','2.9.0','7e86eb5d4b1d3fa0e97a90661e098e641b4cde99','Daniel Veillard','cleanup the copyright to be pure mit licence wording','Copyright','19','0','5','9','false','false','false','2012-09-20 21:46:19+08:00'),('libxml2','2.9.0','713434d2309da469d64b35e163ea6556dadccada','Daniel Veillard','silence a clang warning  as reported by hans wennborg <hans@chromium.org>','xpath.c','9823','3129','1','1','false','false','false','2012-09-26 10:21:06+08:00'),('libxml2','2.9.0','7457c67fb95e9b129f793d48ad5e4142cf0f228b','Daniel Veillard','remove potential calls to exit()','threads.c','565','173','0','2','false','false','false','2012-10-11 12:25:51+08:00'),('libxml2','2.9.0','87b4d6f6105658a99b976f812223c8edf4469265','Daniel Veillard','spec cleanups and a fix for multiarch support','libxml.spec.in','81','0','36','19','true','true','false','2012-10-11 14:44:22+08:00'),('libxml2','2.9.0','87b4d6f6105658a99b976f812223c8edf4469265','Daniel Veillard','spec cleanups and a fix for multiarch support','xml2-config.in','91','2','6','1','true','false','false','2012-10-11 14:44:22+08:00'),('libxml2','2.9.0','6c91aa384f48ff6d406553a6dd47fd556c1ef2e6','Daniel Veillard','fix a regression in 2.9.0 breaking validation while streaming  https://bugzilla.gnome.org/show_bug.cgi?id=684774 with help from kjell ahlstedt <kjell.ahlstedt@bredband.net>','SAX2.c','1963','668','1','1','true','false','false','2012-10-25 15:33:59+08:00'),('libxml2','2.9.0','6c91aa384f48ff6d406553a6dd47fd556c1ef2e6','Daniel Veillard','fix a regression in 2.9.0 breaking validation while streaming  https://bugzilla.gnome.org/show_bug.cgi?id=684774 with help from kjell ahlstedt <kjell.ahlstedt@bredband.net>','parser.c','10116','3427','5','2','true','false','false','2012-10-25 15:33:59+08:00'),('libxml2','2.9.0','1abd221be56e535fc2e3b2de27b55a8538a41fc6','Daniel Veillard','add a --pushsmall option to xmllint  to test the push parser with small chunks or 10 bytes','xmllint.c','2727','860','9','4','false','true','false','2012-10-25 15:37:50+08:00'),('libxml2','2.9.0','1abd221be56e535fc2e3b2de27b55a8538a41fc6','Daniel Veillard','add a --pushsmall option to xmllint  to test the push parser with small chunks or 10 bytes','xmllint.c','2727','860','9','4','false','true','false','2012-10-25 15:37:50+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','AttributeDefaultLegal.rdr','12','0','12','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','AttributeNmtokens.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','DuplicateType.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid2.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid3.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid4.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid5.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid6.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid7.rdr','5','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ElementValid8.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','Enumeration.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','NS1.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','NS2.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','NS3.rdr','9','0','9','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','OneID.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','OneID2.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','OneID3.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','PENesting.rdr','4','0','4','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','PENesting2.rdr','4','0','4','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','UniqueElementTypeDeclaration.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','UniqueElementTypeDeclaration2.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','127772.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','REC-xml-19980210.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','UTF16Entity.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','dia.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','id1.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','id2.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','id3.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','index.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','mixed_ns.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','notes.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ns.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','ns2.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','objednavka.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','rss.xml.err.rdr','3','0','3','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t10.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t11.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t4.dtd.err.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t4.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t4a.dtd.err.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t4a.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t6.dtd.err.rdr','6','0','6','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t6.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t8.xml.err.rdr','13','0','14','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t8a.xml.err.rdr','13','0','14','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t9.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','t9a.xml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','xhtml1.xhtml.err.rdr','None','None','0','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','xlink.xml.err.rdr','4','0','4','0','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','a7982ce272016182afafb6f74f3b312c6e5f7faf','Daniel Veillard','adding streaming validation to runtest checks','runtest.c','3178','653','16','6','false','false','false','2012-10-25 15:39:39+08:00'),('libxml2','2.9.0','711b15d545713b3a34a51ce8163d1162533647c9','Daniel Veillard','fix a bug in the nsclean option of the parser  raised as a side effect of: https://bugzilla.gnome.org/show_bug.cgi?id=663844','parser.c','10116','3427','1','1','true','false','false','2012-10-25 19:23:26+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory  https://bugzilla.redhat.com/show_bug.cgi?id=862969 the new code trying to detect excessive input lookup would just get wrong sometimes in the case of very large file parsed directly from memory.','libxml.h','21','0','2','0','true','true','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory  https://bugzilla.redhat.com/show_bug.cgi?id=862969 the new code trying to detect excessive input lookup would just get wrong sometimes in the case of very large file parsed directly from memory.','libxml.h','21','0','2','0','true','true','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory  https://bugzilla.redhat.com/show_bug.cgi?id=862969 the new code trying to detect excessive input lookup would just get wrong sometimes in the case of very large file parsed directly from memory.','libxml.h','21','0','2','0','true','true','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory  https://bugzilla.redhat.com/show_bug.cgi?id=862969 the new code trying to detect excessive input lookup would just get wrong sometimes in the case of very large file parsed directly from memory.','parser.c','10117','3429','1','0','true','false','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','153cf15905cf4ec080612ada6703757d10caba1e','Daniel Veillard','fix large parse of file from memory  https://bugzilla.redhat.com/show_bug.cgi?id=862969 the new code trying to detect excessive input lookup would just get wrong sometimes in the case of very large file parsed directly from memory.','xmlIO.c','2151','707','1','1','true','false','false','2012-10-26 13:50:47+08:00'),('libxml2','2.9.0','4ea74a440d6f7ff0f6e2d25a780aee21f86762a8','Daniel Veillard','fix a portability issue for gcc < 3.4.0','timsort.h','316','75','1','1','true','false','false','2012-10-29 10:27:18+08:00'),('libxml2','2.9.0','4ea74a440d6f7ff0f6e2d25a780aee21f86762a8','Daniel Veillard','fix a portability issue for gcc < 3.4.0','timsort.h','316','75','1','1','true','false','false','2012-10-29 10:27:18+08:00'),('libxml2','2.9.0','6a36fbe3b3e001a8a840b5c1fdd81cefc9947f0d','Daniel Veillard','fix potential out of bound access','parser.c','10117','3430','1','1','true','false','false','2012-10-29 10:39:55+08:00'),('libxml2','2.9.0','0ad948ede2b5060a144c72e4e27c38d24a272ef4','Tim Starling','define libxml_thread_alloc_enabled via xmlversion.h  otherwise, direct calls to xmlfree() etc. from the application will use a different set of allocation functions to what was used to allocate the memory internally.','configure.in','1406','0','3','1','false','false','false','2012-10-29 14:05:02+08:00'),('libxml2','2.9.0','0ad948ede2b5060a144c72e4e27c38d24a272ef4','Tim Starling','define libxml_thread_alloc_enabled via xmlversion.h  otherwise, direct calls to xmlfree() etc. from the application will use a different set of allocation functions to what was used to allocate the memory internally.','xmlversion.h.in','5','0','9','0','false','false','false','2012-10-29 14:05:02+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','APIchunk18.html','463','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-relaxng.html','278','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-tree.html','1588','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-valid.html','527','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-xmlregexp.html','280','1','3','3','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml-relaxng.html','162','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml-tree.html','989','0','1','1','true','true','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml-valid.html','289','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml-xmlregexp.html','143','1','3','3','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-api.xml','18483','1','6','6','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','libxml2-refs.xml','32149','0','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','parser.c','10117','3430','10','10','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','parserInternals.c','1287','383','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','relaxng.c','8328','2268','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','testapi.c','41782','6418','4','4','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','testlimits.c','1057','250','4','4','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','tree.c','6349','2417','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','valid.c','4754','1551','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','xmlreader.c','3841','1282','1','1','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','fb27e2cd204ddb2cb0163b4b6418cc494889d279','Michael Wood','fix spelling of \"length\".','xmlregexp.c','5830','1968','3','3','true','false','false','2012-10-30 10:18:49+08:00'),('libxml2','2.9.0','8123c4f692c4ba5f64b3c35297c2579c93b8011b','Daniel Veillard','fix broken multi-arch support in xml2-config  partial revert of 87b4d6f6105658a99b976f812223c8edf4469265 coming from fedora/rhel/... but breaking other distros as pointed out by daniel richard','xml2-config.in','86','2','1','6','true','false','false','2012-11-08 16:24:07+08:00'),('libxml2','2.9.0','6f49c73b53facc1c22c82dc2599f4a24bb7141b5','Petr Sumbera','try ibm-037 when looking for ebcdic handlers  http://en.wikipedia.org/wiki/ebcdic_037 as it is another variat of ebcdic','encoding.c','2934','698','2','0','false','false','false','2012-12-12 15:41:30+08:00'),('libxml2','2.9.0','a0571ebeac8bd853f92c2d029a68702e610b940b','Daniel Richard','fix for win32/configure.js and with_thread_alloc  building git master gives me the following error on windows; this patch fixes it:  	icl /ep /nologo /i..\\include /d \"nolibtool\" /d \"_reentrant\" libxml2.def. src > int.msvc\\libxml2.def libxml2.def.src z:\\...\\libxml2-git8123c4f6_debug\\win32\\../include/libxml/xmlversion.h(105): error: unrecognized token   #if @with_thread_alloc@       ^ z:\\...\\libxml2-git8123c4f6_debug\\win32\\../include/libxml/xmlversion.h(105): error: expected an expression   #if @with_thread_alloc@       ^ z:\\...\\libxml2-git8123c4f6_debug\\win32\\../include/libxml/xmlversion.h(105): error: unrecognized token   #if @with_thread_alloc@                         ^ nmake : fatal error u1077: \'icl\' : return code \'0x2\' stop.','configure.js','635','178','2','0','true','false','false','2012-12-12 17:16:00+08:00'),('libxml2','2.9.0','e4d16d7909d5c9bbff5dc45a19bb75c3269b4f70','Daniel Veillard','xmllint should not load dtd by default when using the reader','xmllint.c','2728','861','2','1','false','false','false','2012-12-21 10:58:14+08:00'),('libxml2','2.9.0','cf8f0424db45c43ecda812b7c238ece5e2398107','Dan Winship','fix an error in the progressive dtd parsing code  for https://bugzilla.gnome.org/show_bug.cgi?id=689958 we were looking for the wrong character in the input stream','parser.c','10117','3430','1','1','true','false','false','2012-12-21 11:13:31+08:00'),('libxml2','2.9.0','9c8eaabe83b9973ec97acecb5e499335397c523c','Patrick Gansterer','fix compiler warning after 153cf15905cf4ec080612ada6703757d10caba1e  add missing cast for xmlnop to silence a compiler warning.','parser.c','10117','3430','1','1','true','true','false','2013-01-04 19:48:55+08:00'),('libxml2','2.9.0','eea38159be421dbafbee38f40e239f91734bc713','Daniel Veillard','cleanup on duplicate test expressions  as pointed out by thomas jarosch <thomas.jarosch@intra2net.com>  daniel','xmlreader.c','3839','1280','2','4','false','false','false','2013-01-28 16:55:30+01:00'),('libxml2','2.9.0','2af19f985b911b6dc6ada478ba8d201d2ddc9309','Daniel Veillard','cleanup of a duplicate test  in an and expression, pointed by thomas jarosch <thomas.jarosch@intra2net.com> daniel','debugXML.c','2571','783','0','1','false','false','false','2013-01-28 17:44:53+01:00'),('libxml2','2.9.0','23922c536c97e0eaac4bd7fbe68cbf9fceb66b36','Daniel Veillard','when calling xmlnodedump make sure we grow the buffer quickly  make sure the underlying new buffer allocated use a double-it scheme for the time of the dump.','xmlsave.c','1845','601','4','0','false','false','false','2013-02-11 12:01:05+08:00'),('libxml2','2.9.0','60adeea933de4abeb431e43454db3433a5427cda','Mark Salter','fix rpmbuild --nocheck  if the %check section was omitted some of the file needed for packaging would not be generated, move the generation to the proper place.','libxml.spec.in','79','0','4','4','true','false','false','2013-02-11 12:45:56+08:00'),('libxml2','2.9.0','de0cc20c29cb3f056062925395e0f68d2250a46f','Daniel Veillard','fix some buffer conversion issues  https://bugzilla.gnome.org/show_bug.cgi?id=690202  buffer overflow errors originating from xmlbufgetinputbase in 2.9.0 the pointers from the context input were not properly reset after that call which can do reallocations.','HTMLparser.c','4714','1373','3','0','true','false','false','2013-02-12 16:55:34+08:00'),('libxml2','2.9.0','de0cc20c29cb3f056062925395e0f68d2250a46f','Daniel Veillard','fix some buffer conversion issues  https://bugzilla.gnome.org/show_bug.cgi?id=690202  buffer overflow errors originating from xmlbufgetinputbase in 2.9.0 the pointers from the context input were not properly reset after that call which can do reallocations.','parser.c','10125','3430','11','1','true','false','false','2013-02-12 16:55:34+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','HTMLparser.c','4714','1373','2','2','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','enc.h','8','0','1','1','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','encoding.c','2934','700','4','3','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','parser.c','10127','3432','7','3','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','parserInternals.c','1287','383','1','1','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','bf058dce131751ff8b69d32eae68cf564cd73aef','Daniel Veillard','fix the flushing out of raw buffers on encoding conversions  https://bugzilla.gnome.org/show_bug.cgi?id=692915  the new set of converting functions tried to limit the encoding conversion of the raw buffer to the consumption one to work in a more progressive fashion. unfortunately this was bad for performances and led to errors on progressive parsing when a very large chunk was close to the end of the document. fix the new internal function and switch back to the old way of converting. fix another bug in the process.','xmlIO.c','2151','707','2','2','true','false','false','2013-02-13 18:19:42+08:00'),('libxml2','2.9.0','23f05e0c33987d6605387b300c4be5da2120a7ab','Daniel Veillard','detect excessive entities expansion upon replacement  if entities expansion in the xml parser is asked for, it is possble to craft relatively small input document leading to excessive on-the-fly content generation. this patch accounts for those replacement and stop parsing after a given threshold. it can be bypassed as usual with the huge parser option.','parser.h','660','0','1','0','false','false','false','2013-02-19 10:21:49+08:00'),('libxml2','2.9.0','23f05e0c33987d6605387b300c4be5da2120a7ab','Daniel Veillard','detect excessive entities expansion upon replacement  if entities expansion in the xml parser is asked for, it is possble to craft relatively small input document leading to excessive on-the-fly content generation. this patch accounts for those replacement and stop parsing after a given threshold. it can be bypassed as usual with the huge parser option.','parser.c','10144','3438','38','6','false','false','false','2013-02-19 10:21:49+08:00'),('libxml2','2.9.0','23f05e0c33987d6605387b300c4be5da2120a7ab','Daniel Veillard','detect excessive entities expansion upon replacement  if entities expansion in the xml parser is asked for, it is possble to craft relatively small input document leading to excessive on-the-fly content generation. this patch accounts for those replacement and stop parsing after a given threshold. it can be bypassed as usual with the huge parser option.','parserInternals.c','1289','383','2','0','false','false','false','2013-02-19 10:21:49+08:00'),('libxml2','2.9.0','e32ceb93f425ee852021ccda157fca923a1046b0','Alexey Neyman','python bindings: dom casts everything to xmlnode  i noticed another issue with python bindings of libxml: the access methods do not cast the pointers to specific classes such as xmldtd, xmlentitydecl, etc. for example, with the following document:  <?xml version=\"1.0\"?> <!doctype root [<!element root empty>]> <root/>  the following script:  import libxml2 doc = libxml2.readfile(\"c.xml\", none, libxml2.xml_parse_dtdload) print repr(doc.children)  prints:  <xmlnode (root) object at 0xb74963ec>  with properly cast nodes, it outputs the following:  <xmldtd (root) object at 0xb746352c>  the latter object (xmldtd) enables one to use dtd-specific methods such as debugdumpdtd(), copydtd(), and so on.','libxml.py','473','170','10','10','false','false','false','2013-02-21 16:00:03+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','generator.py','1026','269','2','0','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','libxml.c','2889','581','90','0','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','libxml.py','487','177','25','1','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','libxml_wrap.h','136','0','2','0','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','Makefile.am','71','0','1','0','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','48da90bc4a3809728d08ee9ee8da21d044fbca82','Alexey Neyman','python binding for xmlregisterinputcallback  it is possible to make xmlio handle any protocol by means of xmlregisterinputcallback(). however, that function is currently only available in c api. so, the natural solution seems to be implementing python bindings for the xmlregisterinputcallback.  * python/generator.py: skip xmlpopinputcallbacks * python/libxml.c python/libxml.py python/libxml_wrap.h: implement the   wrappers * python/tests/input_callback.py python/tests/makefile.am: also add a test case','input_callback.py','103','6','128','0','false','false','false','2013-02-25 15:54:25+08:00'),('libxml2','2.9.0','a9016c492788eb4792c42b52df0c72b46136787d','Alexey Neyman','fix a few problems with setentityloader  1. setting entity loader does not increment the refcount on the python object passed in. this works only if the object is not deleted. for example, the following code results in segmentation fault in python interpreter when attempting to process any document:  [[[ def register_entity_loader():     def entity_loader(url, id, ctxt):         ...     libxml2.setentityloader(entity_loader  register_entity_loader() ]]]  2. setentityloader() does not verify if the passed object is callable. if it is not, current implementation attempts to call it anyway and failing that, silently moves on to default entity loader. attached patch makes setentityloader raise valueerror exception if non-callable object is passed.  3. in debug mode, pythonexternalentityloader() outputs the result object to stderr, while the messages before and after the object (description + newline) go to stdout. attached patch makes them all go to stdout.','libxml.c','2895','582','8','1','true','false','false','2013-02-25 16:07:09+08:00'),('libxml2','2.9.0','d749528aa9a5cfcddd6d021e346254c8727f194a','Alexey Neyman','silent the new python test on input  just make it silent if there is no error','input_callback.py','111','6','87','72','true','false','false','2013-02-27 13:11:47+08:00'),('libxml2','2.9.0','19d785b5c76fcd9d7bc2c8d678b05ed83b02f91d','Steve Wolf','xmlctxtreadfile doesn\'t work with literal ipv6 urls  https://bugzilla.gnome.org/show_bug.cgi?id=694185  redhat bug 624626 discusses the new behavior of libxml regarding brackets around ipv6 addresses.  in earlier versions such as 2.6.27, uri.c stripped the brackets (e.g. uri->server == \"fdf2:1e39:73d1:934e::119\"); in the current version it returns ipv6 addresses with brackets intact (e.g. uri->server == \"[fdf2:1e39:73d1:934e::119]\").  thus in 2.9.0, xmlctxtreadfile() has a problem when it is passed a url containing a literal ipv6 address.  xmlctxreadfile() and its subroutines pass uri->server unchanged to getaddrinfo(), which doesn\'t recognize a bracketed ipv6 address, so the read fails.  this strips the [ and ] from ipv6 addresses allowing getaddrinfo() to work properly with such uris.','nanohttp.c','1134','384','11','1','true','false','false','2013-02-28 18:22:46+08:00'),('libxml2','2.9.0','c100e69c4b4be13ba760eda45f72165e684c483f','Daniel Veillard','fix schema validation in combination with xsi:nil  based on thomas gamper <icicle@cg.tuwien.ac.at> findings and initial patch  there is no point doing a regexp validation of further content if there actually is no further content because the element is nilled.','xmlschemas.c','18729','4680','17','0','true','false','false','2013-02-28 19:02:32+08:00'),('libxml2','2.9.0','a09890684c71fcfcc13c2c4c8731cbb6e9d923f8','Gilles Espinasse','fix configure cannot remove messages  this is the other way to solve ./configure cannot remove messages by simply removing rm detection in configure.in  there is already a raw \'rm -f\' at the end on configure.in','configure.in','1405','0','0','1','true','false','false','2013-03-04 22:46:21+08:00'),('libxml2','2.9.0','a3f1e3e5712257fd279917a9158278534e8f4b72','Daniel Veillard','avoid extra processing on entities  if an entity has already been checked for correctness no need to check it on every reference','SAX2.c','1965','668','4','2','false','false','false','2013-03-11 15:59:21+08:00'),('libxml2','2.9.0','a3f1e3e5712257fd279917a9158278534e8f4b72','Daniel Veillard','avoid extra processing on entities  if an entity has already been checked for correctness no need to check it on every reference','parser.c','10146','3439','6','2','false','false','false','2013-03-11 15:59:21+08:00'),('libxml2','2.9.0','a3f1e3e5712257fd279917a9158278534e8f4b72','Daniel Veillard','avoid extra processing on entities  if an entity has already been checked for correctness no need to check it on every reference','att11.sax','19','0','0','2','false','false','false','2013-03-11 15:59:21+08:00'),('libxml2','2.9.0','a3f1e3e5712257fd279917a9158278534e8f4b72','Daniel Veillard','avoid extra processing on entities  if an entity has already been checked for correctness no need to check it on every reference','att11.sax2','18','0','0','2','false','false','false','2013-03-11 15:59:21+08:00'),('libxml2','2.9.0','cff2546f13503ac028e4c1f63c7b6d85f2f2d777','Daniel Veillard','cache presence of \'<\' in entities content  slightly modify how ent->checked is used, and use the lowest bit to keep the information','SAX2.c','1967','670','3','1','false','false','false','2013-03-11 15:59:22+08:00'),('libxml2','2.9.0','cff2546f13503ac028e4c1f63c7b6d85f2f2d777','Daniel Veillard','cache presence of \'<\' in entities content  slightly modify how ent->checked is used, and use the lowest bit to keep the information','entities.h','92','0','2','1','false','false','false','2013-03-11 15:59:22+08:00'),('libxml2','2.9.0','cff2546f13503ac028e4c1f63c7b6d85f2f2d777','Daniel Veillard','cache presence of \'<\' in entities content  slightly modify how ent->checked is used, and use the lowest bit to keep the information','parser.c','10152','3444','18','12','false','false','false','2013-03-11 15:59:22+08:00'),('libxml2','2.9.0','1f6c42cffd8db69fd0243b2baa74104d66a3b05e','Csaba László','fix an old bug in xmlschemavalidateoneelement  recently i have run into the very same problem tiberius duluman did back in wed, 13 may 2009 15:56:55 +0300 ([xml] bug in xmlschemavalidateoneelement function). now i can proof now that his problem is a valid problem. i checked the latest available version of xmlschemas.c (2.9.0.) and the problem is still there! i think i have found a solution to the problem which i\'d like proof with you: my quick solution to the problem is to replace line 27849 in xmlschemas.c (v2.9.0.) in function xmlschemavdocwalk     valroot = xmldocgetrootelement(vctxt->doc); with this one:     valroot = vctxt->validationroot ? vctxt->validationroot : xmldocgetrootelement(vctxt->doc); currently i\'m using version 2.7.8. in windows and this change seems to solve the problem.','xmlschemas.c','18732','4681','4','1','true','false','false','2013-03-18 15:30:00+08:00'),('libxml2','2.9.0','f7aeda24f619daf806a3cfd708c28cc662e45fe7','Daniel Veillard','fix the url of the sax docuemntation from james  as it has moved','xml.html','5486','0','1','1','true','false','false','2013-03-23 10:31:26+08:00'),('libxml2','2.9.0','e1631e1cfcdf4bd7e7ec4999ec5aae9675390797','Denis Pauk','few cleanup patches for windows  https://bugzilla.gnome.org/show_bug.cgi?id=690878 provided by cole <coleharrisjohnson@gmail.com>','catalog.c','2520','776','6','4','false','false','false','2013-03-27 09:55:14+08:00'),('libxml2','2.9.0','8e2098aef7d119ee95228564174d6a87d4183f4a','Mikhail Titov','fix an output buffer flushing conversion bug  for https://bugzilla.gnome.org/show_bug.cgi?id=694982 on a flush operation, everything must be converted','xmlIO.c','2153','708','9','7','true','false','false','2013-03-27 11:00:31+08:00'),('libxml2','2.9.0','113384f126155d129387a765beb942725dad50cd','Daniel Veillard','add documentation for xmllint --xpath  https://bugzilla.gnome.org/show_bug.cgi?id=694822  this wasn\'t documented in the man page, and there was a typo in xmllint help output.','xmllint.1','650','0','417','194','false','false','false','2013-03-27 11:43:41+08:00'),('libxml2','2.9.0','113384f126155d129387a765beb942725dad50cd','Daniel Veillard','add documentation for xmllint --xpath  https://bugzilla.gnome.org/show_bug.cgi?id=694822  this wasn\'t documented in the man page, and there was a typo in xmllint help output.','xmllint.xml','832','0','14','0','false','false','false','2013-03-27 11:43:41+08:00'),('libxml2','2.9.0','113384f126155d129387a765beb942725dad50cd','Daniel Veillard','add documentation for xmllint --xpath  https://bugzilla.gnome.org/show_bug.cgi?id=694822  this wasn\'t documented in the man page, and there was a typo in xmllint help output.','xmllint.c','2728','861','1','1','false','true','false','2013-03-27 11:43:41+08:00'),('libxml2','2.9.0','ab0e35044c0e83936a8042de3dcee328173c273b','Daniel Veillard','activate detection of encoding in external subset  https://bugzilla.gnome.org/show_bug.cgi?id=694228  the ctxt->encoding was percolated down when parsing the external subset leading to failures','SAX2.c','1976','673','9','0','false','false','false','2013-03-27 13:21:38+08:00'),('libxml2','2.9.0','483272f3f004f8538239ff8707b8c6ea02e397c9','Daniel Veillard','added a regression tests from bug 694228 data  provided by mark rowe <mrowe@apple.com>','694228.xml','5','0','5','0','true','false','false','2013-03-27 13:37:14+08:00'),('libxml2','2.9.0','483272f3f004f8538239ff8707b8c6ea02e397c9','Daniel Veillard','added a regression tests from bug 694228 data  provided by mark rowe <mrowe@apple.com>','694228.xml.err','None','None','0','0','true','false','false','2013-03-27 13:37:14+08:00'),('libxml2','2.9.0','483272f3f004f8538239ff8707b8c6ea02e397c9','Daniel Veillard','added a regression tests from bug 694228 data  provided by mark rowe <mrowe@apple.com>','694228.xml.err.rdr','None','None','0','0','true','false','false','2013-03-27 13:37:14+08:00'),('libxml2','2.9.0','483272f3f004f8538239ff8707b8c6ea02e397c9','Daniel Veillard','added a regression tests from bug 694228 data  provided by mark rowe <mrowe@apple.com>','694228.dtd','3','0','3','0','true','false','false','2013-03-27 13:37:14+08:00'),('libxml2','2.9.0','519bc6a3ab82445a8719f548d0450efe02cc9c82','Shaun McCance','add support for xpathregistervariable in python','libxml.c','2917','584','26','0','false','false','false','2013-03-27 15:55:36+08:00'),('libxml2','2.9.0','519bc6a3ab82445a8719f548d0450efe02cc9c82','Shaun McCance','add support for xpathregistervariable in python','libxml2-python-api.xml','350','0','9','0','false','false','false','2013-03-27 15:55:36+08:00'),('libxml2','2.9.0','519bc6a3ab82445a8719f548d0450efe02cc9c82','Shaun McCance','add support for xpathregistervariable in python','types.c','659','147','0','1','false','false','false','2013-03-27 15:55:36+08:00'),('libxml2','2.9.0','215a7296455195c13916ba50dbf020e7ebc3aedc','Daniel Veillard','extend gitignore','.gitignore','121','0','8','0','false','false','false','2013-03-30 22:33:05+08:00'),('libxml2','2.9.0','0ab8ce53024e80f671b135a58086a24bf76bc2eb','Daniel Veillard','switched comment in file to utf-8 encoding','entities.c','723','195','1','1','false','false','false','2013-03-30 22:33:05+08:00'),('libxml2','2.9.0','b8e3f80da742404bffbec2a56c0a91b829132b6f','Daniel Veillard','updated configure.in for python3','configure.in','1495','0','23','20','false','false','false','2013-03-30 22:33:05+08:00'),('libxml2','2.9.0','a5e513a55221fb85d0b474f6f79f26506e2e2c16','Daniel Veillard','fix a uneeded and wrong extra link parameter','Makefile.am','37','0','1','1','true','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3cb1ae26ec845beaea4c3a37eba7c874a7fa21a1','Daniel Veillard','first pass at starting porting to python3','generator.py','1044','277','107','89','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3cb1ae26ec845beaea4c3a37eba7c874a7fa21a1','Daniel Veillard','first pass at starting porting to python3','libxml.py','487','177','16','15','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3cb1ae26ec845beaea4c3a37eba7c874a7fa21a1','Daniel Veillard','first pass at starting porting to python3','setup.py','181','3','9','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3cb1ae26ec845beaea4c3a37eba7c874a7fa21a1','Daniel Veillard','first pass at starting porting to python3','setup.py.in','192','0','9','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','d8a75bffa4dc8e0e3d31c2f87f0f80212f19393c','Daniel Veillard','converting apibuild.py to python3  not finished ....','apibuild.py','1873','725','1629','1629','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','generator.py','1055','281','29','7','true','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','libxml.c','2961','592','140','53','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','libxml_wrap.h','139','0','9','0','true','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','3798c4adbb91f80bef1e9f1b4b61dae72577a244','Daniel Veillard','fix compilation on python3  while still compiling on recent python2:   - change the handling of files, tweak the generator, get the fd     instead of the file *, dup it and fdopen based on mode, add a     release function on python3 and call to flush from the generated     python stubs   - switch to using capsules instead of cobjects   - fix pystring to pybytes   - fix pyint to pylong   - tweak the module registration to compile on both versions   - drop pyinstance check for passed xmlnodes and instead check     attributes presence  daniel','types.c','689','163','162','103','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','6f18465189dbfdf6efb1e6580243918a4f609d1c','Daniel Veillard','a few more fixes for python 3 affecting libxml2.py  need a few changes to the generator and the libxml.py stub','generator.py','1054','281','4','5','true','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','6f18465189dbfdf6efb1e6580243918a4f609d1c','Daniel Veillard','a few more fixes for python 3 affecting libxml2.py  need a few changes to the generator and the libxml.py stub','libxml.py','506','183','33','7','true','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','attribs.py','24','0','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','build.py','51','0','9','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','compareNodes.py','33','0','9','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','ctxterror.py','41','1','6','6','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','cutnpaste.py','30','0','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','dtdvalid.py','23','0','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','error.py','36','1','6','6','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','inbuf.py','22','0','9','4','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','indexes.py','91','12','10','10','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','input_callback.py','116','6','15','10','false','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','nsdel.py','43','4','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','outbuf.py','92','10','27','22','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','push.py','29','0','4','4','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','pushSAX.py','47','8','4','4','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','pushSAXhtml.py','48','8','4','4','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader.py','384','4','95','90','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader2.py','218','3','36','27','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader3.py','131','2','34','29','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader4.py','38','4','11','6','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader5.py','30','0','7','8','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader6.py','87','1','16','11','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader7.py','74','1','9','9','false','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','reader8.py','22','0','4','4','false','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','readererr.py','40','1','13','8','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','readernext.py','72','0','22','17','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','regexp.py','25','0','7','7','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','relaxng.py','39','0','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','resolver.py','33','1','11','6','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','schema.py','42','0','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','serialize.py','128','0','18','18','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','sync.py','106','8','16','16','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','thread2.py','72','6','12','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','tst.py','22','0','5','5','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','tstLastError.py','66','10','10','10','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','tstURI.py','35','0','9','9','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','tstmem.py','27','1','3','3','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','tstxpath.py','49','2','8','8','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','validDTD.py','40','3','5','5','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','validRNG.py','57','3','5','5','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','validSchemas.py','64','3','5','5','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','validate.py','69','1','10','10','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','walker.py','107','1','12','12','false','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','xpath.py','40','0','7','7','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','xpathext.py','40','2','6','6','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','xpathleak.py','56','1','7','7','false','true','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','xpathns.py','20','0','4','4','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','2cb6bf8eb019cc88578093abee3e37a78e7b3020','Daniel Veillard','update all tests for python3 and python2','xpathret.py','41','1','7','7','false','false','false','2013-03-30 22:33:06+08:00'),('libxml2','2.9.0','87f3287d9b00bdc39be032a8a3f2d46860eaf787','Daniel Veillard','fix tree iterators broken by 2to3 script','libxml.py','506','183','4','4','true','false','false','2013-04-01 13:33:42+08:00'),('libxml2','2.9.0','28876afb4e67f9f4292fc2a7134f6b97f0618b7d','Alex Bligh','add xmlxpathsetcontextnode and xmlxpathnodeeval  this patch adds xmlxpathsetcontextnode and xmlxpathnodeeval, which make it easier to evaluation xpath expressions with a context node other than the document root without poking about inside the internals of the context.  this patch is compile-tested only, and is my first libxml2 contribution, so please go easy.  signed-off-by: alex bligh <alex@alex.org.uk>','xpath.h','258','0','7','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','28876afb4e67f9f4292fc2a7134f6b97f0618b7d','Alex Bligh','add xmlxpathsetcontextnode and xmlxpathnodeeval  this patch adds xmlxpathsetcontextnode and xmlxpathnodeeval, which make it easier to evaluation xpath expressions with a context node other than the document root without poking about inside the internals of the context.  this patch is compile-tested only, and is my first libxml2 contribution, so please go easy.  signed-off-by: alex bligh <alex@alex.org.uk>','xpath.c','9841','3136','43','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2-tree.html','1589','0','1','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2-xmlversion.html','247','0','5','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2-xpath.html','538','0','10','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2.devhelp','3572','0','3','0','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2-api.xml','18506','1','24','1','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','libxml2-refs.xml','32176','0','35','8','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','54ae471c147d280a137474c25fd76ca1f566efac','Daniel Veillard','regenerated api, and testapi, rebuild documentation  after the previous commit adding 2 new entry points','testapi.c','41857','6429','92','1','false','false','false','2013-04-01 16:42:12+08:00'),('libxml2','2.9.0','2ff9284325d64d01ac0245ae266ef170c05f0e50','Roumen Petrov','elfgcchack for buf module','buf.c','726','230','3','0','false','false','false','2013-04-01 16:48:44+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','95850fcd75435f828667bf4050c6172e877ba6ad','Roumen Petrov','elfgcchack.h after rebuild in doc','elfgcchack.h','3179','0','174','0','false','false','false','2013-04-01 16:52:42+08:00'),('libxml2','2.9.0','4d7a32959b49dda1b2ba9aea83e5d5886014ac25','Roumen Petrov','rebuild docs:makefile.am','Makefile.am','318','0','1','0','false','false','false','2013-04-01 16:53:27+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','libxml.py','508','183','3','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','libxml_wrap.h','139','0','19','0','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','input_callback.py','116','6','1','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','reader7.py','73','1','0','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','reader8.py','21','0','0','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','walker.py','106','1','0','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','xpathleak.py','56','1','1','1','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','bf4a8f0ea8579f05eea2e6f43df73b2a239d41b3','Daniel Veillard','fix python bindings with versions older than 2.7  need fixing on the capsule usage, the lack of pybytes, lack of io module and the way to access exception details.','types.c','693','164','14','4','true','false','false','2013-04-02 10:27:57+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization  reported by petr sumbera <petr.sumbera@oracle.com> two threads entering xmlinitializedict concurently could lead to a lockup due to multiple initializations of the lock used. to avoid this problem move this to a new private function called from xmlonceinit() and deprecate the old initalizer. since threaded programs must call xmlinitparser() and this will lead to dereference of private data and the call to xmlonceinit() guaranteed to be unique this should be safe now.','dict.c','756','270','21','6','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization  reported by petr sumbera <petr.sumbera@oracle.com> two threads entering xmlinitializedict concurently could lead to a lockup due to multiple initializations of the lock used. to avoid this problem move this to a new private function called from xmlonceinit() and deprecate the old initalizer. since threaded programs must call xmlinitparser() and this will lead to dereference of private data and the call to xmlonceinit() guaranteed to be unique this should be safe now.','dict.c','756','270','21','6','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization  reported by petr sumbera <petr.sumbera@oracle.com> two threads entering xmlinitializedict concurently could lead to a lockup due to multiple initializations of the lock used. to avoid this problem move this to a new private function called from xmlonceinit() and deprecate the old initalizer. since threaded programs must call xmlinitparser() and this will lead to dereference of private data and the call to xmlonceinit() guaranteed to be unique this should be safe now.','libxml.h','22','0','2','0','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','5fe9e9ed1ccf217e11bd3cb99b1c6bb10cc96ba3','Daniel Veillard','remove risk of lockup in dictionary initialization  reported by petr sumbera <petr.sumbera@oracle.com> two threads entering xmlinitializedict concurently could lead to a lockup due to multiple initializations of the lock used. to avoid this problem move this to a new private function called from xmlonceinit() and deprecate the old initalizer. since threaded programs must call xmlinitparser() and this will lead to dereference of private data and the call to xmlonceinit() guaranteed to be unique this should be safe now.','threads.c','568','173','3','0','false','false','false','2013-04-05 23:10:41+08:00'),('libxml2','2.9.0','e50ba8164eee06461c73cd8abb9b46aa0be81869','Daniel Veillard','improve handling of xmlstopparser()  add a specific parser error try to stop parsing as quickly as possible','xmlerror.h','864','0','1','0','true','false','false','2013-04-11 15:54:51+08:00'),('libxml2','2.9.0','e50ba8164eee06461c73cd8abb9b46aa0be81869','Daniel Veillard','improve handling of xmlstopparser()  add a specific parser error try to stop parsing as quickly as possible','parser.c','10210','3472','65','6','true','false','false','2013-04-11 15:54:51+08:00'),('libxml2','2.9.0','b123711189344eb0f8a07acd9d8feff572973db9','Daniel Franke','improve the hashing functions','hash.c','679','214','4','0','false','false','false','2013-04-12 18:53:53+08:00'),('libxml2','2.9.0','9ca816b3a64e7b1bada7baa2cbc09e8937b38215','Jüri Aedla','fix a couple of return without value  error introduced in previous commit !','parser.c','10210','3472','2','2','true','false','false','2013-04-16 22:00:13+08:00'),('libxml2','2.9.0','c0a8dd14f81198947121bb64877f1e6c021bad84','Daniel Veillard','fix a linking error for python bindings  showing up apparently in debian bts distro https://bugzilla.gnome.org/show_bug.cgi?id=685515','Makefile.am','37','0','2','2','true','false','false','2013-04-19 15:02:33+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','configure.in','1495','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk10.html','675','0','2','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk12.html','928','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk13.html','681','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk14.html','472','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk16.html','375','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk18.html','457','0','0','6','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk2.html','416','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk21.html','399','0','0','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk22.html','599','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk23.html','668','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk24.html','1001','0','2','2','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk25.html','451','0','0','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk26.html','332','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk28.html','565','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk4.html','351','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk5.html','293','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk7.html','330','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIconstructors.html','595','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIfiles.html','3590','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIfunctions.html','2347','0','5','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIsymbols.html','3586','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-dict.html','134','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-xmlerror.html','953','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2.devhelp','3573','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-dict.html','58','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-tree.html','990','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xmlerror.html','865','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xmlversion.html','63','0','2','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xpath.html','316','0','8','2','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-api.xml','18508','1','3','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-refs.xml','32175','0','4','5','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','symbols.xml','1768','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2.syms','1802','0','8','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.0','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','setup.py','181','3','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','configure.in','1495','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk10.html','675','0','2','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk12.html','928','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk13.html','681','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk14.html','472','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk16.html','375','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk18.html','457','0','0','6','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk2.html','416','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk21.html','399','0','0','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk22.html','599','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk23.html','668','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk24.html','1001','0','2','2','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk25.html','451','0','0','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk26.html','332','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk28.html','565','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk4.html','351','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk5.html','293','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIchunk7.html','330','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIconstructors.html','595','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIfiles.html','3590','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIfunctions.html','2347','0','5','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','APIsymbols.html','3586','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-dict.html','134','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-xmlerror.html','953','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2.devhelp','3573','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-dict.html','58','0','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-tree.html','990','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xmlerror.html','865','0','1','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xmlversion.html','63','0','2','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml-xpath.html','316','0','8','2','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-api.xml','18508','1','3','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2-refs.xml','32175','0','4','5','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','symbols.xml','1768','0','4','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','libxml2.syms','1802','0','8','0','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','f4e5a6994ed230dfa3fb5b5c3fd94c4993ef1ba7','Daniel Veillard','release of libxml2-2.9.1  * configure.in: bumped version * doc/*: updated the symbols file and regenerated','setup.py','181','3','1','1','false','false','false','2013-04-19 15:36:36+08:00'),('libxml2','2.9.1','704d8c5e9ae911715d575abca03900591d56c040','Alexander Pastukhov','fix an error in xmlcleanupparser  https://bugzilla.gnome.org/show_bug.cgi?id=698582  xmlcleanupparser calls xmlcleanupglobals() and then xmlresetlasterror() but the later reallocate the global data freed by previous call. just swap the two calls.','parser.c','10210','3472','1','1','true','false','false','2013-04-23 13:02:11+08:00'),('libxml2','2.9.1','960f0e275616cadc29671a218d7fb9b69eb35588','Romain Bondue','do not uri escape in server side includes','HTMLtree.c','789','273','38','11','false','false','false','2013-04-23 20:44:55+08:00'),('libxml2','2.9.1','10ec19ab0a49936ca8ca0d6962d24d3f889960a5','dcb','fix missing break on last() function for attributes  pointed out by cppcheck','libxml.c','2962','592','1','0','true','false','false','2013-05-02 16:11:46+08:00'),('libxml2','2.9.1','722923bc9b788f028e4221c77138fc66735a3113','Petr Sumbera','fix for compilation with python 2.6.8  remap pycapsule to pycobject based on the macro being available instead of using the python version','libxml_wrap.h','139','0','2','2','true','false','false','2013-05-03 22:25:38+08:00'),('libxml2','2.9.1','d4a5d98139fb999e04ea962cf500f6e1e2f281ac','Nikolay Sivov','cast encoding name to char pointer to match arg type','parser.c','10210','3472','1','1','false','false','false','2013-05-06 09:00:56+08:00'),('libxml2','2.9.1','0b86537dfa3b0039136ced49c6aab8e50234923f','Alexey Neyman','remove premature xinclude check on uri being relative  as it gives false negatives, see   https://mail.gnome.org/archives/xml/2013-april/msg00023.html','xinclude.c','1753','536','1','1','false','false','false','2013-05-06 10:20:18+08:00'),('libxml2','2.9.1','a75a009d12f64f1bbd4942964d8529f8c44afe5c','Daniel Veillard','xmllint --memory should fail on empty files  exposed by https://bugzilla.gnome.org/show_bug.cgi?id=699896 when doing analysis but a priori unrelated.','xmllint.c','2731','861','4','1','true','false','false','2013-05-08 13:45:48+08:00'),('libxml2','2.9.1','1ba80b7b6f1c89873fa319461954727a7bef2441','Aleksey Sanin','properly quote the namespace uris written out during c14n','c14n.c','1249','363','5','4','false','false','false','2013-05-09 16:02:16+00:00'),('libxml2','2.9.1','63588f476f2dc89d4c6ef70a474d7230fbf4d45e','Daniel Veillard','fix a regression in xmlgetdoccompressmode()  the switch to xzlib had for consequence that the compression level of the input was not gathered anymore in ctxt->input->buf, then the parser compression flags was left to -1 and propagated to the resulting document. fix the i/o layer to get compression detection in xzlib, then carry it in the input buffer and the resulting document    this should fix     https://lsbbugs.linuxfoundation.org/show_bug.cgi?id=3456','parser.c','10214','3476','4','0','true','false','false','2013-05-10 14:01:46+08:00'),('libxml2','2.9.1','63588f476f2dc89d4c6ef70a474d7230fbf4d45e','Daniel Veillard','fix a regression in xmlgetdoccompressmode()  the switch to xzlib had for consequence that the compression level of the input was not gathered anymore in ctxt->input->buf, then the parser compression flags was left to -1 and propagated to the resulting document. fix the i/o layer to get compression detection in xzlib, then carry it in the input buffer and the resulting document    this should fix     https://lsbbugs.linuxfoundation.org/show_bug.cgi?id=3456','xmlIO.c','2161','714','17','0','true','false','false','2013-05-10 14:01:46+08:00'),('libxml2','2.9.1','63588f476f2dc89d4c6ef70a474d7230fbf4d45e','Daniel Veillard','fix a regression in xmlgetdoccompressmode()  the switch to xzlib had for consequence that the compression level of the input was not gathered anymore in ctxt->input->buf, then the parser compression flags was left to -1 and propagated to the resulting document. fix the i/o layer to get compression detection in xzlib, then carry it in the input buffer and the resulting document    this should fix     https://lsbbugs.linuxfoundation.org/show_bug.cgi?id=3456','xzlib.c','563','147','25','0','true','false','false','2013-05-10 14:01:46+08:00'),('libxml2','2.9.1','63588f476f2dc89d4c6ef70a474d7230fbf4d45e','Daniel Veillard','fix a regression in xmlgetdoccompressmode()  the switch to xzlib had for consequence that the compression level of the input was not gathered anymore in ctxt->input->buf, then the parser compression flags was left to -1 and propagated to the resulting document. fix the i/o layer to get compression detection in xzlib, then carry it in the input buffer and the resulting document    this should fix     https://lsbbugs.linuxfoundation.org/show_bug.cgi?id=3456','xzlib.h','6','0','1','0','true','false','false','2013-05-10 14:01:46+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','FAQ.html','296','0','34','17','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','architecture.html','24','0','2','1','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','bugs.html','70','0','4','2','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','catalog.html','261','0','10','5','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','contribs.html','41','0','2','1','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','docs.html','34','0','3','2','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','downloads.html','40','0','6','3','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','encoding.html','217','0','20','10','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','example.html','162','11','2','1','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','help.html','26','0','2','1','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','index.html','76','0','18','256','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','intro.html','32','0','2','1','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','library.html','157','0','26','13','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','news.html','2177','0','381','144','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','python.html','231','0','6','3','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','threads.html','30','0','4','2','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','upgrade.html','112','0','12','6','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','xml.html','5577','0','95','0','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','xmldtd.html','107','0','14','7','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','xmlio.html','137','4','8','4','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','e38217ae82612f1c98c21e8fc16c2f823967bd49','Daniel Veillard','forgot to document 2.9.1 release, regenerate docs','xmlmem.html','122','0','14','7','false','false','false','2013-05-10 15:40:13+08:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','parser.c','10218','3476','5','1','true','true','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml','4','0','4','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml.rde','5','0','7','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml.rdr','5','0','7','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml.sax','11','0','11','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml.sax2','11','0','11','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','dcc19503193c71596278a252064a8ce66331b3cd','Daniel Veillard','fix a parsing bug on non-ascii element and cr/lf usage  https://bugzilla.gnome.org/show_bug.cgi?id=698550  somehow the behaviour of the internal parser routine changed slightly when encountering cr/lf, which led to a bug when parsing document with non-ascii names','japancrlf.xml','6','0','6','0','true','false','false','2013-05-22 22:56:45+02:00'),('libxml2','2.9.1','6eea2f2c60e6a97491920cdf86b847869a2411dd','Armin K','python: fix compiler warnings when building python3 bindings','libxml.c','2962','592','2','2','true','false','false','2013-06-03 22:03:28+02:00'),('libxml2','2.9.1','6eea2f2c60e6a97491920cdf86b847869a2411dd','Armin K','python: fix compiler warnings when building python3 bindings','types.c','693','164','3','3','true','false','false','2013-06-03 22:03:28+02:00'),('libxml2','2.9.1','33a25af71f78c370850a057f430d874710169a6f','Ami Fischman','missing else in xlink.c  obviously forgotten','xlink.c','71','20','1','1','false','false','false','2013-07-02 09:47:26+08:00'),('libxml2','2.9.1','6c9c611beed57f001ca3ae6b964518d9c7336a69','Alexandre Rostovtsev','python: fix drv_libxml2.py for python3 compatibility  https://bugzilla.gnome.org/show_bug.cgi?id=703979','drv_libxml2.py','303','80','12','4','true','false','false','2013-07-11 15:16:02+08:00'),('libxml2','2.9.1','e71dce18a1a72578581d4e91c24a44eead0d5949','Daniel Veillard','catch malloc error and exit accordingly  as pointed privately by bill parker <wp02855@gmail.com>','xmllint.c','2735','862','4','0','true','false','false','2013-07-11 15:41:22+08:00'),('libxml2','2.9.1','6dd7775f3506741093890d99f09c242e0b34b55f','Arfrever Frehtes Taifersar Arahesis','another round of fixes for older versions of python','drv_libxml2.py','302','80','6','8','true','false','false','2013-07-12 11:18:11+08:00'),('libxml2','2.9.1','b98c6a0ac6fc5ddd184498e34bf9deaecb0aa715','Daniel Veillard','fix handling of mmap errors  https://bugzilla.gnome.org/show_bug.cgi?id=702320  as raised by gaurav <ya1gaurav@gmail.com>','xmllint.c','2744','862','11','2','true','false','false','2013-07-12 12:08:40+08:00'),('libxml2','2.9.1','81b961788a7eb01b46e6a4c44375585cd4e18056','Daniel Veillard','two smal namespace tweaks  an improvement of the documentation, and an extra safety check for xmlsetns()','tree.c','6351','2419','6','1','false','false','false','2013-07-22 13:01:11+08:00'),('libxml2','2.9.1','b9e4d5b6395f9aa0a34cb74e9a3672a20d37b943','Daniel Veillard','remove occasional leading space in xpath number formatting  https://bugzilla.gnome.org/show_bug.cgi?id=704528  somehow snprintf \"%*.*e\" can generate a leading space, remove it','xpath.c','9845','3138','6','0','false','false','false','2013-07-22 13:21:31+08:00'),('libxml2','2.9.1','ccc9cf9276d9f603f01302da885155556d236b56','Daniel Veillard','fix a wrong test  https://bugzilla.gnome.org/show_bug.cgi?id=704530  arg is an array on the stack and can\'t be null','debugXML.c','2571','782','1','1','true','false','false','2013-07-22 14:24:16+08:00'),('libxml2','2.9.1','717042d2ae21e36c5efda8d2e64fc88385095503','Daniel Veillard','avoid crash if allocation fails  https://bugzilla.gnome.org/show_bug.cgi?id=704527 xmlschemanewvalue() may fail on oom error','xmlschemastypes.c','4322','1585','4','0','true','false','false','2013-07-22 14:28:20+08:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"   https://bugzilla.gnome.org/show_bug.cgi?id=705267','encoding.c','2934','700','2','0','false','false','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"   https://bugzilla.gnome.org/show_bug.cgi?id=705267','testlimits.c','1057','251','6','0','false','false','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','e28c8a1acef3047cceae1035924edae5e903a778','Denis Pauk','#705267 - add additional defines checks for support \"./configure --with-minimum\"   https://bugzilla.gnome.org/show_bug.cgi?id=705267','xpath.c','9844','3138','363','364','false','true','false','2013-08-03 22:00:17+08:00'),('libxml2','2.9.1','a885f13a675d449e06529f9e68a6826acf45e19c','Gaurav','fix a possible null dereference  https://bugzilla.gnome.org/show_bug.cgi?id=705400 in case of allocation error the pointer was dereferenced before the test for a failure','SAX2.c','1976','673','2','2','true','false','false','2013-08-03 22:16:02+08:00'),('libxml2','2.9.1','ff76eb28c75451bc56e3b93f44dac155ca29e7f5','Daniel Veillard','clear up a potential null dereference  https://bugzilla.gnome.org/show_bug.cgi?id=705399  if ctxt->node_seq.buffer is null then ctxt->node_seq.maximum ought to be zero but it\'s better to clarify the check in the code directly.','parserInternals.c','1290','384','2','1','false','false','false','2013-08-03 22:25:13+08:00'),('libxml2','2.9.1','b4bcba23f64b71105514875f165a63d4cc720609','Nick Wellnhofer','fix xpath \'//\' optimization with predicates  my attempt to optimize xpath expressions containing \'//\' caused a regression reported in bug #695699. this commit disables the optimization for expressions of the form \'//foo[predicate]\'.','xpath.c','9845','3139','3','2','true','false','false','2013-08-05 00:15:11+02:00'),('libxml2','2.9.1','e8de99f90cde4832065d7a87d74393a46c191d0b','Nick Wellnhofer','fix xpath expressions of the form \'@ns:*\'  use namespace for match-all queries on the attribute axis.','xpath.c','9852','3142','8','1','true','false','false','2013-08-05 01:26:25+02:00'),('libxml2','2.9.1','2205ff4b0d4a70ed986f28b27c4a2037f6f0af1f','Tim Galeckas','xmllint --pretty crashed without following numeric argument  https://bugzilla.gnome.org/show_bug.cgi?id=674789  we need to check for null argument before calling atoi()','xmllint.c','2746','863','7','5','false','false','false','2013-08-29 16:44:33+08:00'),('libxml2','2.9.1','2205ff4b0d4a70ed986f28b27c4a2037f6f0af1f','Tim Galeckas','xmllint --pretty crashed without following numeric argument  https://bugzilla.gnome.org/show_bug.cgi?id=674789  we need to check for null argument before calling atoi()','xmllint.c','2746','863','7','5','false','false','false','2013-08-29 16:44:33+08:00'),('libxml2','2.9.1','2671b013d88b381d8a9139ef85381234aafc5ce0','Gaurav','fix potential null pointer dereferences in regexp code  https://bugzilla.gnome.org/show_bug.cgi?id=707749  fix 3 cases where we might dereference null','xmlregexp.c','5832','1971','5','3','true','false','false','2013-09-11 14:59:06+08:00'),('libxml2','2.9.1','2671b013d88b381d8a9139ef85381234aafc5ce0','Gaurav','fix potential null pointer dereferences in regexp code  https://bugzilla.gnome.org/show_bug.cgi?id=707749  fix 3 cases where we might dereference null','xmlregexp.c','5832','1971','5','3','true','false','false','2013-09-11 14:59:06+08:00'),('libxml2','2.9.1','75d13092f2886176fa8e8f354eb8a0e51f7409fd','Daniel Veillard','fix a potential null dereference in tree code  https://bugzilla.gnome.org/show_bug.cgi?id=707750  also reported by gaurav, simple fix to check the pointer before dereference','tree.c','6352','2420','2','1','true','false','false','2013-09-11 15:11:27+08:00'),('libxml2','2.9.1','c570b37972b364d03605a0c67b8497bc4b3227af','Gaurav','fix pointer dereferenced before null check  for https://bugzilla.gnome.org/show_bug.cgi?id=708364  xmlvalidateelementcontent is a private function but should still check the ctxt argument before dereferencing','valid.c','4754','1552','1','1','true','false','false','2013-09-30 10:43:47+08:00'),('libxml2','2.9.1','283c83e0d3bca73b61c1d116c05fe4ccaa96ec04','Denis Pauk','run close socket on solaris, same as we do on other platforms  https://bugzilla.gnome.org/show_bug.cgi?id=705188','nanohttp.c','1135','384','1','0','false','false','false','2013-09-30 10:51:42+08:00'),('libxml2','2.9.1','0146179120d4f1162f0400a0131bea2e5d600155','Denis Pauk','drop not needed checks  https://bugzilla.gnome.org/show_bug.cgi?id=704075','valid.c','4750','1550','10','9','false','false','false','2013-09-30 10:57:35+08:00'),('libxml2','2.9.1','b8bdc258dec460c0d07b50223792e26bc78b2f2d','Daniel Veillard','avoid a deadcode in catalog.c  for https://bugzilla.gnome.org/show_bug.cgi?id=703504','catalog.c','2520','775','2','2','false','false','false','2013-09-30 11:12:04+08:00'),('libxml2','2.9.1','7d4e259fbfa24ef2c07a66f4b3d7ad311e68de1b','Gaurav','avoid some dead code and cleanup in relaxng.c  https://bugzilla.gnome.org/show_bug.cgi?id=705388  code needed a bit of cleanup','relaxng.c','8325','2266','1','4','false','false','false','2013-09-30 11:27:41+08:00'),('libxml2','2.9.1','4b61cf61e7ddcc9a0b1df9cb592813940040af27','Daniel Veillard','fix some tabs mixing incompatible with python3  patrick welche <prlw1@cam.ac.uk> raised this issue','setup.py','181','3','43','43','true','false','false','2013-10-02 22:18:21+08:00'),('libxml2','2.9.1','f859d9a78350246222185a9605ae65da8ce42cea','Philip Withnall','build: add @lzma_libs@ to libxml’s pkg-config files  if libxml2 is built and linked against liblzma, the latter needs to appear in libxml2’s libs.private pkg-config field, otherwise static linking against libxml2 will fail due to unresolved liblzma symbols.  https://bugzilla.gnome.org/show_bug.cgi?id=711026','libxml-2.0-uninstalled.pc.in','10','0','1','1','true','false','false','2013-10-29 17:35:36+08:00'),('libxml2','2.9.1','f859d9a78350246222185a9605ae65da8ce42cea','Philip Withnall','build: add @lzma_libs@ to libxml’s pkg-config files  if libxml2 is built and linked against liblzma, the latter needs to appear in libxml2’s libs.private pkg-config field, otherwise static linking against libxml2 will fail due to unresolved liblzma symbols.  https://bugzilla.gnome.org/show_bug.cgi?id=711026','libxml-2.0.pc.in','12','0','1','1','true','false','false','2013-10-29 17:35:36+08:00'),('libxml2','2.9.1','f3f86ff465c92c79f834d7b981f3c7274a8bb5c8','Philip Withnall','build: use pkg-config to find liblzma in preference to ac_check_lib  this means that liblzma’s libs.private will be included in lzma_libs if linking the libraries statically, ensuring that there are no undefined symbol errors from liblzma’s private libraries.  if pkg-config isn’t installed, or if liblzma.pc couldn’t be found, fall back to using ac_check_lib as before. this will cause static linking to fail, but that’s not a regression.  this does not introduce a compile time dependency on pkg-config.  https://bugzilla.gnome.org/show_bug.cgi?id=711026','configure.in','1500','0','28','10','true','false','false','2013-11-28 16:01:13+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','relaxng.c','8337','2270','13','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_1','None','None','0','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_1.err','1','0','1','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_2','None','None','0','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_2.err','2','0','2','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744.rng','16','0','16','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_1.xml','2','0','2','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','6473a41a49601da8355c4b407b99474ada170213','Shaun McCance','implement choice for name classes on attributes  https://bugzilla.gnome.org/show_bug.cgi?id=710744','710744_2.xml','3','0','3','0','false','false','false','2013-11-28 16:09:00+08:00'),('libxml2','2.9.1','e79226ccdb377cb61fdee69aaf366bb9c5838de9','Gaurav','type mismatch in xmlschemastypes.c  for https://bugzilla.gnome.org/show_bug.cgi?id=715152','xmlschemastypes.c','4322','1585','1','1','false','false','false','2013-11-28 22:50:57+08:00'),('libxml2','2.9.1','f3d79416d792ee879b952430fc8e3311c050e218','Gaurav','type mismatch in xmlschemas.c  for https://bugzilla.gnome.org/show_bug.cgi?id=715152','xmlschemas.c','18732','4681','1','1','false','false','false','2013-11-28 22:53:54+08:00'),('libxml2','2.9.1','fcd458318916809edc4fc4cd1ce2d5ba9aed4665','Gaurav','fix xpath node comparison bug  for https://bugzilla.gnome.org/show_bug.cgi?id=715143','xpath.c','9852','3142','1','1','true','true','false','2013-11-28 23:01:44+08:00'),('libxml2','2.9.1','a1313a6f8c48cc27b02f65aca6b04e6cd59d939a','Mike Alexander','fix a bug loading some compressed files  for https://bugzilla.gnome.org/show_bug.cgi?id=712528 related to https://bugzilla.redhat.com/show_bug.cgi?id=877567  there is a bug in xzlib.c which causes certain compressed xml files to fail to load correctly.  the code in xz_decomp which attempts to verify the checksum and length of the expanded data fails if the checksum or length at the end of the file crosses a 1024 byte boundary.  it calls gz_next4 to get those two values.  this function uses the stream state in state->zstrm, but calls xz_avail which uses the state->strm stream info.  this causes gz_next4 to signal a premature eof if the data it is fetching crosses a 1024 byte boundary.','xzlib.c','574','148','22','4','true','false','false','2013-11-28 23:21:23+08:00'),('libxml2','2.9.1','826bc320206f70fccd2941a77d363e95e8076898','Arnold Hendriks','fix html push parser to accept html_parse_nodefdtd  for https://bugzilla.gnome.org/show_bug.cgi?id=719515  fixes htmlparsetryorfinish to interpret html_parse_nodefdtd, and updates xmllint to actually pass --nodefdtd to the push version of the html parser','HTMLparser.c','4714','1374','1','1','true','false','false','2013-11-29 14:12:12+08:00'),('libxml2','2.9.1','826bc320206f70fccd2941a77d363e95e8076898','Arnold Hendriks','fix html push parser to accept html_parse_nodefdtd  for https://bugzilla.gnome.org/show_bug.cgi?id=719515  fixes htmlparsetryorfinish to interpret html_parse_nodefdtd, and updates xmllint to actually pass --nodefdtd to the push version of the html parser','xmllint.c','2747','863','1','0','true','false','false','2013-11-29 14:12:12+08:00'),('libxml2','2.9.1','080a22c5ea395adede98d555d2dab2c85b16b269','Gaurav','avoid a possibility of dangling encoding handler  for https://bugzilla.gnome.org/show_bug.cgi?id=711149  in function: int xmlcharencclosefunc(xmlcharencodinghandler *handler)  if the freed handler is any one of handlers[i] list, then it will make that hanldlers[i] as dangling. this may lead to crash issues at places where handlers is read.','encoding.c','2945','705','14','2','false','false','false','2013-11-29 23:10:50+08:00'),('libxml2','2.9.1','080a22c5ea395adede98d555d2dab2c85b16b269','Gaurav','avoid a possibility of dangling encoding handler  for https://bugzilla.gnome.org/show_bug.cgi?id=711149  in function: int xmlcharencclosefunc(xmlcharencodinghandler *handler)  if the freed handler is any one of handlers[i] list, then it will make that hanldlers[i] as dangling. this may lead to crash issues at places where handlers is read.','encoding.c','2945','705','14','2','false','false','false','2013-11-29 23:10:50+08:00'),('libxml2','2.9.1','98a4e7128bc92559f05c754d0291a0a5906405d1','Gaurav','fix a couple of missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=708681','tree.c','6354','2422','2','0','true','false','false','2013-11-29 23:28:21+08:00'),('libxml2','2.9.1','9a85d40cef3115694ca6c1e41e11c56d75e01ccc','Jan Pokorný','fix incorrect spelling entites->entities  partially, a follow-up of 81d7a8245cf9a31a49499a5a195c2b89e6f91180.  signed-off-by: jan pokorný <jpokorny@redhat.com>','ChangeLog','794','0','1','1','true','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','9a85d40cef3115694ca6c1e41e11c56d75e01ccc','Jan Pokorný','fix incorrect spelling entites->entities  partially, a follow-up of 81d7a8245cf9a31a49499a5a195c2b89e6f91180.  signed-off-by: jan pokorný <jpokorny@redhat.com>','entities.h','92','0','1','1','true','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','9a85d40cef3115694ca6c1e41e11c56d75e01ccc','Jan Pokorný','fix incorrect spelling entites->entities  partially, a follow-up of 81d7a8245cf9a31a49499a5a195c2b89e6f91180.  signed-off-by: jan pokorný <jpokorny@redhat.com>','parser.c','10218','3476','1','1','true','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','9a85d40cef3115694ca6c1e41e11c56d75e01ccc','Jan Pokorný','fix incorrect spelling entites->entities  partially, a follow-up of 81d7a8245cf9a31a49499a5a195c2b89e6f91180.  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmllint.c','2747','863','1','1','true','true','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','7a7cad6ed40dff815fd26416192bfbae1b44923f','Jan Pokorný','fix typos in xmlschemas{,types}.c  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlschemas.c','18732','4681','2','2','true','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','7a7cad6ed40dff815fd26416192bfbae1b44923f','Jan Pokorný','fix typos in xmlschemas{,types}.c  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlschemastypes.c','4322','1585','2','2','true','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','761c9e99019dfd778352f5d8ed037c5ca0272aa4','Jan Pokorný','get rid of \'replacement character\' unicode chars in xmlschemas.c  middle dot pairs (as in [1]) turned to grave accents/backticks, section signs to dollars (for compatibility with ascii).  [1] http://www.w3.org/tr/xmlschema-1/  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlschemas.c','18732','4681','274','274','false','false','false','2013-11-30 20:03:52+08:00'),('libxml2','2.9.1','4e1476c5ea1a13397fe3c1001801cbceedfa0d3b','Daniel Veillard','adding init calls to xml and html read parsing entry points  as pointed out by \"tassyns, bram <bramt@enfocus.com>\" on the list some call had it other didn\'t, clean it up and add to all missing ones','HTMLparser.c','4720','1374','6','0','false','false','false','2013-12-09 15:23:40+08:00'),('libxml2','2.9.1','4e1476c5ea1a13397fe3c1001801cbceedfa0d3b','Daniel Veillard','adding init calls to xml and html read parsing entry points  as pointed out by \"tassyns, bram <bramt@enfocus.com>\" on the list some call had it other didn\'t, clean it up and add to all missing ones','parser.c','10228','3476','10','0','false','false','false','2013-12-09 15:23:40+08:00'),('libxml2','2.9.1','e59c244e73450f67672a077571f594484e8b3f1e','Daniel Veillard','add limitations about encoding conversion','xmllint.1','647','0','2','5','false','false','false','2013-12-11 00:01:38+08:00'),('libxml2','2.9.1','e59c244e73450f67672a077571f594484e8b3f1e','Daniel Veillard','add limitations about encoding conversion','xmllint.xml','832','0','1','1','false','false','false','2013-12-11 00:01:38+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','SAX2.h','141','0','2','1','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','globals.h','160','0','12','5','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','relaxng.h','141','0','6','2','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','tree.h','823','0','11','4','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','xmlIO.h','188','0','1','1','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','44313c0a7e1bd9021b70822a3711f5d0687ebf54','Patrick Monnerat','shortening lines in headers  no change of semantic','xmlerror.h','864','0','1','1','false','false','false','2013-12-12 14:59:18+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','66693cef33687e9d2b9f6c83c14687803b618a5f','Patrick Monnerat','generic portability fix  undefine common symbol before redefining them','trio.h','73','0','14','0','true','false','false','2013-12-12 15:00:46+08:00'),('libxml2','2.9.1','3a76bfeddeac9c331f761e45db6379c36c8876c3','Patrick Monnerat','portability fix  increase internal use of a portability macro','timsort.h','316','75','6','6','true','false','false','2013-12-12 15:01:53+08:00'),('libxml2','2.9.1','147aaf21eaf57b1b685b757b23b5c1ce32d9412a','Patrick Monnerat','portability fix  don\'t assume fileno for stdin and stdout are 0 and 1','xmlIO.c','2161','714','3','3','true','false','false','2013-12-12 15:02:40+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','trio.c','4730','1078','62','52','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlreader.c','3840','1280','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','0f7a26d8442b87fb7d576e759c9148e8feff9e20','Patrick Monnerat','improve va_list portability  support for va_list declared as an array (cannot be referenced explicitly)','xmlwriter.c','3151','723','8','4','false','false','false','2013-12-12 15:04:43+08:00'),('libxml2','2.9.1','ca9fc43bf7a44c88b2b8bb9ac2b4da21ebac2972','Patrick Monnerat','portability fixes for os/400','triodef.h','4','0','6','0','true','false','false','2013-12-12 15:11:40+08:00'),('libxml2','2.9.1','ca9fc43bf7a44c88b2b8bb9ac2b4da21ebac2972','Patrick Monnerat','portability fixes for os/400','triostr.c','1107','188','4','0','true','false','false','2013-12-12 15:11:40+08:00'),('libxml2','2.9.1','1c43f43ce36c09ff9c0524ca422ed9f5bf435502','Patrick Monnerat','portability patch for fopen on os/400','xmllint.c','2750','866','6','0','false','false','false','2013-12-12 15:12:53+08:00'),('libxml2','2.9.1','d1c0cc99086c91a8fc9a51aee5775ab193a1bbd5','Patrick Monnerat','add macros needed for os/400 portability','configure.in','1541','0','41','0','false','false','false','2013-12-12 15:14:47+08:00'),('libxml2','2.9.1','437f4f5977f023bbaa7e2da781ca233d5c108954','Patrick Monnerat','use specific macros for portability to os/400  some of the entry points for posix networking calls in os/400 differs slightly due to not using const arguments','nanoftp.c','1401','418','17','17','false','false','false','2013-12-12 15:23:09+08:00'),('libxml2','2.9.1','437f4f5977f023bbaa7e2da781ca233d5c108954','Patrick Monnerat','use specific macros for portability to os/400  some of the entry points for posix networking calls in os/400 differs slightly due to not using const arguments','nanohttp.c','1135','384','2','2','false','false','false','2013-12-12 15:23:09+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','trio.c','4732','1078','10','4','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','trio.c','4732','1078','10','4','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','trio.c','4732','1078','10','4','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','triostr.c','1107','188','3','1','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','build_libxml.com','273','0','12','5','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','4d041a2e809f538c87af261f86008b6de833ca2b','Jacob (Jouk) Jansen','various portability patches for openvms  available from http://nchrem.tnw.tudelft.nl/openvms/software2.html','config.vms','1','0','7','0','false','false','false','2013-12-17 15:33:50+08:00'),('libxml2','2.9.1','03c6723043775122313f107695066e5744189a08','Nick Wellnhofer','handling of xpath function arguments in error case  the xpath engine tries to guarantee that every xpath function can pop \'nargs\' non-null values off the stack. libxslt, for example, relies on this assumption. but the check isn\'t thorough enough if there are errors during the evaluation of arguments. this can lead to segfaults:  https://mail.gnome.org/archives/xslt/2013-december/msg00005.html  this commit makes the handling of function arguments more robust.  * bail out early when evaluation of xpath function arguments fails. * make sure that there are \'nargs\' arguments in the current call frame.','xpath.c','9857','3143','7','2','true','false','false','2013-12-20 17:45:04+01:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','054c716ea1bf001544127a4ab4f4346d1b9947e7','Daniel Veillard','missing initialization for the catalog module','parser.c','10229','3477','3','0','false','false','false','2014-01-26 15:02:25+01:00'),('libxml2','2.9.1','15d12040ff48c5190addd315092c9262fbe54e91','Daniel Veillard','fix an fd leak in an error case','catalog.c','2522','776','5','0','true','false','false','2014-02-06 10:38:00+01:00'),('libxml2','2.9.1','e18bce0d061e942284551b62f5c4c025ba320284','Daniel Veillard','fixing a ptotential uninitialized access','valid.c','4750','1550','1','1','false','false','false','2014-02-06 10:47:20+01:00'),('libxml2','2.9.1','75801652a2342d22fa1f62047f86e5d23b4d1782','Jan Pokorný','fix typos in {tree,xpath}.c (errror)  signed-off-by: jan pokorný <jpokorny@redhat.com>','tree.c','6354','2422','1','1','true','false','false','2014-02-06 10:47:47+01:00'),('libxml2','2.9.1','75801652a2342d22fa1f62047f86e5d23b4d1782','Jan Pokorný','fix typos in {tree,xpath}.c (errror)  signed-off-by: jan pokorný <jpokorny@redhat.com>','xpath.c','9857','3143','1','1','true','false','false','2014-02-06 10:47:47+01:00'),('libxml2','2.9.1','b0c7e7e57ff9759446bc6c99b94a59a59f6b81a6','Daniel Veillard','fix an typo \'onrest\' in htmlscriptattributes  as pointed out by \"laurent <guitarneck@free.fr>\"','HTMLparser.c','4720','1374','1','1','true','false','false','2014-02-06 10:50:35+01:00'),('libxml2','2.9.1','190a0b89395f397b40aea02de6f362290ad6cc3d','Longstreth Jon','fix a portability issue on windows  apparently an verflow when comparing macro and unsigned long','parser.c','10231','3477','5','2','true','false','false','2014-02-06 10:58:17+01:00'),('libxml2','2.9.1','c9ecf45d1bf4ed9bdfed7f9733687a4df1daf897','Daniel Veillard','fix xmltextwriterwriteelement when a null content is given','xmlwriter.c','3153','724','6','4','true','false','false','2014-02-08 02:23:27+08:00'),('libxml2','2.9.1','3313d14f9d71e5beeb51169688b69f3a34fe4489','Nicolas Le Cam','don\'t use xmlvalidatename() when not available.  fix compilation with minimum and debug.','debugXML.c','2571','783','2','0','true','false','false','2014-02-10 10:26:30+08:00'),('libxml2','2.9.1','77b5b46409d48fa417205aea580db8bb7c8f5d4a','Nicolas Le Cam','legacy needs xmlsax2startelement() and xmlsax2endelement().  fix compilation with minimum and legacy.','SAX2.c','1976','673','2','2','true','false','false','2014-02-10 10:32:45+08:00'),('libxml2','2.9.1','77b5b46409d48fa417205aea580db8bb7c8f5d4a','Nicolas Le Cam','legacy needs xmlsax2startelement() and xmlsax2endelement().  fix compilation with minimum and legacy.','SAX2.h','141','0','3','2','true','false','false','2014-02-10 10:32:45+08:00'),('libxml2','2.9.1','77b5b46409d48fa417205aea580db8bb7c8f5d4a','Nicolas Le Cam','legacy needs xmlsax2startelement() and xmlsax2endelement().  fix compilation with minimum and legacy.','legacy.c','656','161','1','1','true','false','false','2014-02-10 10:32:45+08:00'),('libxml2','2.9.1','77b5b46409d48fa417205aea580db8bb7c8f5d4a','Nicolas Le Cam','legacy needs xmlsax2startelement() and xmlsax2endelement().  fix compilation with minimum and legacy.','tree.c','6354','2422','1','1','true','false','false','2014-02-10 10:32:45+08:00'),('libxml2','2.9.1','1af8b7b22e3bb569b2c27642064224bc14a1924a','Nicolas Le Cam','fix compilation with minimum and schematron.  add a hard dependancy on tree. disable write and close callbacks when output is disabled.','configure.in','1542','0','1','0','true','false','false','2014-02-10 10:33:31+08:00'),('libxml2','2.9.1','1af8b7b22e3bb569b2c27642064224bc14a1924a','Nicolas Le Cam','fix compilation with minimum and schematron.  add a hard dependancy on tree. disable write and close callbacks when output is disabled.','schematron.c','1212','283','2','0','true','false','false','2014-02-10 10:33:31+08:00'),('libxml2','2.9.1','52010c639a5da3d40ef73d9aff5c43c3a642661c','Nicolas Le Cam','compile out use of xmlvalidatencname() when not available.  fix compilation with minimum and valid.','SAX2.c','1976','674','2','0','true','false','false','2014-02-10 10:36:20+08:00'),('libxml2','2.9.1','41586ca6674d2fae32b17156494cb6f244ac1170','Nicolas Le Cam','fix compilation with minimum and xinclude.  xinclude needs xmladdnextsibling(). compile out use of xmllocationsetptr when xptr is disabled. include xpath header.','tree.c','6354','2422','1','1','true','false','false','2014-02-10 10:36:40+08:00'),('libxml2','2.9.1','41586ca6674d2fae32b17156494cb6f244ac1170','Nicolas Le Cam','fix compilation with minimum and xinclude.  xinclude needs xmladdnextsibling(). compile out use of xmllocationsetptr when xptr is disabled. include xpath header.','xinclude.c','1754','536','2','1','true','false','false','2014-02-10 10:36:40+08:00'),('libxml2','2.9.1','085b997cfd0cd19481d9eecab22da5adf67bcbdc','Gaurav','avoid a possible null pointer dereference  for https://bugzilla.gnome.org/show_bug.cgi?id=708355','xmlmodule.c','209','38','1','1','false','false','false','2014-02-18 11:47:43+08:00'),('libxml2','2.9.1','6faa126fc3ba24a782e832cb0000d6d4f6b7b576','Daniel Veillard','fix xmlparseinnodecontext() if node is not element  we really need to have ctxt->instate == xml_parser_content when jumping in content parsing bug reported by frank gross','parser.c','10231','3477','2','1','true','false','false','2014-03-21 17:05:51+08:00'),('libxml2','2.9.1','07def30fa7d5c5aa73e9d522a2e17bfa7a272df8','Nick Wellnhofer','restore context size and position after xpath_op_arg  fixes a bug with predicates: https://mail.gnome.org/archives/xml/2014-march/msg00014.html','xpath.c','9860','3143','11','8','true','false','false','2014-03-24 13:02:06+01:00'),('libxml2','2.9.1','7e35abeb5fdfd810402e4b93d78b498b44ce43e2','Daniel Veillard','fix a doc typo  raised by blasius bieselbert on irc','tree.c','6354','2422','1','1','true','false','false','2014-03-28 22:58:26+08:00'),('libxml2','2.9.1','7d508fed991a35c617d0180f72200fbd7bfbd081','Eric Zurcher','added macros for argument casts','win32config.h','38','8','2','0','false','false','false','2014-04-07 09:18:54+08:00'),('libxml2','2.9.1','f0dd6e11aa56addced3de33fab30529a51efaed5','Tristan Van Berkom','xmlnodesetname: allow setting the name to a substring of the currently set name  avoid freeing the currently set name until after having assigned the new name, this allows one to call xmlnodesetname (node, node->name + 1) to set the new name of the node to a substring of the current name without introducing any crash and without requiring an extra strdup().','tree.c','6358','2423','7','2','false','false','false','2014-04-23 10:42:57+08:00'),('libxml2','2.9.1','9cd1c3cfbd32655d60572c0a413e017260c854df','Daniel Veillard','do not fetch external parameter entities  unless explicitely asked for when validating or replacing entities with their value. problem pointed out by daniel berrange <berrange@redhat.com>','parser.c','10236','3481','14','0','false','false','false','2014-05-06 22:31:51+08:00'),('libxml2','2.9.1','41b0d1c4e53dcec2a0206df4bedaad0f81234319','Gaurav','avoid double null check  cleanup for https://bugzilla.gnome.org/show_bug.cgi?id=729851','xmlregexp.c','5830','1970','0','2','false','false','false','2014-05-09 16:52:32+08:00'),('libxml2','2.9.1','7966a761b77d24a70e8b81057c48319e32fbcc29','Gaurav','avoid possible null pointer dereference in memory debug mode  fix a use before check on pointer for https://bugzilla.gnome.org/show_bug.cgi?id=729849','xmlmemory.c','613','181','4','2','true','false','false','2014-05-09 17:00:08+08:00'),('libxml2','2.9.1','d9ea91322502e02140d21441add0c33a0a10b042','Sérgio Batista','xmllint was not parsing the --c14n11 flag  cut and paste error, using the wrong variable','xmllint.c','2750','866','1','1','true','false','false','2014-06-09 22:10:15+08:00'),('libxml2','2.9.1','acace88c4ab87fb2cdd811b0f1b5e73f3d2a1b0e','Jan Pokorný','fix typos in relaxng.c  signed-off-by: jan pokorný <jpokorny@redhat.com>','relaxng.c','8337','2270','2','2','true','false','false','2014-06-10 14:41:06+08:00'),('libxml2','2.9.1','fcb1bb56ff21c6fe5c1dfd49b99445f6128b94e4','Jonas Eriksson','configure: add --with-python-install-dir  cross-compiling the python bindings is a bit difficult today, as the configure script will figure out the site packages dir (python_site_packages) by either:  - generating the path to the site-package target directories using   libdir, and see if it exists. as it is not possible to point to the   full path of the sysroot, since that will yield the wrong install   path, and that the directory does not neccessarily exist on the host,   this approach will not work.  - fetch the site packages dir from the python interpreter as pointed to   by --with-python. since this python interpreter will point to the   sysroot, the install dir generated will be inside the sysroot and thus   not work.  this patch approaches the problem by adding the possibility of explicitly stating the install dir of the python packages, leaving it up to the cross-compilation environment to specify it. the patch does not affect the default case (non-cross compilation).  signed-off-by: jonas eriksson <jonas.eriksson@enea.com>','configure.in','1549','0','7','0','false','false','false','2014-06-10 14:44:03+08:00'),('libxml2','2.9.1','a16eb968075a82ec33b2c1e77db8909a35b44620','Daniel Veillard','erroneously ignores a validation error if no error callback set  reported by stefan behnel https://bugzilla.gnome.org/show_bug.cgi?id=724903','valid.c','4747','1548','2','5','true','false','false','2014-06-10 16:06:14+08:00'),('libxml2','2.9.1','dd8367da17c2948981a51e52c8a6beb445edf825','Daniel Veillard','fix regressions introduced by cve-2014-0191 patch  a number of issues have been raised after the fix, and this patch tries to correct all of them, though most were related to postvalidation. https://bugzilla.gnome.org/show_bug.cgi?id=730290 and other reports on list, off-list and on red hat bugzilla','parser.c','10241','3484','11','2','true','false','false','2014-06-11 17:00:39+08:00'),('libxml2','2.9.1','c35af8b18dddd0bdfb137ad6a056837a3d5ea651','Daniel Veillard','fixes for xmlinitparserctxt  let\'s make sure that parser options are updated too when a corrsponding global variable or other field of the context is set.','parserInternals.c','1302','387','13','1','true','false','false','2014-06-11 17:00:39+08:00'),('libxml2','2.9.1','3e0eec43196e9c4d770b9a932ad131316794f7b4','Gaurav','adding some missing null checks  in sax2 dom building code and in the html parser','HTMLparser.c','4720','1374','2','2','false','false','false','2014-06-13 14:45:20+08:00'),('libxml2','2.9.1','3e0eec43196e9c4d770b9a932ad131316794f7b4','Gaurav','adding some missing null checks  in sax2 dom building code and in the html parser','SAX2.c','1985','677','9','0','false','false','false','2014-06-13 14:45:20+08:00'),('libxml2','2.9.1','8eb55d782a2b9afacc7938694891cc6fad7b42a5','Dennis Filder','xmlsaveuri() incorrectly recomposes uris with rootless paths  for https://bugzilla.gnome.org/show_bug.cgi?id=731063  xmlsaveuri() of libxml2 (snapshot 2014-05-31 and earlier) returns bogus values when called with uris that have rootless paths (e.g. \"urx:b:b\" becomes \"urx://b%3ab\" where \"urx:b%3ab\" would be correct)','uri.c','1522','582','0','2','false','false','false','2014-06-13 14:56:14+08:00'),('libxml2','2.9.1','4e73bfaee6c19063a61345e0962edacd8d8b4b43','Daniel Veillard','fix a link to james sax documentation old page','xml.html','5577','0','1','1','true','false','false','2014-07-12 17:46:46+08:00'),('libxml2','2.9.1','6d753994b9cdfccec5d0075d5685cae9ad06bec1','Gaurav Gupta','adding a check in case of allocation error  for https://bugzilla.gnome.org/show_bug.cgi?id=733043  there is missing null condition in xmlrelaxngvalidateinterleave of relaxng.c dereferencing it may cause a crash.','relaxng.c','8341','2271','4','0','true','false','false','2014-07-14 16:01:10+08:00'),('libxml2','2.9.1','7d2e8c950f1f017f5f3a45f999e5a3aad3e699da','Gaurav Gupta','add a missing argument check  for https://bugzilla.gnome.org/show_bug.cgi?id=733042  the states argument of xmlrelaxngaddstates() ought to be checked too','relaxng.c','8341','2272','1','1','false','false','false','2014-07-14 16:08:28+08:00'),('libxml2','2.9.1','54c4b1aa719beb83d6fa34181d33b5496e26f4da','Gaurav Gupta','add a couple of misisng check in xmlrelaxngcleanuptree  for https://bugzilla.gnome.org/show_bug.cgi?id=733041  check cur->parent before dereferencing the pointer even if a null parent there should not happen also fix a typo','relaxng.c','8342','2274','4','3','true','false','false','2014-07-14 16:14:44+08:00'),('libxml2','2.9.1','c836ba66e57d4d9f90f1dc7a827625c99622408f','Daniel Veillard','fix a potential null dereference  for https://bugzilla.gnome.org/show_bug.cgi?id=733040  xmldictlookup() may return null in case of allocation error, though very unlikely it need to be checked.','parser.c','10247','3487','6','0','true','false','false','2014-07-14 16:39:50+08:00'),('libxml2','2.9.1','1811add768cabe36f763c960a40698418c5cbe47','Gaurav Gupta','fix various missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=732823','hash.c','681','215','3','0','true','false','false','2014-07-14 17:50:27+08:00'),('libxml2','2.9.1','1811add768cabe36f763c960a40698418c5cbe47','Gaurav Gupta','fix various missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=732823','nanoftp.c','1407','419','8','2','true','false','false','2014-07-14 17:50:27+08:00'),('libxml2','2.9.1','1811add768cabe36f763c960a40698418c5cbe47','Gaurav Gupta','fix various missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=732823','nanohttp.c','1136','385','6','6','true','false','false','2014-07-14 17:50:27+08:00'),('libxml2','2.9.1','23243301a68ac56cc5dbfdcf2271589bd46fa71c','Daniel Veillard','xml shell command \"cd\" does not handle \"/\" at end of path  for https://bugzilla.gnome.org/show_bug.cgi?id=731832 small fix','debugXML.c','2575','785','5','0','true','false','false','2014-07-14 17:59:31+08:00'),('libxml2','2.9.1','a6ea72ad192f4209b5073e39358ce15f3f1dca4b','Daniel Veillard','fix processing in sax2 in case of an allocation failure  related to https://bugzilla.gnome.org/show_bug.cgi?id=731360','SAX2.c','1986','677','1','0','true','false','false','2014-07-14 20:29:34+08:00'),('libxml2','2.9.1','e036cb3160378d7c46f99434de07c065ebb05bc9','Gaurav Gupta','avoid possible null pointer in trio.c  for https://bugzilla.gnome.org/show_bug.cgi?id=730005 while using assert in libxml2 is really not a good idea, it\'s still better to assert than crash','trio.c','4736','1078','8','2','false','false','false','2014-07-14 21:22:07+08:00'),('libxml2','2.9.1','30cf439efcea9732d0ecd33b7955666ce264129b','David Kilzer','check for tmon in _xmlschemadateadd() is incorrect  for https://bugzilla.gnome.org/show_bug.cgi?id=732705 in _xmlschemadateadd(), the check for |tmon| should be the following since max_dayinmonth() expects a month in the range [1,12]:      if (tmon < 1) 	tmon = 1;  regression introduced in https://git.gnome.org/browse/libxml2/commit/?id=14b5643947845df089376106517c4f7ba061e4b0','xmlschemastypes.c','4322','1585','2','2','false','false','false','2014-07-14 22:29:56+08:00'),('libxml2','2.9.1','319e159b11e3bb7ddd8307169362bfb9b8b33561','Daniel Veillard','fix building when configuring without xpath and xptr  for https://bugzilla.gnome.org/show_bug.cgi?id=732735 schematron little used code and xptr rely on xpath, fix the configure script.','configure.in','1556','0','23','14','true','false','false','2014-07-15 11:13:15+08:00'),('libxml2','2.9.1','579ebbcb3c5a0da78d255f46df15a862d1f82604','Philip Withnall','htmlparser: correctly initialise a stack allocated structure  if not initialised, the ‘node’ member remains undefined.  coverity issue: #60466  https://bugzilla.gnome.org/show_bug.cgi?id=731990','HTMLparser.c','4720','1374','1','1','false','false','false','2014-07-26 20:09:42+08:00'),('libxml2','2.9.1','7746f2f60982889cd836fc23022e426f5a02d883','Philip Withnall','xmlcatalog: fix a memory leak on quit  coverity issue: #60442  https://bugzilla.gnome.org/show_bug.cgi?id=731990','xmlcatalog.c','509','164','6','5','true','false','false','2014-07-26 20:11:35+08:00'),('libxml2','2.9.1','31aa38158a0ec6075749838639775f3c01e01f6c','Philip Withnall','xmlio: fix an fd leak on gzdopen() failure  according to the documentation, gzdopen() does not close the fd on failure (but does effectively close it on success, since gzclose() closes it).  coverity issues: #60440, #60441  https://bugzilla.gnome.org/show_bug.cgi?id=731990','xmlIO.c','2169','716','12','2','true','false','false','2014-07-26 20:13:11+08:00'),('libxml2','2.9.1','5777ae75ee0382149971a5bc2094f9d14e7e11f8','Philip Withnall','runtest: fix a memory leak on parse failure  coverity issue: #60439  https://bugzilla.gnome.org/show_bug.cgi?id=731990','runtest.c','3180','653','4','1','true','false','false','2014-07-26 20:16:33+08:00'),('libxml2','2.9.1','4ba5d3176938d3435ddc7347cdc904658e2999ee','Philip Withnall','xmlschemastypes: fix potential array overflow  the year and month need validating before being put into the max_dayinmonth macro.  coverity issue: #60436  https://bugzilla.gnome.org/show_bug.cgi?id=731990','xmlschemastypes.c','4323','1587','2','1','true','false','false','2014-07-26 20:20:11+08:00'),('libxml2','2.9.1','2f9b126a5c39bc7ba14384d4f79479ba05c81239','Daniel Veillard','typo in error messages \"colon are forbidden from...\"  for https://bugzilla.gnome.org/show_bug.cgi?id=731511 pointed byt vincent lefevre','parser.c','10247','3487','3','3','true','false','false','2014-07-26 20:29:36+08:00'),('libxml2','2.9.1','42870f46ccf36f83a55fde03344657d360ba0793','Daniel Veillard','add couple of missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=733710 reported by gaurav but with slightly different fixes','relaxng.c','8347','2275','6','1','true','false','false','2014-07-26 21:04:54+08:00'),('libxml2','2.9.1','42870f46ccf36f83a55fde03344657d360ba0793','Daniel Veillard','add couple of missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=733710 reported by gaurav but with slightly different fixes','tree.c','6362','2424','4','0','true','false','false','2014-07-26 21:04:54+08:00'),('libxml2','2.9.1','b8480ae781488f4e6974e24f2becb7bca01782f7','Gaurav Gupta','remove a couple of dead conditions  for https://bugzilla.gnome.org/show_bug.cgi?id=733711','xmlIO.c','2166','715','2','5','false','false','false','2014-07-26 21:14:53+08:00'),('libxml2','2.9.1','b8480ae781488f4e6974e24f2becb7bca01782f7','Gaurav Gupta','remove a couple of dead conditions  for https://bugzilla.gnome.org/show_bug.cgi?id=733711','xmlmemory.c','610','180','1','4','false','false','false','2014-07-26 21:14:53+08:00'),('libxml2','2.9.1','1db9969966aac1e844372e9b3288653a296e0365','Kyle VanderBeek','support element node traversal in document fragments.  https://bugzilla.gnome.org/show_bug.cgi?id=733900','tree.c','6365','2427','3','0','false','false','false','2014-08-05 19:29:06+08:00'),('libxml2','2.9.1','658b86c0eaacefb0999873efb883c7e50c628d18','Gaurav Gupta','couple of missing null checks  for https://bugzilla.gnome.org/show_bug.cgi?id=734328  missing null check could cause crash, if a pointer is dereferenced.  found problem at two places in valid.c','valid.c','4750','1550','4','0','false','false','false','2014-08-07 11:19:03+08:00'),('libxml2','2.9.1','d201e71ed0df1dce7aca232f81a1c3e2eee8be73','Juergen Keil','no error column in structured error handler for xml schema validation errors  for https://bugzilla.gnome.org/show_bug.cgi?id=734363  when using xml schema validation, structured error callbacks do not get passed a valid column number in xmlerror field \"int2\".  $ ./xmlsaxparse colbug5.xml colbug5.xsd colbug5.xml:3:0: element \'{urn:colbug5}bx\': this element is not expected. expected is ( {urn:colbug5}b ).  the schema error is reported for line 3, column 0 (= n/a).  i\'d like to have the column number of the error passed in the xmlerror structure.  with this test case: line 3, column 9.','xmlschemas.c','18734','4681','3','1','true','false','false','2014-08-07 11:42:07+08:00'),('libxml2','2.9.1','5d4310af453a2220851b7063ebf165ce8b47494c','Juergen Keil','wrong error column in structured error when skipping whitespace in xml decl  for https://bugzilla.gnome.org/show_bug.cgi?id=734276  libxml2 reports wrong error column numbers (field int2 in xmlerror) in structured error handler, after an xml declaration containing whitespace.  example xml:  <?xml  version=\"1.0\"  encoding=\"utf-8\"     ?><root>&</root> <!--          1         2         3         4         5         6 123456789012345678901234567890123456789012345678901234567890 -->  expected location of the error would be line 1, column 53.  the actual location of the error is line 1, column 44:  $ ./xmlparse colbug1.xml colbug1.xml:1:44: xmlparseentityref: no name','parser.c','10249','3487','2','0','true','false','false','2014-08-07 16:28:09+08:00'),('libxml2','2.9.1','33f658c969501bb246f8d4c6d21772948c7bc965','Juergen Keil','wrong error column in structured error when parsing attribute values  for https://bugzilla.gnome.org/show_bug.cgi?id=734280  libxml2 reports wrong error column numbers (field int2 in xmlerror) in structured error handler, after parsing xml attribute values.  example xml:  <?xml version=\"1.0\" encoding=\"utf-8\"?> <root xmlns=\"urn:colbug\">&</root> <!--          1         2         3         4 1234567890123456789012345678901234567890 -->  expected location of the error would be line 3, column 21.  the actual location of the error is line 3, column 9:  $ ./xmlparse colbug2.xml colbug2.xml:3:9: xmlparseentityref: no name  the 12 characters of the xmlns attribute value \"urn:colbug\" are not accounted for in the error column value.','parser.c','10268','3489','19','0','true','false','false','2014-08-07 17:30:36+08:00'),('libxml2','2.9.1','b3e488b0d90d5b0dbebf02cbd20894367f728d3e','Ron Angeles','add methods for python3 iterator  xmlcoredepthfirstitertor and xmlcorebreadthfirstitertr only implement a python2-compatible iterator interface. the next() method has been changed to __next__(). an alias has been defined to keep python2 compatibility.','libxml.py','510','183','4','2','false','false','false','2014-10-03 17:01:24+08:00'),('libxml2','2.9.1','beb7281055dbf0ed4d041022a67c6c5cfd126f25','Daniel Veillard','fix a problem properly saving uris  as written by martin kletzander <mkletzan@redhat.com>: since commit 8eb55d782a2b9afacc7938694891cc6fad7b42a5, when you parse and save an uri that has no server (or similar) part, two slashes after the \'schema:\' get lost.  it means \'uri:///noserver\' is turned into \'uri:/noserver\'.  basically    foo:///only/path  means a host of \"\" while     foo:/only/path  means no host at all    so the best fix imho is to fix the uri parser to record the first case and an empty host string and the second case as a null host string   i would not revert the initial patch, we should not \'invent\' those slash, but we should instead when parsing keep the information that it\'s a host based path and that foo:/// means the presence of a host but an empty one.  once applied the resulting patch below, all cases seems to be saved properly:  thinkpad:~/xml -> ./testuri uri:/noserver uri:/noserver thinkpad:~/xml -> ./testuri uri:///noserver uri:///noserver thinkpad:~/xml -> ./testuri uri://server/foo uri://server/foo thinkpad:~/xml -> ./testuri uri:/noserver/foo uri:/noserver/foo thinkpad:~/xml -> ./testuri uri:/// uri:/// thinkpad:~/xml -> ./testuri uri:// uri:// thinkpad:~/xml -> ./testuri uri:/ uri:/ thinkpad:~/xml ->    if you revert the initial patch that last case fails  the problem is that i don\'t want to change the xmluri structure to minimize abi breakage, so i could not extend the field. the natural solution is to denote that uri:/// has an empty host by making the uri server field an empty string which works very well but breaks applications (like libvirt ;-) who blindly look at uri->server not being null to try to reach it ! simplest was to stick the port to -1 in that case, instead of 0 application don\'t bother looking at the port of there is no server string, this makes the patch more complex than a 1 liner, but is better for abi.','uri.c','1526','585','19','15','true','false','false','2014-10-03 19:22:39+08:00'),('libxml2','2.9.1','a6c5b022f1d515f20beb01b70466893b64e33325','Patrick Monnerat','os400: create architecture directory. implement dlfcn emulation.','dlfcn.c','726','215','1213','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','a6c5b022f1d515f20beb01b70466893b64e33325','Patrick Monnerat','os400: create architecture directory. implement dlfcn emulation.','dlfcn.h','4','0','32','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','ea8c89b9b59f8fcaa5abf38514a2d2562199eb84','Patrick Monnerat','doc/news.html: small update to avoid line join while generating news.','NEWS','1835','0','4','2','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','ea8c89b9b59f8fcaa5abf38514a2d2562199eb84','Patrick Monnerat','doc/news.html: small update to avoid line join while generating news.','news.html','2179','0','4','2','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','README.iconv','44','0','47','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','bldcsndfa.c','1261','251','1953','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','ccsid_mibenum.dtd','15','0','15','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','ccsid_mibenum.xml','270','0','270','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','character-sets.xhtml','3071','0','3077','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','ianatables.c','4268','0','4609','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.c','94','22','154','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.h','8','0','40','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.h','8','0','40','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','17951ea28989d6ca70697cef7bfeeceebf4d94c5','Patrick Monnerat','os400: iconv functions compatibility wrappers and table builder.','iconv.h','8','0','40','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','5621c81b49cf2c2eb7b110d862f4b52b916f82b2','Patrick Monnerat','os400: easy character transcoding support','transcode.c','159','45','268','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','5621c81b49cf2c2eb7b110d862f4b52b916f82b2','Patrick Monnerat','os400: easy character transcoding support','transcode.h','14','0','43','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','5621c81b49cf2c2eb7b110d862f4b52b916f82b2','Patrick Monnerat','os400: easy character transcoding support','transcode.h','14','0','43','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','6e4d870336a3d892bf5833dc7685c11d64f1d008','Patrick Monnerat','os400: utf8<-->ebcdic wrappers for system and external library calls','wrappers.c','113','14','170','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','6e4d870336a3d892bf5833dc7685c11d64f1d008','Patrick Monnerat','os400: utf8<-->ebcdic wrappers for system and external library calls','wrappers.h','16','0','70','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','6e4d870336a3d892bf5833dc7685c11d64f1d008','Patrick Monnerat','os400: utf8<-->ebcdic wrappers for system and external library calls','wrappers.h','16','0','70','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.c','114','16','211','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.c','114','16','211','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.h','91','0','141','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.h','91','0','141','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','7d888f07d86454025e4629ee36fdb5b3876f62ea','Patrick Monnerat','os400: implement some macros as functions for ile/rpg language support (that as no macros).','rpgsupport.h','91','0','141','0','false','false','false','2014-10-04 21:13:47+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','DOCBparser.rpgle','91','0','116','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','HTMLparser.rpgle','323','0','387','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','HTMLtree.rpgle','133','0','166','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','SAX.rpgle','165','0','207','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','SAX2.rpgle','206','0','248','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','c14n.rpgle','104','0','119','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','catalog.rpgle','182','0','235','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','chvalid.rpgle','71','0','97','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','debugXML.rpgle','195','0','241','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','dict.rpgle','56','0','78','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','encoding.rpgle','270','0','274','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','entities.rpgle','150','0','174','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','globals.rpgle','456','0','557','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','hash.rpgle','188','0','231','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','list.rpgle','126','0','168','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','nanoftp.rpgle','123','0','156','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','nanohttp.rpgle','82','0','103','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','parser.rpgle','1257','0','1407','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','parserInternals.rpgle','567','0','575','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','pattern.rpgle','92','0','117','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','relaxng.rpgle','252','0','297','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','schemasInternals.rpgle','982','0','1137','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','schematron.rpgle','160','0','195','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','threads.rpgle','46','0','70','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','transcode.rpgle','58','0','71','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','tree.rpgle','1453','0','1628','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','uri.rpgle','79','0','100','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','valid.rpgle','470','0','575','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xinclude.rpgle','108','0','147','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xlink.rpgle','135','0','164','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlIO.rpgle','357','0','441','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlautomata.rpgle','150','0','179','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlerror.rpgle','1647','0','1681','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlexports.rpgle','12','0','15','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlmemory.rpgle','181','0','239','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlmodule.rpgle','39','0','51','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlreader.rpgle','506','0','619','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlregexp.rpgle','190','0','246','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlsave.rpgle','79','0','96','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlschemas.rpgle','268','0','318','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlschemastypes.rpgle','195','0','235','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlstdarg.rpgle','25','0','34','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlstring.rpgle','158','0','162','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlunicode.rpgle','498','0','668','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlversion.rpgle.in','263','0','352','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xmlwriter.rpgle','667','0','725','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xpath.rpgle','531','0','631','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xpathInternals.rpgle','536','0','672','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e083c30e12d1a555e6dd5d4e5c0d2cb6934d2a0c','Patrick Monnerat','os400: ile rpg language header files.','xpointer.rpgle','126','0','157','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','initscript.sh','206','13','282','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','make-bldcsndfa.sh','21','0','43','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','make-include.sh','47','1','81','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','make-rpg.sh','60','1','97','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','make-src.sh','195','2','241','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','make.sh','44','1','72','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','e72b4e738965e9ef4bd667b01114f9e27672d232','Patrick Monnerat','os400: add compilation scripts.','os400config.h.in','0','0','353','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','c017988305f20c706bc46620f14e2b4f7522b68d','Patrick Monnerat','os400: add readme: compilation directives and os/400 specific stuff.','README400','204','0','214','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','917e353f2b1f881bd80fe8905f13a728ee99848c','Patrick Monnerat','os400: include in distribution tarball.','Makefile.am','1161','0','1','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','README400','204','0','5','5','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','xpath.rpgle','549','0','18','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','make-src.sh','195','2','1','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','rpgsupport.c','131','26','29','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','02fd12987418007568cd9bad12eef08a75fb134b','Patrick Monnerat','os400: implement xpath macros as procedures for ile/rpg support.','rpgsupport.h','95','0','8','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','bce6a61e68eca99575d4720a9b524ecbc30b04b1','Patrick Monnerat','os400: use c macros to implement equivalent rpg support procedures.','rpgsupport.c','130','19','5','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','HTMLparser.rpgle','339','0','16','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','xpath.rpgle','545','0','4','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.c','147','22','34','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.c','147','22','34','4','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','5378ff9378833f9aac764c1d296cf8f16179ecf5','Patrick Monnerat','os400: add some more c macros equivalent procedures.','rpgsupport.h','101','0','9','0','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','98d71f9191ac83959d24ad7b01b211ef7bb3172e','Patrick Monnerat','os400: make-src.sh: create physical file with target ccsid','make-src.sh','195','2','1','1','false','false','false','2014-10-04 21:13:48+08:00'),('libxml2','2.9.1','21699937b0db0da004401c9571ef10203ec134b2','Philip Withnall','xmlio: handle error returns from dup()  if dup() fails and returns -1, gzdopen() will transparently return null, but then close() will fail after being called on an invalid fd. change the code to only call close() on valid fds.  coverity issue: #72382','xmlIO.c','2166','717','2','2','true','false','false','2014-10-06 11:53:39+08:00'),('libxml2','2.9.1','d319eb922358754f0601ddde97e8f09449477d00','Gaurav Gupta','fix enum check and missing break  for https://bugzilla.gnome.org/show_bug.cgi?id=737403  in file xmlreader.c 1. an enum is checked to proper value instead of checking like a boolean. 2. missing break statement added.','xmlreader.c','3841','1280','3','2','true','false','false','2014-10-06 12:24:17+08:00'),('libxml2','2.9.1','24fb4c329a9b8e142e9d388901a1c59a07f94ed5','Juergen Keil','wrong error column in structured error when parsing end tag  for https://bugzilla.gnome.org/show_bug.cgi?id=734283  libxml2 reports wrong error column numbers (field int2 in xmlerror) in structured error handler, after parsing an end tag.','parser.c','10270','3489','2','0','true','false','false','2014-10-06 18:19:12+08:00'),('libxml2','2.9.1','6bea543eca4804832ca044c73ec62d2dc9594ccb','John Beck','python/tests/sync.py assumes python dictionaries are ordered  for https://bugzilla.gnome.org/show_bug.cgi?id=734017  solaris has had libxml2 version 2.9.1 for a while, with python versions 2.6 and 2.7.  while preparing to also build a module for python 3.4, we ran into an issue with the test case sync.py failing. the failure involved parsing a string that included a python dictionary, then complaining when the order of the parsed result did not match the original order.  but python dictionaries are unordered by definition; see section 5.5 of https://docs.python.org/2/tutorial/datastructures.html .  for whatever reason, python 2.6 and 2.7 always happened to report the pair of values back in their original order, but with python 3.4 the order is random.  the attached patch allows for either order; it also fixes a typo that was repeated several times thanks to the magic of copy & paste.','sync.py','109','8','16','13','true','false','false','2014-10-06 18:26:27+08:00'),('libxml2','2.9.1','292a9f293decfcd1de8870d93866bf450f3f555f','Daniel Veillard','possible overflow in htmlparser.c  for https://bugzilla.gnome.org/show_bug.cgi?id=720615  make sure that the encoding string passed is of reasonable size','HTMLparser.c','4723','1375','10','6','false','false','false','2014-10-06 18:51:04+08:00'),('libxml2','2.9.1','d72cb06de95a100058315bc0c3359d7c46583113','Gaurav Gupta','leak of struct addrinfo in xmlnanoftpconnect()  for https://bugzilla.gnome.org/show_bug.cgi?id=732352  in case of error condition in ipv6 support, the early return here doesn\'t call freeaddrinfo(result), thus leaking memory.','nanoftp.c','1409','420','2','0','true','false','false','2014-10-06 19:28:29+08:00'),('libxml2','2.9.1','91309d3a1d45aa70aa223b1e3ef1b23ab1c0cf36','Daniel Veillard','pointer dereferenced before null check  for https://bugzilla.gnome.org/show_bug.cgi?id=707027  a few pointer dereference before null check fixed. removed a useless test','xmlreader.c','3849','1285','13','4','true','false','false','2014-10-06 20:07:19+08:00'),('libxml2','2.9.1','6d93e9eacf09b6761f1d82138ae543035c0b4776','Gaurav Gupta','unreachable code in tree.c  for https://bugzilla.gnome.org/show_bug.cgi?id=705392  cut out an unused block','tree.c','6364','2427','1','2','false','false','false','2014-10-06 20:20:00+08:00'),('libxml2','2.9.1','7e9bbdf82f5ef65e2fdd4961ee4dbb62949e1f1f','Dennis Filder','parser bug on misformed namespace attributes  for https://bugzilla.gnome.org/show_bug.cgi?id=672539 reported by axel miller <axel.miller@ppi.de>  consider the following start-tag: <x xmlns=\"\"version=\"\">  the start-tag does not conform to the rule  [40]       stag       ::=       \'<\' name (s attribute)* s? \'>\'  since there is no whitespace in front of the attribute \"version\".  thus, libxml2 should reject the start-tag. but it doesn\'t:  $ echo \'<x xmlns=\"\"version=\"\"/>\' | xmllint - <?xml version=\"1.0\"?> <x xmlns=\"\" version=\"\"/>  the error seems to happen only if there is a namespace declaration in front of the attribute. a missing whitespace between other attributes is handled correctly:  $ echo \'<x someattr=\"\"version=\"\"/>\' | xmllint - -:1: parser error : attributes construct error <x someattr=\"\"version=\"\"/>               ^ [...]','parser.c','10284','3497','14','0','true','false','false','2014-10-06 20:34:14+08:00'),('libxml2','2.9.1','a61929e8cafcf42b407ae507ff185dee05d9e070','Gaurav Gupta','remove unnecessary null check in xpointer.c  for https://bugzilla.gnome.org/show_bug.cgi?id=738052  superfluous check','xpointer.c','1898','550','0','2','false','false','false','2014-10-07 12:28:34+08:00'),('libxml2','2.9.1','f5496a1ef43ab46211c772cd7a183e719ab24bb5','Gaurav Gupta','xpointer : fixing null pointers  for https://bugzilla.gnome.org/show_bug.cgi?id=738053 at many places in xpointer.c null check is missing which is dereferenced at later places.','xpointer.c','1926','560','28','0','false','false','false','2014-10-07 17:09:35+08:00'),('libxml2','2.9.1','7dc24965092d7cc310908d6052913050e88ec072','Dmitriy','fix zlib and lzma libraries check via command line  for https://bugzilla.gnome.org/show_bug.cgi?id=737532  add save, change and restore ldflags before ac_check_lib call when functions gzread and lzma_code are searching inside action-if-found of ac_check_headers','configure.in','1562','0','8','2','true','false','false','2014-10-07 18:59:00+08:00'),('libxml2','2.9.1','7cf57380b11d20b0bd4c86a493db7a0e1d0f0071','Daniel Veillard','parser error on repeated recursive entity expansion containing &lt;  for https://bugzilla.gnome.org/show_bug.cgi?id=736417  basically a weird side effect and a failure to properly parenthesize a boolean expression led to this bug','parser.c','10284','3497','2','2','true','false','false','2014-10-08 16:09:56+08:00'),('libxml2','2.9.1','f985ada79027570d5e3f0d1b29c8ecf23921044a','Daniel Veillard','preparing for upcoming release of 2.9.2  moving configure.in to configure.ac since all tools complain about it','configure.ac','1562','0','1663','0','false','true','false','2014-10-09 23:59:36+08:00'),('libxml2','2.9.2','f985ada79027570d5e3f0d1b29c8ecf23921044a','Daniel Veillard','preparing for upcoming release of 2.9.2  moving configure.in to configure.ac since all tools complain about it','configure.ac','1562','0','1663','0','false','true','false','2014-10-09 23:59:36+08:00'),('libxml2','2.9.2','d0dc58135ac93392ff596e8f9e996a62ed0e42a5','Daniel Veillard','removal of old configure.in','configure.in','None','None','0','1663','false','false','false','2014-10-10 15:35:10+08:00'),('libxml2','2.9.2','ad160cb3c4bbd47003468de3308457255734cce2','Patrick Monnerat','os400: use either configure.ac or configure.in.','initscript.sh','210','13','10','2','false','false','false','2014-10-10 15:36:48+08:00'),('libxml2','2.9.2','5018082b8c87fb0c1cac86a5e4f77333abf435a7','Patrick Monnerat','os400: do not try to copy unexisting doc files','make-src.sh','195','2','1','1','false','false','false','2014-10-10 15:37:39+08:00'),('libxml2','2.9.2','5018082b8c87fb0c1cac86a5e4f77333abf435a7','Patrick Monnerat','os400: do not try to copy unexisting doc files','make.sh','47','1','10','7','false','false','false','2014-10-10 15:37:39+08:00'),('libxml2','2.9.2','8854e4631844eac8dbae10cc32904f27d5268af7','Daniel Veillard','windows critical sections not released correctly  for https://bugzilla.gnome.org/show_bug.cgi?id=737851 based on report from mike.vanduzee@caris.com , we were missing calling leavecriticalsection() when count was down to 0 hence not freeing adequately the related resource.','threads.c','570','173','4','2','false','false','false','2014-10-13 15:03:58+08:00'),('libxml2','2.9.2','12fd65434037d50429587792ed2e7e98f2fb739b','Francis Dupont','visual studio 14 ctp defines snprintf()  for https://bugzilla.gnome.org/show_bug.cgi?id=737937  visual studio 14 ctp (the vs which comes with windows 10) defines snprintf(). it could be seen as a good idea as snprintf() is part of the c99 standard but unfortunately libxml2 as many packages defines snprintf as _snprintf, the function to use for any previous versions of the visual studio runtime. more, to avoid hiding/shadowing snprintf() declaration in stdio.h is protected by an \"#ifdef snprintf\" followed by an \"#error\", so compilation fails.  but the fix is easy: the corresponding c/c++ compiler defines _msc_ver to 1900 so it is enough to guard the snprintf define against it, cf. the attached patch for win32config.h (from 2.9.1 \"latest\" tarball).','win32config.h','38','8','2','0','true','false','false','2014-10-13 15:09:43+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','buf.c','726','230','2','2','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','buf.h','35','0','2','2','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','entities.c','723','195','2','2','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','entities.h','92','0','2','2','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','tree.h','823','0','37','37','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','tree.h','823','0','37','37','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','95ebe53b50dfcff1fc5378309bc4f3c58173298e','Kurt Roeckx','fix and add const qualifiers  for https://bugzilla.gnome.org/show_bug.cgi?id=689483  it seems there are functions that do use the const qualifier for some of the arguments, but it seems that there are a lot of functions that don\'t use it and probably should.  so i created a patch against 2.9.0 that makes as much as possible const in tree.h, and changed other files as needed.  there were a lot of cases like \"const xmlnodeptr node\".  this doesn\'t actually do anything, there the *pointer* is constant not the object it points to. so i changed those to \"const xmlnode *node\".  i also removed some consts, mostly in the copy functions, because those functions can actually modify the doc or node they copy from','tree.c','6364','2427','47','47','true','false','false','2014-10-13 16:06:21+08:00'),('libxml2','2.9.2','7a72f4afd5b3f57e3fd1097461cc3416061cf6ff','Daniel Veillard','fix a couple of issues raised by make dist','tree.h','823','0','2','2','true','false','false','2014-10-13 16:23:24+08:00'),('libxml2','2.9.2','7a72f4afd5b3f57e3fd1097461cc3416061cf6ff','Daniel Veillard','fix a couple of issues raised by make dist','xmlIO.c','2166','717','7','0','true','false','false','2014-10-13 16:23:24+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','APIchunk11.html','339','0','2','2','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','APIchunk12.html','927','0','1','2','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','APIchunk14.html','470','0','0','2','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','APIchunk26.html','332','0','1','1','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','APIfunctions.html','2347','0','41','41','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-entities.html','166','0','4','4','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-tree.html','1589','0','73','73','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-xmlerror.html','953','0','1','1','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-xmlschemastypes.html','237','0','2','2','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml-entities.html','79','0','4','4','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml-tree.html','990','0','72','72','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml-xmlerror.html','865','0','1','1','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml-xmlschemastypes.html','123','0','2','2','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-api.xml','18508','1','51','51','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','libxml2-refs.xml','32172','0','49','52','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','generator.py','1054','281','1','1','true','false','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','testapi.c','41872','6435','212','191','true','true','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','af62eb4fabda119f12c53da2e68cf0decb68b0d8','Daniel Veillard','python generator bug raised by the const change  the doc methode for xmldocgetrootelement wasn\'t generated anymore','testapi.c','41872','6435','212','191','true','true','false','2014-10-13 16:40:56+08:00'),('libxml2','2.9.2','fa23ac1a796877621a21b8470f2c491d995a5151','Samuel Martin','provide cmake module  * add libxml2-config.cmake.in template * configure.ac: add libxml2-config.cmake.in to the configured file list * makefile.am: install libxml2-config.cmake under ${libdir}/cmake/libxml2  signed-off-by: samuel martin <s.martin49@gmail.com>','Makefile.am','1164','0','4','0','false','false','false','2014-10-13 18:02:53+08:00'),('libxml2','2.9.2','fa23ac1a796877621a21b8470f2c491d995a5151','Samuel Martin','provide cmake module  * add libxml2-config.cmake.in template * configure.ac: add libxml2-config.cmake.in to the configured file list * makefile.am: install libxml2-config.cmake under ${libdir}/cmake/libxml2  signed-off-by: samuel martin <s.martin49@gmail.com>','configure.ac','1562','0','1','1','false','false','false','2014-10-13 18:02:53+08:00'),('libxml2','2.9.2','fa23ac1a796877621a21b8470f2c491d995a5151','Samuel Martin','provide cmake module  * add libxml2-config.cmake.in template * configure.ac: add libxml2-config.cmake.in to the configured file list * makefile.am: install libxml2-config.cmake under ${libdir}/cmake/libxml2  signed-off-by: samuel martin <s.martin49@gmail.com>','libxml2-config.cmake.in','31','0','50','0','false','false','false','2014-10-13 18:02:53+08:00'),('libxml2','2.9.2','7446445dec0e46a5af821e57fa5ee04405666efd','Yegor Yefremov','xmlmemory: handle realloc properly  if realloc fails, free original pointer.  signed-off-by: yegor yefremov <yegorslists@googlemail.com>','xmlmemory.c','612','180','5','3','false','false','false','2014-10-13 20:46:37+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode  (after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode  (after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','c7684f9b2ece3b7593d52b71df3015cd076eda81','Roumen Petrov','elfgcchack.h: add xmlxpathnodeeval and xmlxpathsetcontextnode  (after rebuild in doc)','elfgcchack.h','3183','0','24','0','false','false','false','2014-10-16 11:41:55+08:00'),('libxml2','2.9.2','4bb03d7a80057b1df71a2dc07d8569f0b6772e3f','Roumen Petrov','elfgcchack.h: more legacy needs xmlsax2startelement() and xmlsax2endelement()','elfgcchack.h','3183','0','2','2','false','false','false','2014-10-16 11:42:21+08:00'),('libxml2','2.9.2','21fec4999b5f42f2888480dd13896d1f2b33071a','Roumen Petrov','win32/libxml2.def.src after rebuild in doc','libxml2.def.src','1703','0','24','0','false','false','false','2014-10-16 11:44:33+08:00'),('libxml2','2.9.2','21fec4999b5f42f2888480dd13896d1f2b33071a','Roumen Petrov','win32/libxml2.def.src after rebuild in doc','libxml2.def.src','1703','0','24','0','false','false','false','2014-10-16 11:44:33+08:00'),('libxml2','2.9.2','c2450d8ba37f2de745dd70db8f5f586aa8651917','Roumen Petrov','fix some tabs mixing incompatible with python3','setup.py.in','192','0','43','43','true','false','false','2014-10-16 11:46:35+08:00'),('libxml2','2.9.2','f3efaba30e92efa2fc5efe1de924dfe0e2fa325b','Roumen Petrov','remove have_config_h dependency in testlimits.c','testlimits.c','1057','251','0','3','false','false','false','2014-10-16 12:01:09+08:00'),('libxml2','2.9.2','f3efaba30e92efa2fc5efe1de924dfe0e2fa325b','Roumen Petrov','remove have_config_h dependency in testlimits.c','Makefile.msvc','382','0','1','1','false','false','false','2014-10-16 12:01:09+08:00'),('libxml2','2.9.2','974db365de3a3d78a6cd7f5871f05e1432bab9b5','Roumen Petrov','ac_config_files and executable bit','configure.ac','1563','0','3','2','false','false','false','2014-10-16 12:07:43+08:00'),('libxml2','2.9.2','500c54ef326b62b8126e2d98d3a50f1a30dc5292','Bart De Schuymer','fix memory leak xml header encoding field with xml_parse_ignore_enc  when the xml parser encounters an xml encoding in an xml header while configured with option xml_parse_ignore_enc, it fails to free memory allocated for storing the encoding. the patch below fixes this. how to reproduce: 1. change doc/examples/parse4.c to add xmlctxtuseoptions(ctxt, xml_parse_ignore_enc); after the call to xmlcreatepushparserctxt. 2. rebuild 3. run the following command from the top libxml2 directory: ld_library_path=.libs/ valgrind --leak-check=full ./doc/examples/.libs/parse4 ./test.xml , where test.xml contains following input: <?xml version=\"1.0\" encoding=\"utf-81\" ?><hi/> valgrind will report: ==1964== 10 bytes in 1 blocks are definitely lost in loss record 1 of 1 ==1964==    at 0x4c272db: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so) ==1964==    by 0x4e88497: xmlparseencname (parser.c:10224) ==1964==    by 0x4e888fe: xmlparseencodingdecl (parser.c:10295) ==1964==    by 0x4e89630: xmlparsexmldecl (parser.c:10534) ==1964==    by 0x4e8b737: xmlparsetryorfinish (parser.c:11293) ==1964==    by 0x4e8e775: xmlparsechunk (parser.c:12283)  signed-off-by: bart de schuymer <bart at amplidata com>','parser.c','10286','3497','4','2','true','false','false','2014-10-16 12:17:20+08:00'),('libxml2','2.9.2','be2a7edaf289c5da74a4f9ed3a0b6c733e775230','Daniel Veillard','fix for cve-2014-3660  issues related to the billion laugh entity expansion which happened to escape the initial set of fixes','parser.c','10312','3506','38','4','true','false','false','2014-10-16 13:59:47+08:00'),('libxml2','2.9.2','2fcdb424090239336ec5aa8b06ed072cfb6cb817','Daniel Veillard','forgot to add the cmake makefile','libxml.spec.in','79','0','1','0','false','false','false','2014-10-16 15:39:41+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','NEWS','2575','0','644','10','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','interface.html','59','0','1','1','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','libxml2.xsa','98','0','83','130','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','news.html','2355','0','186','6','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','xml.html','5759','0','188','3','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','elfgcchack.h','3183','0','2','2','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','726f67e2f140f8d936dfe993bf9ded3180d750d2','Daniel Veillard','release of libxml2-2.9.2','setup.py','181','3','1','1','false','false','false','2014-10-16 15:40:16+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"  this reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7. as this break xmlcatalog command https://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"  this reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7. as this break xmlcatalog command https://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','f65128f38289d77ff322d63aef2858cc0a819c34','Daniel Veillard','revert \"missing initialization for the catalog module\"  this reverts commit 054c716ea1bf001544127a4ab4f4346d1b9947e7. as this break xmlcatalog command https://bugzilla.redhat.com/show_bug.cgi?id=1153753','parser.c','10311','3505','0','3','false','false','false','2014-10-17 17:13:41+08:00'),('libxml2','2.9.2','72a46a519ce7326d9a00f0b6a7f2a8e958cd1675','Daniel Veillard','fix missing entities after cve-2014-3660 fix  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  the fix for cve-2014-3660 introduced a regression in some case where entity substitution is required and the entity is used first in anotther entity referenced from an attribute value','parser.c','10312','3507','2','1','true','false','false','2014-10-23 11:35:36+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml','12','0','15','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml.rde','10','0','15','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml.rdr','22','0','31','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml.sax','63','0','66','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml.sax2','63','0','66','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml','12','0','15','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','df23f584fda15955a0811bd768a8925eb98741c9','Daniel Veillard','adding example from bugs 738805 to regression tests  for https://bugzilla.gnome.org/show_bug.cgi?id=738805  tortuous test case provided by pierre.labastie@neuf.fr','ent_738805.xml','12','0','16','0','true','false','false','2014-10-23 13:52:47+08:00'),('libxml2','2.9.2','579410427fa11725ca411e45d3ac57db92586ac2','Philip Withnall','remove various unused value assignments  as detected by coverity (cids 60467–60472).  https://bugzilla.gnome.org/show_bug.cgi?id=739220','relaxng.c','8347','2275','1','1','false','false','false','2014-10-27 21:18:57+08:00'),('libxml2','2.9.2','579410427fa11725ca411e45d3ac57db92586ac2','Philip Withnall','remove various unused value assignments  as detected by coverity (cids 60467–60472).  https://bugzilla.gnome.org/show_bug.cgi?id=739220','testdict.c','333','78','2','2','false','false','false','2014-10-27 21:18:57+08:00'),('libxml2','2.9.2','579410427fa11725ca411e45d3ac57db92586ac2','Philip Withnall','remove various unused value assignments  as detected by coverity (cids 60467–60472).  https://bugzilla.gnome.org/show_bug.cgi?id=739220','tree.c','6364','2427','4','4','false','false','false','2014-10-27 21:18:57+08:00'),('libxml2','2.9.2','7580ce0a7f53891de520fed2c0e360266c286da6','Daniel Veillard','update win32 configure.js to search for configure.ac  as configure.in was renamed','configure.js','635','178','1','1','false','false','false','2014-10-28 18:13:53+08:00'),('libxml2','2.9.2','f54d6a929af2a570396f0595a0e29064c908c12e','Nick Wellnhofer','account for id attributes in xmlsettreedoc','tree.c','6372','2429','11','0','false','false','false','2014-12-19 00:09:03+01:00'),('libxml2','2.9.2','fff8a6b87e05200a0ad0af6f86c2e859c7de9172','Michael Heimpold','threads: use forward declarations only for glibc  fixes bug #704908  the declarations of pthread functions, used to generate weak references to them, fail to suppress macros. thus, if any pthread function has been provided as a macro, compiling threads.c will fail. this breaks on musl libc, which defines pthread_equal as a macro (in addition to providing the function, as required).  prevent the declarations for e.g. musl libc by refining the condition.  the idea for this solution was borrowed from the alpine linux guys, see http://git.alpinelinux.org/cgit/aports/tree/main/libxml2/libxml2-pthread.patch  signed-off-by: michael heimpold <mhei@heimpold.de>','threads.c','570','173','2','2','true','false','false','2014-12-22 11:12:12+08:00'),('libxml2','2.9.2','fff8a6b87e05200a0ad0af6f86c2e859c7de9172','Michael Heimpold','threads: use forward declarations only for glibc  fixes bug #704908  the declarations of pthread functions, used to generate weak references to them, fail to suppress macros. thus, if any pthread function has been provided as a macro, compiling threads.c will fail. this breaks on musl libc, which defines pthread_equal as a macro (in addition to providing the function, as required).  prevent the declarations for e.g. musl libc by refining the condition.  the idea for this solution was borrowed from the alpine linux guys, see http://git.alpinelinux.org/cgit/aports/tree/main/libxml2/libxml2-pthread.patch  signed-off-by: michael heimpold <mhei@heimpold.de>','threads.c','570','173','2','2','true','false','false','2014-12-22 11:12:12+08:00'),('libxml2','2.9.2','fff8a6b87e05200a0ad0af6f86c2e859c7de9172','Michael Heimpold','threads: use forward declarations only for glibc  fixes bug #704908  the declarations of pthread functions, used to generate weak references to them, fail to suppress macros. thus, if any pthread function has been provided as a macro, compiling threads.c will fail. this breaks on musl libc, which defines pthread_equal as a macro (in addition to providing the function, as required).  prevent the declarations for e.g. musl libc by refining the condition.  the idea for this solution was borrowed from the alpine linux guys, see http://git.alpinelinux.org/cgit/aports/tree/main/libxml2/libxml2-pthread.patch  signed-off-by: michael heimpold <mhei@heimpold.de>','threads.c','570','173','2','2','true','false','false','2014-12-22 11:12:12+08:00'),('libxml2','2.9.2','220a7baeeee484bbd356a506f23deb57c57e0056','Nick Wellnhofer','don\'t add ids in xmlsettreedoc  this partially reverts my previous commit fixing bug #741919.','tree.c','6372','2430','8','0','true','false','false','2014-12-23 21:28:37+01:00'),('libxml2','2.9.2','3211973961d01b9c5efb5c5f3b8620a2a3c17561','Samuel Martin','libxml2-config.cmake.in: update include directories  align the include directories on those from the pkg-config module.  signed-off-by: samuel martin <s.martin49@gmail.com>','libxml2-config.cmake.in','31','0','1','1','false','false','false','2015-02-13 01:53:07+01:00'),('libxml2','2.9.2','fb8e9e212fcad1b48638fb6fa27104e1d0c8853b','Tomas Radej','add python 3 rpm subpackage  allow compilation and packaging of both python2 and python3 when present','libxml.spec.in','114','0','54','6','false','false','false','2015-02-18 22:47:13+08:00'),('libxml2','2.9.2','a7dfab7411cbf545f359dd3157e5df1eb0e7ce31','Daniel Veillard','stop parsing on entities boundaries errors  for https://bugzilla.gnome.org/show_bug.cgi?id=744980  there are times, like on unterminated entities that it\'s preferable to stop parsing, even if that means less error reporting. entities are feeding the parser on further processing, and if they are ill defined then it\'s possible to get the parser to bug. also do the same on conditional sections if the input is broken, as the structure of the document can\'t be guessed.','parser.c','10313','3507','1','0','true','true','false','2015-02-23 11:17:35+08:00'),('libxml2','2.9.2','9b8512337d14c8ddf662fcb98b0135f225a1c489','Daniel Veillard','cleanup conditional section error handling  for https://bugzilla.gnome.org/show_bug.cgi?id=744980  the error handling of conditional section also need to be straightened as the structure of the document can\'t be guessed on a failure there and it\'s better to stop parsing as further errors are likely to be irrelevant.','parser.c','10319','3507','6','0','true','true','false','2015-02-23 11:29:20+08:00'),('libxml2','2.9.2','9b987f8c98763ee569bde90b5268b43474ca106c','Christopher Swenson','fix timsort invariant loop re: envisage article  see http://envisage-project.eu/proving-android-java-and-python-sorting-algorithm-is-broken-and-how-to-fix-it/  we use a \"runlen\" array of size 128, so it should be nearly impossible to have our implementation overflow.  but in any case, the fix is relatively simple -- checking two extra conditions in the invariant calculation.  i also took this opportunity to remove some redundancy in the left/right merge logic in the invariant loop.','timsort.h','313','78','39','35','true','false','false','2015-02-27 14:55:49+08:00'),('libxml2','2.9.2','620a70615e68b30db1a80a993180a41dc24f12b9','Steve Nairn','fix the fix to windows locking  for https://bugzilla.gnome.org/show_bug.cgi?id=737851  unfortunately this change has introduced a problem which results in occasional hangs on windows when running multi-threaded on a multi-core host.  when locking the xmlrmutex the count field is increment inside the critical section but when unlocking the count field is decremented outside the critical section. the increment/decrement is not atomic so this can result in the count field being updated incorrectly.  the solution is to change xmlrmutexunlock to decrement the count field before leaving the critical section rather than after.','threads.c','570','173','1','1','true','false','false','2015-03-03 19:42:01+08:00'),('libxml2','2.9.2','f6aaabce85baf48d622cb4686df810fdba3db073','Nick Wellnhofer','allow attributes on descendant-or-self axis  if the context node is an attribute, the attribute itself is on the descendant-or-self axis. the principal node type of this axis is element, so the only node test that can return the attribute is \"node()\". in other words, \"@attr/descendant-or-self::node()\" is equivalent to \"@attr\".  this matches the behavior of saxon-ce.','simplebase','71','0','8','0','false','false','false','2015-03-08 16:25:52+01:00'),('libxml2','2.9.2','f6aaabce85baf48d622cb4686df810fdba3db073','Nick Wellnhofer','allow attributes on descendant-or-self axis  if the context node is an attribute, the attribute itself is on the descendant-or-self axis. the principal node type of this axis is element, so the only node test that can return the attribute is \"node()\". in other words, \"@attr/descendant-or-self::node()\" is equivalent to \"@attr\".  this matches the behavior of saxon-ce.','simplebase','10','0','1','0','false','false','false','2015-03-08 16:25:52+01:00'),('libxml2','2.9.2','f6aaabce85baf48d622cb4686df810fdba3db073','Nick Wellnhofer','allow attributes on descendant-or-self axis  if the context node is an attribute, the attribute itself is on the descendant-or-self axis. the principal node type of this axis is element, so the only node test that can return the attribute is \"node()\". in other words, \"@attr/descendant-or-self::node()\" is equivalent to \"@attr\".  this matches the behavior of saxon-ce.','xpath.c','9859','3143','7','7','false','false','false','2015-03-08 16:25:52+01:00'),('libxml2','2.9.2','ba58f23c60862f2158b457f4d30031761bf4dde1','Nick Wellnhofer','fix order of root nodes  make sure root nodes are sorted before other nodes.','xpath.c','9859','3143','2','2','true','false','false','2015-03-08 16:44:11+01:00'),('libxml2','2.9.2','342658a132dddc6f2d72f83070e55a545a5c1608','Nick Wellnhofer','add a couple of xpath tests','simplebase','112','0','46','0','false','false','false','2015-03-08 16:46:04+01:00'),('libxml2','2.9.2','342658a132dddc6f2d72f83070e55a545a5c1608','Nick Wellnhofer','add a couple of xpath tests','simplebase','15','0','5','0','false','false','false','2015-03-08 16:46:04+01:00'),('libxml2','2.9.2','02b252d7a272483077f905eb3a71d489410d1c06','Nick Wellnhofer','regression test for bug #695699','chaptersbase','115','0','10','0','true','false','false','2015-03-08 17:00:37+01:00'),('libxml2','2.9.2','02b252d7a272483077f905eb3a71d489410d1c06','Nick Wellnhofer','regression test for bug #695699','chaptersbase','9','0','1','0','true','false','false','2015-03-08 17:00:37+01:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','relaxng.c','8351','2277','5','1','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_0','None','None','0','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_0.err','2','0','2','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_1','None','None','0','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_1.err','1','0','1','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_2','None','None','0','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_2.err','2','0','2','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_err','1','0','1','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_valid','None','None','0','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219.rng','13','0','14','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_0.xml','1','0','1','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_1.xml','1','0','1','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','2fab235d10e8aee321133d11df61e4527a02a511','Daniel Veillard','fix support for except in nameclasses  for https://bugzilla.gnome.org/show_bug.cgi?id=565219  the code was imply missing even if simple, added a few regression tests.','565219_2.xml','1','0','1','0','true','false','false','2015-03-16 08:43:37+08:00'),('libxml2','2.9.2','7607d9dd450275911eec5fcb66b69aacd13a4cc8','Shaun McCance','allow html serializer to output html5 doctype  for https://bugzilla.gnome.org/show_bug.cgi?id=747301  use simple html5 doctype for about:legacy-compat  html5 uses a doctype without a public or system identifier. it looks like this:  <!doctype html>  i can\'t use xslt to output this, because to get a doctype i have to provide a public or system identifier. luckily, the standards folks recognized this and provided this semantically equivalent form for the html doctype:  <!doctype html system \"about:legacy-compat\">  but people don\'t like seeing the \"legacy\" identifier in their output. they\'d rather see the shiny new doctype. since we know that about:legacy-compat is defined by the w3c to be semantically equivalent to the sans-system doctype, we could just special-case it in the html serializer in libxml2. so if you set the system identifier to \"about:legacy-compat\", you get an html5 short-form doctype.','HTMLtree.c','790','274','2','1','false','false','false','2015-04-03 22:52:36+08:00'),('libxml2','2.9.2','8985cde70901c62d3f0f04da225e73b7344a52d7','Martin von Gagern','xmlmemused is not thread-safe  for https://bugzilla.gnome.org/show_bug.cgi?id=747437 just use the mutex to protect access to those variables','xmlmemory.c','620','180','12','2','false','false','false','2015-04-13 16:32:14+08:00'),('libxml2','2.9.2','213f1fe0d76d30eaed6e5853057defc43e6df2c9','Daniel Veillard','cve-2015-1819 enforce the reader to run in constant memory  one of the operation on the reader could resolve entities leading to the classic expansion issue. make sure the buffer used for xmlreader operation is bounded. introduce a new allocation type for the buffers for this effect.','buf.c','755','241','42','1','false','false','false','2015-04-14 17:41:48+08:00'),('libxml2','2.9.2','213f1fe0d76d30eaed6e5853057defc43e6df2c9','Daniel Veillard','cve-2015-1819 enforce the reader to run in constant memory  one of the operation on the reader could resolve entities leading to the classic expansion issue. make sure the buffer used for xmlreader operation is bounded. introduce a new allocation type for the buffers for this effect.','tree.h','824','0','2','1','false','false','false','2015-04-14 17:41:48+08:00'),('libxml2','2.9.2','213f1fe0d76d30eaed6e5853057defc43e6df2c9','Daniel Veillard','cve-2015-1819 enforce the reader to run in constant memory  one of the operation on the reader could resolve entities leading to the classic expansion issue. make sure the buffer used for xmlreader operation is bounded. introduce a new allocation type for the buffers for this effect.','xmlreader.c','3864','1286','19','1','false','false','false','2015-04-14 17:41:48+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','HTMLparser.rpgle','340','0','8','7','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','SAX.rpgle','165','0','3','3','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','SAX2.rpgle','206','0','4','4','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','chvalid.rpgle','72','0','3','2','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','dict.rpgle','59','0','6','3','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','encoding.rpgle','270','0','4','4','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','globals.rpgle','456','0','15','15','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','nanoftp.rpgle','120','0','1','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','parser.rpgle','1260','0','22','19','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','parserInternals.rpgle','567','0','1','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','schematron.rpgle','160','0','1','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','tree.rpgle','1459','0','17','11','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlIO.rpgle','359','0','4','2','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlTypesC.rpgle','21','0','24','0','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlmemory.rpgle','182','0','10','9','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlreader.rpgle','508','0','3','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlsave.rpgle','82','0','5','2','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlschemastypes.rpgle','197','0','6','4','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlstdarg.rpgle','25','0','3','3','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xmlstring.rpgle','160','0','3','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','xpath.rpgle','547','0','4','2','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','make-rpg.sh','60','1','8','5','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','22b0415a8945a5e166457c6f8e3785f89339c533','Patrick Monnerat','os400: fix various ile/rpg types definitions. adjust build scripts.     - a typo caused an undefined symbol reference.     - a structure field name did not match the corresponding c name due to a typo.     - some structured fields were not properly aligned.     - the long/ulong types were wrongly mapped to 64-bit types.     - a typo in a /include directive caused a compilation error.     - doc files copy now converts from utf-8 and split long lines.     - adjust /include file name mapping translation for proper prefix handling.','make.sh','55','1','10','1','true','false','false','2015-04-16 16:04:06+08:00'),('libxml2','2.9.2','b02a167af3d2a47c155bce123820cbb5fa19dc9c','Michael Catanzaro','silence clang\'s -wunknown-attribute  clang doesn\'t have perfect feature compatibility with gcc, unfortunately.  https://bugzilla.gnome.org/show_bug.cgi?id=747870','xmlversion.h.in','5','0','1','1','false','false','false','2015-04-26 16:00:05-05:00'),('libxml2','2.9.2','9aa37588ee78a06ca1379a9d9356eab16686099c','Daniel Veillard','do not process encoding values if the declaration if broken  for https://bugzilla.gnome.org/show_bug.cgi?id=751603  if the string is not properly terminated do not try to convert to the given encoding.','parser.c','10323','3507','4','0','false','false','false','2015-06-29 09:08:25+08:00'),('libxml2','2.9.2','709a952110e98621c9b78c4f26462a9d8333102e','Daniel Veillard','fail parsing early on if encoding conversion failed  for https://bugzilla.gnome.org/show_bug.cgi?id=751631  if we fail conversing the current input stream while processing the encoding declaration of the xmldecl then it\'s safer to just abort there and not try to report further errors.','parser.c','10326','3508','5','1','true','false','false','2015-06-29 16:10:26+08:00'),('libxml2','2.9.2','58b84e1f822d9323b4bbadeb07ee147cccc96e7e','Scott Graham','fix a self assignment issue raised by clang  for https://bugzilla.gnome.org/show_bug.cgi?id=751679  also added a few newline cleanups','xmlschemas.c','18732','4681','3','3','true','false','false','2015-06-30 10:47:16+08:00'),('libxml2','2.9.2','140c251e8e5653572edcca91b9d675f871735cb4','Daniel Veillard','recover unescaped less-than character in html recovery parsing  as pointed by christian schoenebeck <schoenebeck@crudebyte.com> on the list and based on some of his early patches, this preserve content when unescaped opening angle brackets are not escaped in textual content like:   <p>  a < b </p>   <p> a <0 </p>   <p> a <=0 </p>  while still reporting the error.','HTMLparser.c','4734','1384','30','3','true','false','false','2015-06-30 11:36:28+08:00'),('libxml2','2.9.2','73b2d73df8981e37a03dfdcf727d8bdafb019266','Daniel Veillard','avoid xss on the search of xmlsoft.org  query string need to be escaped before being displayed back','search.php','474','30','3','2','false','false','false','2015-07-03 20:58:33+08:00'),('libxml2','2.9.2','3eaedba1b64180668fdab7ad2eba549586017bf3','Nick Wellnhofer','fix previous change to node sort order  commit ba58f23 broke comparison of nodes from different documents. thanks to olli pottonen for the report.','xpath.c','9859','3143','4','4','true','false','false','2015-07-11 14:27:34+02:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','737840.xml','10','0','10','0','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','737840.xml.err','None','None','0','0','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','737840.xml.err.rdr','None','None','0','0','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','737840.xml','9','0','10','0','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','737840.ent','1','0','1','0','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','ef709ce2f7b792d5fb69ed142796d743fb1eb388','Daniel Veillard','fix the spurious id already defined error  for https://bugzilla.gnome.org/show_bug.cgi?id=737840 the fix for 724903 introduced a regression on external entities carrying ids, revert that patch in part and add a specific test to avoid readding it','valid.c','4752','1551','4','2','true','false','false','2015-09-10 19:46:46+08:00'),('libxml2','2.9.2','51f02b0a03ea1fa6c65b3f9fd88cf60fb5803783','Daniel Veillard','fix a bug on name parsing at the end of current input buffer  for https://bugzilla.gnome.org/show_bug.cgi?id=754946  when hitting the end of the current input buffer while parsing a name we could end up loosing the beginning of the name, which led to various issues.','parser.c','10332','3511','20','9','true','false','false','2015-09-15 16:50:32+08:00'),('libxml2','2.9.2','51f02b0a03ea1fa6c65b3f9fd88cf60fb5803783','Daniel Veillard','fix a bug on name parsing at the end of current input buffer  for https://bugzilla.gnome.org/show_bug.cgi?id=754946  when hitting the end of the current input buffer while parsing a name we could end up loosing the beginning of the name, which led to various issues.','754946.xml','None','None','0','0','true','false','false','2015-09-15 16:50:32+08:00'),('libxml2','2.9.2','51f02b0a03ea1fa6c65b3f9fd88cf60fb5803783','Daniel Veillard','fix a bug on name parsing at the end of current input buffer  for https://bugzilla.gnome.org/show_bug.cgi?id=754946  when hitting the end of the current input buffer while parsing a name we could end up loosing the beginning of the name, which led to various issues.','754946.xml.err','15','0','16','0','true','false','false','2015-09-15 16:50:32+08:00'),('libxml2','2.9.2','51f02b0a03ea1fa6c65b3f9fd88cf60fb5803783','Daniel Veillard','fix a bug on name parsing at the end of current input buffer  for https://bugzilla.gnome.org/show_bug.cgi?id=754946  when hitting the end of the current input buffer while parsing a name we could end up loosing the beginning of the name, which led to various issues.','754946.xml.str','4','0','4','0','true','false','false','2015-09-15 16:50:32+08:00'),('libxml2','2.9.2','51f02b0a03ea1fa6c65b3f9fd88cf60fb5803783','Daniel Veillard','fix a bug on name parsing at the end of current input buffer  for https://bugzilla.gnome.org/show_bug.cgi?id=754946  when hitting the end of the current input buffer while parsing a name we could end up loosing the beginning of the name, which led to various issues.','754946.xml','1','0','1','0','true','false','false','2015-09-15 16:50:32+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','parser.c','10332','3511','3','3','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','754947.xml','None','None','0','0','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','754947.xml.err','7','0','7','0','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','754947.xml.str','5','0','5','0','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','cdata.xml.str','5','0','2','2','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','4a5d80aded1da94cd55294e7207109712201b75b','Daniel Veillard','fix a bug in cdata error handling in the push parser  for https://bugzilla.gnome.org/show_bug.cgi?id=754947  the checking function was returning incorrect args in some cases adds the test to teh reg suite and fix one of the existing test output','754947.xml','1','0','1','0','true','false','false','2015-09-18 15:06:46+08:00'),('libxml2','2.9.2','cf77e60515045bdd66f2c59c69a06e603b470eae','Gaurav Gupta','add missing null check in xmlparseexternalentityprivate  for https://bugzilla.gnome.org/show_bug.cgi?id=755857  a case where we check for null but not everywhere','parser.c','10334','3513','6','4','false','false','false','2015-09-30 14:46:29+02:00'),('libxml2','2.9.2','bd0526e66a56e75a18da8c15c4750db8f801c52d','Daniel Veillard','another variation of overflow in conditional sections  which happen after the previous fix to https://bugzilla.gnome.org/show_bug.cgi?id=756456  but stopping the parser and exiting we didn\'t pop the intermediary entities and doing the skip there applies on an input which may be too small','parser.c','10336','3515','3','1','true','false','false','2015-10-23 19:02:28+08:00'),('libxml2','2.9.2','b40c19405e9e069501ffd3b439347a7fdfc4d19d','Fabien Degomme','fix a small error in xmllint --format description  obviously it operates on the output not the input','xmllint.c','2750','866','1','1','true','true','false','2015-10-23 19:35:02+08:00'),('libxml2','2.9.2','73c50805d9302263a1118356bc2553b441b31b33','Alex Henrie','correct spelling of \"calling\"','xmlschemas.c','18732','4681','1','1','false','false','false','2015-10-26 18:33:14+08:00'),('libxml2','2.9.2','41ac9049a27f52e7a1f3b341f8714149fc88d450','Daniel Veillard','fix an error in previous conditional section patch  an off by one mistake in the change, led to error on correct document where the end of the included entity was exactly the end of the conditional section, leading to regtest failure','parser.c','10336','3515','1','1','true','false','false','2015-10-27 10:53:44+08:00'),('libxml2','2.9.2','e724879d964d774df9b7969fc846605aa1bac54c','Daniel Veillard','fix parsing short unclosed comment uninitialized access  for https://bugzilla.gnome.org/show_bug.cgi?id=746048 the html parser was too optimistic when processing comments and didn\'t check for the end of the stream on the first 2 characters','HTMLparser.c','4740','1386','14','7','true','false','false','2015-10-30 21:14:55+08:00'),('libxml2','2.9.2','f0709e3ca8f8947f2d91ed34e92e38a4c23eae63','Daniel Veillard','cve-2015-8035 fix xz compression support loop  for https://bugzilla.gnome.org/show_bug.cgi?id=757466 dos when parsing specially crafted xml document if xz support is compiled in (which wasn\'t the case for 2.9.2 and master since nov 2013, fixed in next commit !)','xzlib.c','578','149','4','0','true','false','false','2015-11-03 15:31:25+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','configure.ac','1566','0','3','0','false','true','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xmlIO.c','2166','717','6','6','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xmlIO.c','2166','717','6','6','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xmlIO.c','2166','717','6','6','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xzlib.c','578','149','4','2','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xzlib.c','578','149','4','2','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xzlib.c','578','149','4','2','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','18b8988511b0954272cac4d6c3e6724f9dbf6e0a','Daniel Veillard','reenable xz support by default  for https://bugzilla.gnome.org/show_bug.cgi?id=757466  problem was introduced by commit f3f86ff465c92c79f834d7b981f3c7274a8bb5c8 for https://bugzilla.gnome.org/show_bug.cgi?id=711026','xzlib.c','578','149','4','2','false','false','false','2015-11-03 15:46:29+08:00'),('libxml2','2.9.2','ab2b9a93ff19cedde7befbf2fcc48c6e352b6cbe','Hugh Davenport','avoid extra processing of markupdecl when eof  for https://bugzilla.gnome.org/show_bug.cgi?id=756263  one place where ctxt->instate == xml_parser_eof whic was set up by entity detection issues doesn\'t get noticed, and even overrided','parser.c','10338','3516','8','0','false','false','false','2015-11-03 20:40:49+08:00'),('libxml2','2.9.2','afd27c21f6b36e22682b7da20d726bce2dcb2f43','Daniel Veillard','avoid processing entities after encoding conversion failures  for https://bugzilla.gnome.org/show_bug.cgi?id=756527 and was also raised by chromium team in the past  when we hit a convwersion failure when switching encoding it is bestter to stop parsing there, this was treated as a fatal error but the parser was continuing to process to extract more errors, unfortunately that makes little sense as the data is obviously corrupt and can potentially lead to unexpected behaviour.','parser.c','10341','3518','5','2','true','false','false','2015-11-09 18:07:18+08:00'),('libxml2','2.9.2','afd27c21f6b36e22682b7da20d726bce2dcb2f43','Daniel Veillard','avoid processing entities after encoding conversion failures  for https://bugzilla.gnome.org/show_bug.cgi?id=756527 and was also raised by chromium team in the past  when we hit a convwersion failure when switching encoding it is bestter to stop parsing there, this was treated as a fatal error but the parser was continuing to process to extract more errors, unfortunately that makes little sense as the data is obviously corrupt and can potentially lead to unexpected behaviour.','parserInternals.c','1308','389','10','1','true','false','false','2015-11-09 18:07:18+08:00'),('libxml2','2.9.2','53ac9c9649fa091377dfea9511f012171f08972d','Daniel Veillard','xmlstopparser reset errno  i had used it in contexts where that information ought to be preserved','parser.c','10344','3518','3','0','false','true','false','2015-11-09 18:16:00+08:00'),('libxml2','2.9.2','6360a31a84efe69d155ed96306b9a931a40beab9','David Drysdale','cve-2015-7497 avoid an heap buffer overflow in xmldictcomputefastqkey  for https://bugzilla.gnome.org/show_bug.cgi?id=756528 it was possible to hit a negative offset in the name indexing used to randomize the dictionary key generation reported and fix provided by david drysdale @ google','dict.c','759','271','4','1','true','false','false','2015-11-20 10:47:12+08:00'),('libxml2','2.9.2','69030714cde66d525a8884bda01b9e8f0abf8e1e','David Drysdale','cve-2015-5312 another entity expansion issue  for https://bugzilla.gnome.org/show_bug.cgi?id=756733 it is one case where the code in place to detect entities expansions failed to exit when the situation was detected, leading to dos problem reported by kostya serebryany @ google patch provided by david drysdale @ google','parser.c','10347','3520','4','0','false','false','false','2015-11-20 11:18:22+08:00'),('libxml2','2.9.2','28cd9cb747a94483f4aea7f0968d202c20bb4cfc','Daniel Veillard','add xmlhaltparser() to stop the parser  the problem is doing it in a consistent and safe fashion it\'s more complex than just setting ctxt->instate = xml_parser_eof update the public function to reuse that new internal routine','parser.c','10358','3523','29','5','false','false','false','2015-11-20 14:55:30+08:00'),('libxml2','2.9.2','e3b1597421ad7cbeb5939fc3b54f43f141c82366','Daniel Veillard','reuse xmlhaltparser() where it makes sense  unify the various place where either xmlstopparser was called (which resets the error as a side effect) and places where we used ctxt->instate = xml_parser_eof to stop further processing','parser.c','10355','3523','17','20','true','false','false','2015-11-20 14:59:30+08:00'),('libxml2','2.9.2','ce0b0d0d81fdbb5f722a890432b52d363e4de57b','Daniel Veillard','do not print error context when there is none  which now happens more frequently du to xmlhaltparser use','error.c','647','230','3','1','true','false','false','2015-11-20 15:01:22+08:00'),('libxml2','2.9.2','35bcb1d758ed70aa7b257c9c3b3ff55e54e3d0da','Daniel Veillard','detect incoherency on grow  the current pointer to the input has to be between the base and end if not stop everything we have an internal state error.','parser.c','10362','3525','8','1','true','false','false','2015-11-20 15:04:09+08:00'),('libxml2','2.9.2','3bd6ae147e294da6b378379cc87615b8fc111e73','Daniel Veillard','fix some loop issues embedding next  next can switch the parser back to xml_parser_eof state, we need to consider those in loops consuming input','parser.c','10364','3527','4','2','true','false','false','2015-11-20 15:06:02+08:00'),('libxml2','2.9.2','fdfeecc1b73b0318466f0d61f0b8881ed9d92dd2','Daniel Veillard','bug on creating new stream from entity  sometimes the entity could have a lenght of 0, i.e. it wasn\'t parsed or used yet, and we ended up with an incoherent input state','parserInternals.c','1310','390','2','0','true','false','false','2015-11-20 15:07:38+08:00'),('libxml2','2.9.2','f1063fdbe7fa66332bbb76874101c2a7b51b519f','Daniel Veillard','cve-2015-7500 fix memory access error due to incorrect entities boundaries  for https://bugzilla.gnome.org/show_bug.cgi?id=756525 handle properly the case where we popped out of the current entity while processing a start tag reported by kostya serebryany @ google  this slightly modifies the output of 754946 in regression tests','parser.c','10374','3533','22','6','true','false','false','2015-11-20 16:06:59+08:00'),('libxml2','2.9.2','f1063fdbe7fa66332bbb76874101c2a7b51b519f','Daniel Veillard','cve-2015-7500 fix memory access error due to incorrect entities boundaries  for https://bugzilla.gnome.org/show_bug.cgi?id=756525 handle properly the case where we popped out of the current entity while processing a start tag reported by kostya serebryany @ google  this slightly modifies the output of 754946 in regression tests','754946.xml.err','18','0','5','2','true','false','false','2015-11-20 16:06:59+08:00'),('libxml2','2.9.2','8fb4a770075628d6441fb17a1e435100e2f3b1a2','Hugh Davenport','cve-2015-8242 buffer overead with html parser in push mode  for https://bugzilla.gnome.org/show_bug.cgi?id=756372 error in the code pointing to the codepoint in the stack for the current char value instead of the pointer in the input that the sax callback expects reported and fixed by hugh davenport','HTMLparser.c','4740','1386','3','3','true','false','false','2015-11-20 17:16:06+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','configure.ac','1566','0','1','1','false','true','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','APIfiles.html','3591','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','APIsymbols.html','3587','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-tree.html','1590','0','2','1','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2.devhelp','3574','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml-tree.html','991','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-api.xml','18510','1','5','3','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-refs.xml','32175','0','3','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2.xsa','185','0','170','83','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','news.html','2421','0','72','1','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','xml.html','5832','0','73','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','setup.py','181','3','1','1','false','true','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.2','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','testapi.c','41872','6435','4','4','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','configure.ac','1566','0','1','1','false','true','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','APIfiles.html','3591','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','APIsymbols.html','3587','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-tree.html','1590','0','2','1','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2.devhelp','3574','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml-tree.html','991','0','1','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-api.xml','18510','1','5','3','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2-refs.xml','32175','0','3','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','libxml2.xsa','185','0','170','83','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','news.html','2421','0','72','1','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','xml.html','5832','0','73','0','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','setup.py','181','3','1','1','false','true','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','6657afe83a38278f124ace71dc85f60420beb2d5','Daniel Veillard','release of libxml2-2.9.3  * configure.ac: updated * doc/*: regenerated','testapi.c','41872','6435','4','4','false','false','false','2015-11-20 17:55:11+08:00'),('libxml2','2.9.3','a7a94612aa3b16779e2c74e1fa353b5d9786c602','Daniel Veillard','heap-based buffer overread in xmlnextchar  for https://bugzilla.gnome.org/show_bug.cgi?id=759671  when the end of the internal subset isn\'t properly detected xmlparseinternalsubset should just return instead of trying to process input further.','parser.c','10375','3533','1','0','false','false','false','2016-02-09 12:55:29+01:00'),('libxml2','2.9.3','a7a94612aa3b16779e2c74e1fa353b5d9786c602','Daniel Veillard','heap-based buffer overread in xmlnextchar  for https://bugzilla.gnome.org/show_bug.cgi?id=759671  when the end of the internal subset isn\'t properly detected xmlparseinternalsubset should just return instead of trying to process input further.','754946.xml.err','18','0','5','5','false','false','false','2016-02-09 12:55:29+01:00'),('libxml2','2.9.3','a7a94612aa3b16779e2c74e1fa353b5d9786c602','Daniel Veillard','heap-based buffer overread in xmlnextchar  for https://bugzilla.gnome.org/show_bug.cgi?id=759671  when the end of the internal subset isn\'t properly detected xmlparseinternalsubset should just return instead of trying to process input further.','content1.xml.err','15','0','1','1','false','false','false','2016-02-09 12:55:29+01:00'),('libxml2','2.9.3','a7a94612aa3b16779e2c74e1fa353b5d9786c602','Daniel Veillard','heap-based buffer overread in xmlnextchar  for https://bugzilla.gnome.org/show_bug.cgi?id=759671  when the end of the internal subset isn\'t properly detected xmlparseinternalsubset should just return instead of trying to process input further.','t8.xml.err','18','0','1','1','false','false','false','2016-02-09 12:55:29+01:00'),('libxml2','2.9.3','a7a94612aa3b16779e2c74e1fa353b5d9786c602','Daniel Veillard','heap-based buffer overread in xmlnextchar  for https://bugzilla.gnome.org/show_bug.cgi?id=759671  when the end of the internal subset isn\'t properly detected xmlparseinternalsubset should just return instead of trying to process input further.','t8a.xml.err','18','0','1','1','false','false','false','2016-02-09 12:55:29+01:00'),('libxml2','2.9.3','b5ca26077195148ecfe83b1e4923e7bd7ce2308d','orzen','add configure maintainer mode  for https://bugzilla.gnome.org/show_bug.cgi?id=761784  i wasn\'t able to build libxml2 because aclocal-1.13 was missing from my machine. with am_maintainer_mode, i\'m able to configure libxml2 with \'--disable-maintainer-mode\' which will disable checks for aclocal.','configure.ac','1567','0','1','0','false','false','false','2016-02-09 17:23:48+01:00'),('libxml2','2.9.3','0f84ee239f2fb076231386f1d1ce8dec541df28e','orzen','add autogen.sh to distrib  for https://bugzilla.gnome.org/show_bug.cgi?id=761782  autogen.sh was not included in the tarball releases which complicates situations when users have to make changes to e.g. configure.ac andi have to re-generate configure.','Makefile.am','1164','0','1','1','false','false','false','2016-02-09 17:55:40+01:00'),('libxml2','2.9.3','dfbacd4f417cb0f4b9bef3ff205bf95cb73c5717','Bruce Dawson','win32\\vc10\\config.h and vs 2015  --047d7bacb4ee71848a052d7c673a content-type: text/plain; charset=utf-8  the config.h file in win32\\vc10 is incompatible with vs 2015 because vs 2015 provides an implementation of snprintf and prohibits using the preprocessor to define it. therefor an ifdef check is needed around that definition in vc10\\config.h. here is a patch that is compatible with the change that we made to chromium\'s copy:','config.h','38','8','2','0','false','false','false','2016-03-11 16:02:03+08:00'),('libxml2','2.9.3','65112cb36aa56bb27697c38ff52c1489cc21cba5','Michael Stahl','python 3: libxml2.c wrappers create unicode str already  ... so stop decoding these, which only results in \"typeerror: \'str\' does not support the buffer interface\".','drv_libxml2.py','304','81','10','8','false','false','false','2016-03-11 16:18:13+08:00'),('libxml2','2.9.3','783931fc5928cfcfaeb2e3199203e3c3fe7d75ec','David Kilzer','bug 721158: missing icu string when doing --version on xmllint <https://bugzilla.gnome.org/show_bug.cgi?id=721158>  * xmllint.c: (showversion): add \"icu\" to xmllint version string if libxml2 is built with icu enabled.','xmllint.c','2751','867','1','0','true','false','false','2016-04-08 10:16:54+08:00'),('libxml2','2.9.3','e6b97476a0bcc023f6fc05bddcbc140001f9832f','David Kilzer','bug 758572: asan crash in make check <https://bugzilla.gnome.org/show_bug.cgi?id=758572>  instead of sending a random string length into api methods, compute the string length properly to fix out-of-bounds accesses caught with addresssanitizer turned on.  * testapi.c: (test_htmlcreatememoryparserctxt): (test_htmlcreatepushparserctxt): (test_htmlctxtreadmemory): (test_htmlparsechunk): (test_htmlreadmemory): (test_xmldictexists): (test_xmldictlookup): (test_xmlcreatepushparserctxt): (test_xmlctxtreadmemory): (test_xmlctxtresetpush): (test_xmlparsechunk): (test_xmlparseinnodecontext): (test_xmlparsememory): (test_xmlreadmemory): (test_xmlrecovermemory): (test_xmlsaxparsememory): (test_xmlsaxparsememorywithdata): (test_xmlsaxuserparsememory): (test_xmlcreatememoryparserctxt): (test_xmlrelaxngnewmemparserctxt): (test_xmlbufferadd): (test_xmlbufferaddhead): (test_xmlbuildqname): (test_xmldocdumpformatmemory): (test_xmldocdumpformatmemoryenc): (test_xmldocdumpmemory): (test_xmlnewcdatablock): (test_xmlnewdoctextlen): (test_xmlnewtextlen): (test_xmlnodeaddcontentlen): (test_xmlnodesetcontentlen): (test_xmlsplitqname3): (test_xmlstringlengetnodelist): (test_xmltextconcat): (test_xmloutputbufferwrite): (test_xmlparserinputbuffercreatemem): (test_xmlparserinputbuffercreatestatic): (test_xmlparserinputbufferpush): (test_xmlreaderformemory): (test_xmlreadernewmemory): (test_xmlschemanewmemparserctxt): (test_xmlcharstrndup): (test_xmlstrncatnew): (test_xmlstrncmp): (test_xmlstrndup): (test_xmlstrsub): (test_xmltextwriterwritebase64): (test_xmltextwriterwritebinhex): (test_xmltextwriterwriterawlen):','testapi.c','41875','6486','52','49','true','true','false','2016-04-08 10:18:06+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','parser.c','10375','3536','8','7','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-2-byte-UTF-8.xml','6','0','6','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-2-byte-UTF-8.xml.rde','12','0','15','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-2-byte-UTF-8.xml.rdr','12','0','15','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-2-byte-UTF-8.xml.sax','18','0','18','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-2-byte-UTF-8.xml.sax2','18','0','18','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-3-byte-UTF-8.xml','7','0','7','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-3-byte-UTF-8.xml.rde','16','0','20','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-3-byte-UTF-8.xml.rdr','16','0','20','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-3-byte-UTF-8.xml.sax','23','0','23','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-3-byte-UTF-8.xml.sax2','23','0','23','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-4-byte-UTF-8.xml','8','0','8','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-4-byte-UTF-8.xml.rde','20','0','25','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-4-byte-UTF-8.xml.rdr','20','0','25','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-4-byte-UTF-8.xml.sax','28','0','28','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','4f8606c13cb7f2684839f850b83de5ce647d3ca7','David Kilzer','bug 760183: regression (v2.9.3): xml push parser fails with bogus utf-8 encoding error when multi-byte character in large cdata section is split across buffer <https://bugzilla.gnome.org/show_bug.cgi?id=760183>  * parser.c: (xmlcheckcdatapush): add \'complete\' argument to describe whether the buffer passed in is the whole cdata buffer, or if there is more data to parse.  if there is more data to parse, don\'t return a negative value for an invalid multi-byte utf-8 character that is split between buffers. (xmlparsetryorfinish): pass \'complete\' argument to xmlcheckcdatapush() as appropriate.  * result/cdata-2-byte-utf-8.xml: added. * result/cdata-2-byte-utf-8.xml.rde: added. * result/cdata-2-byte-utf-8.xml.rdr: added. * result/cdata-2-byte-utf-8.xml.sax: added. * result/cdata-2-byte-utf-8.xml.sax2: added. * result/cdata-3-byte-utf-8.xml: added. * result/cdata-3-byte-utf-8.xml.rde: added. * result/cdata-3-byte-utf-8.xml.rdr: added. * result/cdata-3-byte-utf-8.xml.sax: added. * result/cdata-3-byte-utf-8.xml.sax2: added. * result/cdata-4-byte-utf-8.xml: added. * result/cdata-4-byte-utf-8.xml.rde: added. * result/cdata-4-byte-utf-8.xml.rdr: added. * result/cdata-4-byte-utf-8.xml.sax: added. * result/cdata-4-byte-utf-8.xml.sax2: added. * result/noent/cdata-2-byte-utf-8.xml: added. * result/noent/cdata-3-byte-utf-8.xml: added. * result/noent/cdata-4-byte-utf-8.xml: added. * test/cdata-2-byte-utf-8.xml: added. * test/cdata-3-byte-utf-8.xml: added. * test/cdata-4-byte-utf-8.xml: added. - add tests and results.  only \'make readertests xmlpushtests\'   fails prior to the fix.','cdata-4-byte-UTF-8.xml.sax2','28','0','28','0','true','false','false','2016-04-08 10:18:52+08:00'),('libxml2','2.9.3','6e3af87055d2c868d20d8b2b9da59bbafe84e5e0','David Kilzer','bug 760190: configure.ac should be able to build --with-icu without icu-config tool <https://bugzilla.gnome.org/show_bug.cgi?id=760190>  * configure.ac: add fallback tests if the icu-config tool is not installed (like on mac os x).  this also allows an include prefix to be set using \"--with-icu=/prefix/to/icu\", similar to --with-iconv.','configure.ac','1592','0','33','4','true','false','false','2016-04-08 10:19:18+08:00'),('libxml2','2.9.3','49bbfdb6c9f6ee8d504045acd5f10502ef39c1e6','David Kilzer','add missing rng test files  for https://bugzilla.gnome.org/show_bug.cgi?id=760249  add missing test results from bug 710744 for commit 6473a41a49601da8355c4b407b99474ada170213.','710744_err','1','0','1','0','true','false','false','2016-04-08 10:20:22+08:00'),('libxml2','2.9.3','49bbfdb6c9f6ee8d504045acd5f10502ef39c1e6','David Kilzer','add missing rng test files  for https://bugzilla.gnome.org/show_bug.cgi?id=760249  add missing test results from bug 710744 for commit 6473a41a49601da8355c4b407b99474ada170213.','710744_valid','None','None','0','0','true','false','false','2016-04-08 10:20:22+08:00'),('libxml2','2.9.3','c4184ba217009798504ca25f011ed7899ac1f65f','Pavel Raiskup','error.c: *input->cur == 0 does not mean no error  complements: ce0b0d0d81fdbb5','error.c','647','229','2','2','true','false','false','2016-04-08 10:32:29+08:00'),('libxml2','2.9.3','5be1a6e8e0ac0caebc308a82edcd104215ab4601','David Kilzer','bug 760861: regression (bf9c1dad): missing results for test/schemas/regexp-char-ref_[01].xsd <https://bugzilla.gnome.org/show_bug.cgi?id=760861>  add missing test results to fix the following errors when running \"make schemastests\":      ## schemas regression tests     diff: ./result/schemas/regexp-char-ref_0_0.err: no such file or directory     diff: ./result/schemas/regexp-char-ref_1_0.err: no such file or directory  * result/schemas/regexp-char-ref_0_0.err: added. * result/schemas/regexp-char-ref_1_0.err: added.','regexp-char-ref_0_0.err','None','None','0','0','true','false','false','2016-04-08 10:33:09+08:00'),('libxml2','2.9.3','5be1a6e8e0ac0caebc308a82edcd104215ab4601','David Kilzer','bug 760861: regression (bf9c1dad): missing results for test/schemas/regexp-char-ref_[01].xsd <https://bugzilla.gnome.org/show_bug.cgi?id=760861>  add missing test results to fix the following errors when running \"make schemastests\":      ## schemas regression tests     diff: ./result/schemas/regexp-char-ref_0_0.err: no such file or directory     diff: ./result/schemas/regexp-char-ref_1_0.err: no such file or directory  * result/schemas/regexp-char-ref_0_0.err: added. * result/schemas/regexp-char-ref_1_0.err: added.','regexp-char-ref_1_0.err','None','None','0','0','true','false','false','2016-04-08 10:33:09+08:00'),('libxml2','2.9.3','c5ddd095379826c6bda218b3e8ade6ff1a886674','David Kilzer','bug 760921: regression (8eb55d78): doc/examples/io1 test fails after fix for \"xmlsaveuri() incorrectly recomposes uris with rootless paths\" <https://bugzilla.gnome.org/show_bug.cgi?id=760921>  * doc/examples/io1.res: update expected result.','io1.res','5','0','1','1','true','false','false','2016-04-08 10:33:30+08:00'),('libxml2','2.9.3','d5bd2a9a4064e1d0da6367bb0ee4de7d337964bf','Shlomi Fish','correct a typo.','xpath.c','9859','3143','1','1','false','false','false','2016-04-11 09:42:23+08:00'),('libxml2','2.9.3','9811ce7864a5362492ed0e14a8a6df776d5b8413','Jan Pokorný','fix typos: path_{ seaparator -> separator }  signed-off-by: jan pokorný <jpokorny@redhat.com>','catalog.c','2522','776','4','4','true','false','false','2016-04-15 22:22:43+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','ChangeLog','794','0','12','12','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','HTMLparser.c','4740','1386','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','NEWS','2575','0','11','11','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','debugXML.c','2575','785','5','5','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','dict.c','759','271','25','25','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','index.py','1034','290','3','3','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','dict.h','40','0','3','3','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','parser.h','660','0','2','2','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','hash_dict.txt','9','0','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','parser.c','10375','3536','3','3','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','libxml.c','2962','592','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','rngparser.c','1179','325','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','schematron.c','1212','283','2','2','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','testapi.c','41875','6486','7','7','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','tree.c','6372','2430','7','7','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','valid.c','4752','1551','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlreader.c','3864','1286','4','4','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlregexp.c','5830','1970','2','2','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlschemas.c','18732','4681','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','bb654feb9a64db7fd8b5fefdbb79792883dc7795','Jan Pokorný','fix typos: dictio{ nn -> n }ar{y,ies}  signed-off-by: jan pokorný <jpokorny@redhat.com>','xpath.c','9859','3143','1','1','true','false','false','2016-04-15 22:22:48+08:00'),('libxml2','2.9.3','27aae65156949bd64d955227929d56e49bda4e71','Jan Pokorný','fix typo: s{ ec -> cr }cipt  signed-off-by: jan pokorný <jpokorny@redhat.com>','docdescr.doc','76','0','1','1','true','false','false','2016-04-15 22:22:52+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','schemasInternals.h','308','0','46','46','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','pattern3_1','None','None','0','0','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','pattern3_1.err','1','0','1','0','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','pattern3.rng','11','0','11','0','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','pattern3_1.xml','1','0','1','0','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','cad102b861f74d56e3f6e710c466cf1a38a5db56','Audric Schiltknecht','do normalize string-based datatype value in relaxng facet checking  original patch is from jan pokorný <jpokorny redhat com> https://mail.gnome.org/archives/xml/2013-november/msg00028.html  improve it according to reviews and add test files.','xmlschemastypes.c','4326','1593','9','1','false','false','false','2016-04-15 22:41:24+08:00'),('libxml2','2.9.3','96a5c17ee154add361abbae27b29c86e398fc1b9','Nick Wellnhofer','fix oob read with invalid utf-8 in xmlutf8strsize  with certain invalid utf-8, xmlutf8strsize can read up to 6 bytes beyond the end of the string and return the wrong size.  this means that in xmlutf8strndup and similar code, some content behind the string is copied. but since the terminating \\0 is copied as well, this probably can\'t be exploited to leak sensitive information.  found by afl-fuzz and asan.','xmlstring.c','524','198','1','1','true','false','false','2016-04-23 18:44:27+02:00'),('libxml2','2.9.3','e28939036281969477d3913a51c001bb7635fe54','Nick Wellnhofer','fix parsing of ncnames in xpath  the ncname parser would allow any namechar as start character. for example, the following xpath expressions would compile:      self::-abc     self::0abc     self::.abc','base','18','0','4','0','true','false','false','2016-04-23 19:12:47+02:00'),('libxml2','2.9.3','e28939036281969477d3913a51c001bb7635fe54','Nick Wellnhofer','fix parsing of ncnames in xpath  the ncname parser would allow any namechar as start character. for example, the following xpath expressions would compile:      self::-abc     self::0abc     self::.abc','base','6','0','1','0','true','false','false','2016-04-23 19:12:47+02:00'),('libxml2','2.9.3','e28939036281969477d3913a51c001bb7635fe54','Nick Wellnhofer','fix parsing of ncnames in xpath  the ncname parser would allow any namechar as start character. for example, the following xpath expressions would compile:      self::-abc     self::0abc     self::.abc','xpath.c','9859','3143','1','1','true','false','false','2016-04-23 19:12:47+02:00'),('libxml2','2.9.3','91ac664f4b3d3ed55f5ff297f1ddbc7acb425006','Nick Wellnhofer','fix oob write in xmlxpathemptynodeset  xmlxpathemptynodeset would write a null pointer just beyond the end of the nodetab array. this macro isn\'t used in libxml2, but in some of the math functions in libexslt where it can result in heap corruption and denial of service.  found by afl-fuzz and asan.','xpathInternals.h','254','0','1','1','true','false','false','2016-04-26 16:38:08+02:00'),('libxml2','2.9.3','f39fd66ea768802665e0a010f4be408ef9c69bcf','Nick Wellnhofer','fix namespace::node() xpath expression  make sure that xmlxpathnodesetaddns is called for namespace nodes when matched with a namespace::node() step. this correctly sets the parent of namespace nodes. note that xmlxpathnodesetaddns must only be called if working on the namespace axis. otherwise, the context node is not the parent of the namespace node and the standard xp_test_hit macro must be invoked. this explains the errors in the c14n tests that the old todo comment mentioned.','nssimple','6','0','7','0','true','true','false','2016-04-27 11:21:35+02:00'),('libxml2','2.9.3','f39fd66ea768802665e0a010f4be408ef9c69bcf','Nick Wellnhofer','fix namespace::node() xpath expression  make sure that xmlxpathnodesetaddns is called for namespace nodes when matched with a namespace::node() step. this correctly sets the parent of namespace nodes. note that xmlxpathnodesetaddns must only be called if working on the namespace axis. otherwise, the context node is not the parent of the namespace node and the standard xp_test_hit macro must be invoked. this explains the errors in the c14n tests that the old todo comment mentioned.','ns','3','0','3','0','true','true','false','2016-04-27 11:21:35+02:00'),('libxml2','2.9.3','f39fd66ea768802665e0a010f4be408ef9c69bcf','Nick Wellnhofer','fix namespace::node() xpath expression  make sure that xmlxpathnodesetaddns is called for namespace nodes when matched with a namespace::node() step. this correctly sets the parent of namespace nodes. note that xmlxpathnodesetaddns must only be called if working on the namespace axis. otherwise, the context node is not the parent of the namespace node and the standard xp_test_hit macro must be invoked. this explains the errors in the c14n tests that the old todo comment mentioned.','nssimple','1','0','1','0','true','true','false','2016-04-27 11:21:35+02:00'),('libxml2','2.9.3','f39fd66ea768802665e0a010f4be408ef9c69bcf','Nick Wellnhofer','fix namespace::node() xpath expression  make sure that xmlxpathnodesetaddns is called for namespace nodes when matched with a namespace::node() step. this correctly sets the parent of namespace nodes. note that xmlxpathnodesetaddns must only be called if working on the namespace axis. otherwise, the context node is not the parent of the namespace node and the standard xp_test_hit macro must be invoked. this explains the errors in the c14n tests that the old todo comment mentioned.','xpath.c','9866','3144','8','6','true','false','false','2016-04-27 11:21:35+02:00'),('libxml2','2.9.3','839689a9a85d81f722997d00ec17a36b17ce6731','Nick Wellnhofer','don\'t recurse into op_values in xmlxpathoptimizeexpression  the ch1 slot of op_values contains an invalid value. ignore it.  fixes bug #760325:  https://bugzilla.gnome.org/show_bug.cgi?id=760325','base','21','0','4','0','true','false','false','2016-04-27 18:05:06+02:00'),('libxml2','2.9.3','839689a9a85d81f722997d00ec17a36b17ce6731','Nick Wellnhofer','don\'t recurse into op_values in xmlxpathoptimizeexpression  the ch1 slot of op_values contains an invalid value. ignore it.  fixes bug #760325:  https://bugzilla.gnome.org/show_bug.cgi?id=760325','base','7','0','1','0','true','false','false','2016-04-27 18:05:06+02:00'),('libxml2','2.9.3','839689a9a85d81f722997d00ec17a36b17ce6731','Nick Wellnhofer','don\'t recurse into op_values in xmlxpathoptimizeexpression  the ch1 slot of op_values contains an invalid value. ignore it.  fixes bug #760325:  https://bugzilla.gnome.org/show_bug.cgi?id=760325','xpath.c','9868','3145','4','0','true','false','false','2016-04-27 18:05:06+02:00'),('libxml2','2.9.3','2e354d7432dd4fd946328c242ff5289d9bfb3ce9','Baruch Siach','add xz to xml2-config --libs output  xml_libs should include lzma_libs. this ensures that \'xml2-config --libs\' shows -llzma when xz is enabled. otherwise static link fails because of missing xz symbols.','configure.ac','1592','0','1','1','false','false','false','2016-04-28 15:13:56+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','HTMLparser.rpgle','342','0','7','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','c14n.rpgle','106','0','3','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','catalog.rpgle','185','0','8','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','encoding.rpgle','272','0','3','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','entities.rpgle','152','0','3','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','parser.rpgle','1264','0','8','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','pattern.rpgle','94','0','6','3','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','relaxng.rpgle','255','0','8','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','schemasInternals.rpgle','986','0','8','3','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','schematron.rpgle','162','0','3','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','tree.rpgle','1467','0','16','8','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xlink.rpgle','139','0','9','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlerror.rpgle','1651','0','9','5','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlmodule.rpgle','41','0','4','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlreader.rpgle','512','0','8','4','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlregexp.rpgle','192','0','4','1','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlsave.rpgle','83','0','5','3','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlschemas.rpgle','271','0','5','2','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xmlschemastypes.rpgle','198','0','3','2','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','91e2e698fd137f821b20dad9300f149816644c30','Patrick Monnerat','os400: use like() for enum types.','xpath.rpgle','549','0','5','3','false','false','false','2016-05-01 18:17:12+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','HTMLparser.rpgle','342','0','2','2','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','chvalid.rpgle','72','0','11','11','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','parser.rpgle','1264','0','2','2','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','parserInternals.rpgle','568','0','2','1','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','tree.rpgle','1467','0','4','4','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','valid.rpgle','470','0','1','1','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','26202cf90f561e1cdd5e2269eb7f31d7e663aaf2','Patrick Monnerat','os400: use like() for unsigned int type.','xmlstdarg.rpgle','26','0','3','2','false','false','false','2016-05-01 18:18:11+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','DOCBparser.rpgle','95','0','11','7','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','HTMLparser.rpgle','354','0','51','39','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','HTMLtree.rpgle','142','0','27','17','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','SAX.rpgle','171','0','20','14','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','SAX2.rpgle','214','0','28','20','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','c14n.rpgle','110','0','17','13','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','catalog.rpgle','194','0','20','11','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','chvalid.rpgle','81','0','20','11','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','debugXML.rpgle','208','0','34','21','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','dict.rpgle','63','0','10','6','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','encoding.rpgle','280','0','21','13','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','entities.rpgle','152','0','6','6','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','globals.rpgle','480','0','84','60','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','hash.rpgle','199','0','24','12','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','list.rpgle','137','0','21','10','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','nanoftp.rpgle','135','0','34','18','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','nanohttp.rpgle','88','0','15','8','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','parser.rpgle','1286','0','136','114','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','parserInternals.rpgle','590','0','58','36','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','pattern.rpgle','104','0','22','12','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','relaxng.rpgle','264','0','21','12','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','schemasInternals.rpgle','986','0','21','21','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','schematron.rpgle','169','0','17','10','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','threads.rpgle','49','0','5','2','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','tree.rpgle','1506','0','129','90','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','uri.rpgle','82','0','9','6','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','valid.rpgle','500','0','71','41','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xinclude.rpgle','117','0','22','13','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlIO.rpgle','380','0','59','38','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlautomata.rpgle','154','0','21','17','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlerror.rpgle','1652','0','7','6','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlmemory.rpgle','189','0','19','12','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlmodule.rpgle','44','0','7','4','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlreader.rpgle','555','0','108','65','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlregexp.rpgle','205','0','39','26','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlsave.rpgle','87','0','13','9','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlschemas.rpgle','281','0','23','13','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlschemastypes.rpgle','214','0','33','17','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlstring.rpgle','176','0','48','32','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlunicode.rpgle','665','0','500','332','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlversion.rpgle.in','264','0','2','1','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xmlwriter.rpgle','743','0','168','92','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xpath.rpgle','562','0','74','61','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xpathInternals.rpgle','554','0','72','53','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','155faa522153f90eb1a457b56a72eb4e78576a7c','Patrick Monnerat','os400: use like() for int type.','xpointer.rpgle','127','0','7','6','false','false','false','2016-05-01 18:18:38+08:00'),('libxml2','2.9.3','ae0b22409006acc643f989c019fcd426227b5b4c','Patrick Monnerat','os400: use like() for double type.','globals.rpgle','480','0','5','5','false','false','false','2016-05-01 18:19:06+08:00'),('libxml2','2.9.3','ae0b22409006acc643f989c019fcd426227b5b4c','Patrick Monnerat','os400: use like() for double type.','xmlTypesC.rpgle','23','0','2','0','false','false','false','2016-05-01 18:19:06+08:00'),('libxml2','2.9.3','ae0b22409006acc643f989c019fcd426227b5b4c','Patrick Monnerat','os400: use like() for double type.','xpath.rpgle','569','0','22','13','false','false','false','2016-05-01 18:19:06+08:00'),('libxml2','2.9.3','ae0b22409006acc643f989c019fcd426227b5b4c','Patrick Monnerat','os400: use like() for double type.','xpathInternals.rpgle','556','0','5','3','false','false','false','2016-05-01 18:19:06+08:00'),('libxml2','2.9.3','44e49f47e8eeb3d2f4e1a18038322c6d913b5958','Patrick Monnerat','os400: c14n.rpgle: allow *omit for nullable reference parameters.','c14n.rpgle','110','0','4','4','false','false','false','2016-05-01 18:19:36+08:00'),('libxml2','2.9.3','11e805d39701513f7fdb3b692beb7c493a498a97','Patrick Monnerat','xmllint: flush stdout before interactive shell input.','xmllint.c','2752','867','1','0','false','false','false','2016-05-01 18:31:57+08:00'),('libxml2','2.9.3','1463a91df53b46accd0cc6a544132bc0f3bea9dc','Patrick Monnerat','os400: initscript make_module(): use options instead of positional parameters.','initscript.sh','234','16','30','5','false','false','false','2016-05-01 18:32:20+08:00'),('libxml2','2.9.3','1463a91df53b46accd0cc6a544132bc0f3bea9dc','Patrick Monnerat','os400: initscript make_module(): use options instead of positional parameters.','make-src.sh','195','2','5','5','false','false','false','2016-05-01 18:32:20+08:00'),('libxml2','2.9.3','b1682bdb93f473bc82c5e8cde4fcfb01dc8165bf','Patrick Monnerat','os400: compile and install program xmllint (qshell-only).','libxmlmain.c','62','5','102','0','false','false','false','2016-05-01 18:33:01+08:00'),('libxml2','2.9.3','b1682bdb93f473bc82c5e8cde4fcfb01dc8165bf','Patrick Monnerat','os400: compile and install program xmllint (qshell-only).','make-src.sh','227','2','32','0','false','false','false','2016-05-01 18:33:01+08:00'),('libxml2','2.9.3','26db5e7a555ec2c8084764bf84f7965bc1a267f9','Patrick Monnerat','os400: implement cl command xmllint.','make-src.sh','254','2','27','0','false','false','false','2016-05-01 18:33:26+08:00'),('libxml2','2.9.3','26db5e7a555ec2c8084764bf84f7965bc1a267f9','Patrick Monnerat','os400: implement cl command xmllint.','xmllint.cmd','110','0','146','0','false','false','false','2016-05-01 18:33:26+08:00'),('libxml2','2.9.3','26db5e7a555ec2c8084764bf84f7965bc1a267f9','Patrick Monnerat','os400: implement cl command xmllint.','xmllintcl.c','138','37','216','0','false','false','false','2016-05-01 18:33:26+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','dlfcn.c','726','215','1','1','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','rpgsupport.c','147','22','7','7','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','rpgsupport.h','101','0','7','7','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.3','cad1634ef40badd0a4b696af03016a9600af9c13','Patrick Monnerat','os400: expand tabs in sources, strip trailing blanks.','rpgsupport.h','101','0','7','7','false','false','false','2016-05-01 18:33:49+08:00'),('libxml2','2.9.3','2137326eda6fbbd41a3eb94903cbe8d49f125335','Patrick Monnerat','xmlcatalog: flush stdout before interactive shell input.','xmlcatalog.c','510','164','1','0','false','false','false','2016-05-01 18:34:13+08:00'),('libxml2','2.9.3','d76abc7bcdb056c6790b24a7f53a6265f2069600','Patrick Monnerat','os400: compile and install program xmlcatalog (qshell-only).','make-src.sh','281','2','27','0','false','false','false','2016-05-01 18:34:41+08:00'),('libxml2','2.9.3','9b5a57cf37f5a79c3459ef978fa9f51fa29cd1d6','Patrick Monnerat','os400: implement cl command xmlcatalog.','make-src.sh','309','2','31','3','false','false','false','2016-05-01 18:35:11+08:00'),('libxml2','2.9.3','9b5a57cf37f5a79c3459ef978fa9f51fa29cd1d6','Patrick Monnerat','os400: implement cl command xmlcatalog.','xmlcatalog.cmd','56','0','93','0','false','false','false','2016-05-01 18:35:11+08:00'),('libxml2','2.9.3','9b5a57cf37f5a79c3459ef978fa9f51fa29cd1d6','Patrick Monnerat','os400: implement cl command xmlcatalog.','xmlcatlgcl.c','166','51','259','0','false','false','false','2016-05-01 18:35:11+08:00'),('libxml2','2.9.3','c04785d5f55a9e6e12ca07643be6ff46866ece88','Patrick Monnerat','os400: properly process sgml add in xmlcatalog command.','xmlcatalog.cmd','67','0','23','4','false','false','false','2016-05-01 18:35:41+08:00'),('libxml2','2.9.3','c04785d5f55a9e6e12ca07643be6ff46866ece88','Patrick Monnerat','os400: properly process sgml add in xmlcatalog command.','xmlcatlgcl.c','190','58','43','14','false','false','false','2016-05-01 18:35:41+08:00'),('libxml2','2.9.3','b29377109bdfd32cfcaa278e9220c44ece2030a9','Patrick Monnerat','os400: tell about xmllint and xmlcatalog in readme400.','README400','216','0','17','5','false','false','false','2016-05-01 18:36:36+08:00'),('libxml2','2.9.3','a1dca81df7c352cd9a14ab678750b1623f8f8ed7','Patrick Monnerat','xmlschemastypes.c: accept endofdayfrag times set to \"24:00:00\" mean \"end of day\" and should not cause an error.','xmlschemastypes.c','4326','1593','9','5','true','false','false','2016-05-01 18:43:40+08:00'),('libxml2','2.9.4','a1dca81df7c352cd9a14ab678750b1623f8f8ed7','Patrick Monnerat','xmlschemastypes.c: accept endofdayfrag times set to \"24:00:00\" mean \"end of day\" and should not cause an error.','xmlschemastypes.c','4326','1593','9','5','true','false','false','2016-05-01 18:43:40+08:00'),('libxml2','2.9.4','f6599c5164800e9b6fe8a85e6e2bc54fdf2f952a','Alex Henrie','fix xsd validation of uris with ampersands  for https://bugzilla.gnome.org/show_bug.cgi?id=709171  this makes xmlschemasaxhandlestartelementns pass attributes through xmlstringdecodeentities, similar to how xmlschemavdocwalk passes them through xmlnodelistgetstring.','xmlschemas.c','18732','4681','10','3','true','false','false','2016-05-03 13:25:45+08:00'),('libxml2','2.9.4','c71f9305a99b6aa03cb08fab31106c9c56f1be4f','Patrick Monnerat','dict.h: move xmldictptr definition before includes to allow direct inclusion.','dict.h','40','0','12','6','false','false','false','2016-05-03 13:52:00+08:00'),('libxml2','2.9.4','c71f9305a99b6aa03cb08fab31106c9c56f1be4f','Patrick Monnerat','dict.h: move xmldictptr definition before includes to allow direct inclusion.','dict.h','40','0','12','6','false','false','false','2016-05-03 13:52:00+08:00'),('libxml2','2.9.4','c71f9305a99b6aa03cb08fab31106c9c56f1be4f','Patrick Monnerat','dict.h: move xmldictptr definition before includes to allow direct inclusion.','dict.rpgle','63','0','4','4','false','false','false','2016-05-03 13:52:00+08:00'),('libxml2','2.9.4','90da33cebeba87ae3b49a270c8182142dd7cb48e','Patrick Monnerat','portability to non c99 compliant compilers  os400 c compiler is not c99 compliant. it only supports local variable declarations at the beginning of a block. we loose the const as a result but portability is more important.','xmlschemastypes.c','4327','1593','3','2','false','false','false','2016-05-03 21:37:52+08:00'),('libxml2','2.9.4','b8e0fa3489b344d9cbd1165687e7dc5b15cc3727','Hugh Davenport','fix null pointer deref in docs with no root element      from https://bugzilla.gnome.org/show_bug.cgi?id=758514','xmllint.c','2758','868','6','0','true','false','false','2016-05-04 10:55:49+08:00'),('libxml2','2.9.4','9b4b8cb3e2ff102376f27e3658fad931a31e952a','Daniel Veillard','add a make rule to rebuild for asan','Makefile.am','1167','0','4','0','false','false','false','2016-05-04 12:33:32+08:00'),('libxml2','2.9.4','82b73039dc0eed620621cb699b1140c6e0c89cce','Nick Wellnhofer','fix namespace axis traversal  when the namespace axis is traversed in \"tobool\" mode, the traversal can exit early, before visiting all nodes. in this case, the xpath context still contains a non-null tmpnslist.  this means that  - the check when to start a new traversal was wrong and - the tmpnslist could be leaked.  fixes bug #750037 and, by accident, bug #756075:  https://bugzilla.gnome.org/show_bug.cgi?id=750037 https://bugzilla.gnome.org/show_bug.cgi?id=756075','nssimple','14','0','10','1','true','false','false','2016-05-05 15:30:00+02:00'),('libxml2','2.9.4','82b73039dc0eed620621cb699b1140c6e0c89cce','Nick Wellnhofer','fix namespace axis traversal  when the namespace axis is traversed in \"tobool\" mode, the traversal can exit early, before visiting all nodes. in this case, the xpath context still contains a non-null tmpnslist.  this means that  - the check when to start a new traversal was wrong and - the tmpnslist could be leaked.  fixes bug #750037 and, by accident, bug #756075:  https://bugzilla.gnome.org/show_bug.cgi?id=750037 https://bugzilla.gnome.org/show_bug.cgi?id=756075','ns','3','0','2','2','true','false','false','2016-05-05 15:30:00+02:00'),('libxml2','2.9.4','82b73039dc0eed620621cb699b1140c6e0c89cce','Nick Wellnhofer','fix namespace axis traversal  when the namespace axis is traversed in \"tobool\" mode, the traversal can exit early, before visiting all nodes. in this case, the xpath context still contains a non-null tmpnslist.  this means that  - the check when to start a new traversal was wrong and - the tmpnslist could be leaked.  fixes bug #750037 and, by accident, bug #756075:  https://bugzilla.gnome.org/show_bug.cgi?id=750037 https://bugzilla.gnome.org/show_bug.cgi?id=756075','nssimple','1','0','1','0','true','false','false','2016-05-05 15:30:00+02:00'),('libxml2','2.9.4','82b73039dc0eed620621cb699b1140c6e0c89cce','Nick Wellnhofer','fix namespace axis traversal  when the namespace axis is traversed in \"tobool\" mode, the traversal can exit early, before visiting all nodes. in this case, the xpath context still contains a non-null tmpnslist.  this means that  - the check when to start a new traversal was wrong and - the tmpnslist could be leaked.  fixes bug #750037 and, by accident, bug #756075:  https://bugzilla.gnome.org/show_bug.cgi?id=750037 https://bugzilla.gnome.org/show_bug.cgi?id=756075','xpath.c','9872','3145','9','1','true','false','false','2016-05-05 15:30:00+02:00'),('libxml2','2.9.4','6eb0894a96d4d8122e5129e02f78a2b449cc2580','Nick Wellnhofer','fix memory leak with xpath namespace nodes  set hasnsnodes to 1 when adding namespace nodes via xp_test_hit.','nssimple','21','0','8','0','true','false','false','2016-05-05 17:38:27+02:00'),('libxml2','2.9.4','6eb0894a96d4d8122e5129e02f78a2b449cc2580','Nick Wellnhofer','fix memory leak with xpath namespace nodes  set hasnsnodes to 1 when adding namespace nodes via xp_test_hit.','nssimple','2','0','1','0','true','false','false','2016-05-05 17:38:27+02:00'),('libxml2','2.9.4','6eb0894a96d4d8122e5129e02f78a2b449cc2580','Nick Wellnhofer','fix memory leak with xpath namespace nodes  set hasnsnodes to 1 when adding namespace nodes via xp_test_hit.','xpath.c','9873','3145','1','0','true','false','false','2016-05-05 17:38:27+02:00'),('libxml2','2.9.4','34b350048d1ee97c4f42dd6729a77b3f36753b3a','Daniel Veillard','fix an error with regexp on nullable counted char transition  this is the first of the two issues raised by pete cordell in https://mail.gnome.org/archives/xml/2016-april/msg00030.html','xmlregexp.c','5837','1973','9','4','true','false','false','2016-05-09 09:28:38+08:00'),('libxml2','2.9.4','3d75c2e82806955542a41ff62a5be25e04287d89','Stewart Brodie','use pkg-config to locate icu when possible  for https://bugzilla.gnome.org/show_bug.cgi?id=765979  this fallback to icu-config if not available, but current situation this is broken for cross compilation','configure.ac','1621','0','49','33','false','false','false','2016-05-09 10:11:05+08:00'),('libxml2','2.9.4','45f0abd4278776e1c12df38672b8d20a3cc471a8','Stewart Brodie','use pkg-config to locate zlib when possible  for https://bugzilla.gnome.org/show_bug.cgi?id=765979  this fallback to direct detection if not available, but current situation this is broken for cross compilation','configure.ac','1632','0','35','18','false','true','false','2016-05-09 10:13:12+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','configure.ac','1632','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','APIchunk13.html','653','0','0','28','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','apibuild.py','1874','725','1','0','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','general.html','38','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-dict.html','134','0','16','16','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-parser.html','762','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-tree.html','1590','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-xmlregexp.html','280','1','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','book1.html','13','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','index.html','13','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml-dict.html','58','0','14','14','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml-lib.html','13','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml-parser.html','559','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml-tree.html','991','0','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml-xmlregexp.html','143','1','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-api.xml','18510','1','20','20','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml2-refs.xml','32143','0','0','32','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','libxml.spec.in','114','0','2','2','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','setup.py','181','3','1','1','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','8effcb578e0590cc01bbcab0f9dccefc6bdbcdbd','Daniel Veillard','fix apibuild for a recently added construct  commit c71f9305a99b6aa03cb08fab31106c9c56f1be4f added __xml_externc cpp construct which not understood by apibuild, leading to make dist failures, ask to ignore that construct.','testapi.c','41872','6435','49','52','true','false','false','2016-05-09 10:31:09+08:00'),('libxml2','2.9.4','846cf015a77b9bca7b90c17c1f608ece3e268dad','Michael Paddon','integer overflow parsing port number in uri  for https://bugzilla.gnome.org/show_bug.cgi?id=765566  in xmlparse3986port(), uri->port can overflow when parsing a the port number. the type of uri->port is int, so the consequent behavior is undefined and may differ between compilers and architectures','uri.c','1526','584','6','5','false','false','false','2016-05-21 17:18:15+08:00'),('libxml2','2.9.4','8f30bdff69edac9075f4663ce3b56b0c52d48ce6','Peter Simons','add missing increments of recursion depth counter to xml parser.  for https://bugzilla.gnome.org/show_bug.cgi?id=765207 cve-2016-3705 the functions xmlparserentitycheck() and xmlparseattvaluecomplex() used to call xmlstringdecodeentities() in a recursive context without incrementing the \'depth\' counter in the parser context. because of that omission, the parser failed to detect attribute recursions in certain documents before running out of stack space.','parser.c','10383','3536','8','0','false','false','false','2016-05-22 09:24:05+08:00'),('libxml2','2.9.4','8fbbf5513d609c1770b391b99e33314cd0742704','Pranjal Jumde','bug 763071: heap-buffer-overflow in xmlstrncat <https://bugzilla.gnome.org/show_bug.cgi?id=763071>  * xmlstring.c: (xmlstrncat): return null if xmlstrlen returns a negative length. (xmlstrncatnew): ditto.','xmlstring.c','531','201','8','1','true','false','false','2016-05-22 09:33:57+08:00'),('libxml2','2.9.4','d433ea6c83f00c4ccdad4413a2f5c83e641c3992','David Kilzer','integer signed/unsigned type mismatch in xmlparserinputgrow()  for https://bugzilla.gnome.org/show_bug.cgi?id=766635  * parserinternals.c: (xmlparserinputgrow): change \'ret\' type to \'int\' to match the return type of xmlparserinputbuffergrow().','parserInternals.c','1310','390','1','1','false','false','false','2016-05-22 09:49:50+08:00'),('libxml2','2.9.4','5c37382f0fe298d946f4dad0b4c3626fbd8591e2','David Kilzer','implement \"runtest -u\" mode  for https://bugzilla.gnome.org/show_bug.cgi?id=611807  using \"make tests\" to add new tests is error prone. this patch implements a \"runtest -u\" mode that makes it much easier to create baselines for new tests.','runtest.c','3212','668','43','7','true','false','false','2016-05-22 09:58:30+08:00'),('libxml2','2.9.4','9f2416c61775c588a57da8a586d60e11c21b71db','Daniel Veillard','add more debugging info to runtest  when there is a failure, indicates what failed instead of just dumping the tested file name.','runtest.c','3224','669','27','15','false','false','false','2016-05-22 11:14:45+08:00'),('libxml2','2.9.4','489200559245d8013273a170ff40007252c14ccb','Mike Frysinger','libxml2 hardcodes -l/lib in zlib/lzma tests which breaks cross-compiles  for https://bugzilla.gnome.org/show_bug.cgi?id=749416  do not use -l$z_dir/lib when z_dir isn\'t actually set','configure.ac','1634','0','3','1','false','false','false','2016-05-23 09:01:00+08:00'),('libxml2','2.9.4','886529b56ccbf381d9a58c64b4d016a9d05e2c25','David Kilzer','unsigned addition may overflow in xmlmallocatomicloc()  for https://bugzilla.gnome.org/show_bug.cgi?id=764616  this code is used only if turning memory allocation debug in configure with --with-mem-debug, which should never happen in real life, so not a serious issue.  * xmlmemory.c: (max_size_t): macro to define maximum value of size_t. (xmlmallocatomicloc): add bounds check.  fix description and use the correct function name in another error message.','xmlmemory.c','626','181','10','2','true','false','false','2016-05-23 09:23:22+08:00'),('libxml2','2.9.4','c97750d11bb8b6f3303e7131fe526a61ac65bcfd','Daniel Veillard','avoid an out of bound access when serializing malformed strings  for https://bugzilla.gnome.org/show_bug.cgi?id=766414  * xmlsave.c: xmlbufattrserializetxtcontent() if an attribute value   is not utf-8 be more careful when serializing it as we may do an   out of bound access as a result.','xmlsave.c','1845','605','4','4','false','false','false','2016-05-23 13:42:18+08:00'),('libxml2','2.9.4','ebbd2b725fb206c3fede36c1366931088f89f462','Mattias Hansson','revert the use of save_ldflags in configure.ac  for https://bugzilla.gnome.org/show_bug.cgi?id=761252  this reverts commit 7dc24965092d7cc310908d6052913050e88ec072.','configure.ac','1628','0','2','8','false','true','false','2016-05-23 13:58:24+08:00'),('libxml2','2.9.4','40fd6d2a1b9dfc8ef5b428c9df7bdcb3398d6bd3','Mattias Hansson','correct the usage of ldflags  for https://bugzilla.gnome.org/show_bug.cgi?id=761252  it is no longer necessary to save system ldflags when checking lib specific ldflags.','configure.ac','1628','0','3','3','false','false','false','2016-05-23 14:01:29+08:00'),('libxml2','2.9.4','cbb271655cadeb8dbb258a64701d9a3a0c4835b4','Pranjal Jumde','bug 757711: heap-buffer-overflow in xmlfaparseposchargroup <https://bugzilla.gnome.org/show_bug.cgi?id=757711>  * xmlregexp.c: (xmlfaparsecharrange): only advance to the next character if there is no error.  advancing to the next character in case of an error while parsing regexp leads to an out of bounds access.','xmlregexp.c','5837','1973','2','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','db07dd613e461df93dde7902c6505629bf0734e9','David Kilzer','bug 758588: heap-based buffer overread in xmlparserprintfilecontextinternal <https://bugzilla.gnome.org/show_bug.cgi?id=758588>  * parser.c: (xmlparseendtag2): add bounds checks before dereferencing ctxt->input->cur past the end of the buffer, or incrementing the pointer past the end of the buffer.  * result/errors/758588.xml: add test result. * result/errors/758588.xml.err: ditto. * result/errors/758588.xml.str: ditto. * test/errors/758588.xml: add regression test.','parser.c','10387','3538','6','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','db07dd613e461df93dde7902c6505629bf0734e9','David Kilzer','bug 758588: heap-based buffer overread in xmlparserprintfilecontextinternal <https://bugzilla.gnome.org/show_bug.cgi?id=758588>  * parser.c: (xmlparseendtag2): add bounds checks before dereferencing ctxt->input->cur past the end of the buffer, or incrementing the pointer past the end of the buffer.  * result/errors/758588.xml: add test result. * result/errors/758588.xml.err: ditto. * result/errors/758588.xml.str: ditto. * test/errors/758588.xml: add regression test.','758588.xml','None','None','0','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','db07dd613e461df93dde7902c6505629bf0734e9','David Kilzer','bug 758588: heap-based buffer overread in xmlparserprintfilecontextinternal <https://bugzilla.gnome.org/show_bug.cgi?id=758588>  * parser.c: (xmlparseendtag2): add bounds checks before dereferencing ctxt->input->cur past the end of the buffer, or incrementing the pointer past the end of the buffer.  * result/errors/758588.xml: add test result. * result/errors/758588.xml.err: ditto. * result/errors/758588.xml.str: ditto. * test/errors/758588.xml: add regression test.','758588.xml.err','9','0','9','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','db07dd613e461df93dde7902c6505629bf0734e9','David Kilzer','bug 758588: heap-based buffer overread in xmlparserprintfilecontextinternal <https://bugzilla.gnome.org/show_bug.cgi?id=758588>  * parser.c: (xmlparseendtag2): add bounds checks before dereferencing ctxt->input->cur past the end of the buffer, or incrementing the pointer past the end of the buffer.  * result/errors/758588.xml: add test result. * result/errors/758588.xml.err: ditto. * result/errors/758588.xml.str: ditto. * test/errors/758588.xml: add regression test.','758588.xml.str','10','0','10','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','db07dd613e461df93dde7902c6505629bf0734e9','David Kilzer','bug 758588: heap-based buffer overread in xmlparserprintfilecontextinternal <https://bugzilla.gnome.org/show_bug.cgi?id=758588>  * parser.c: (xmlparseendtag2): add bounds checks before dereferencing ctxt->input->cur past the end of the buffer, or incrementing the pointer past the end of the buffer.  * result/errors/758588.xml: add test result. * result/errors/758588.xml.err: ditto. * result/errors/758588.xml.str: ditto. * test/errors/758588.xml: add regression test.','758588.xml','1','0','1','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','HTMLparser.c','4744','1388','8','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','758605.html','3','0','3','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','758605.html.err','3','0','3','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','758605.html.sax','13','0','13','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','runtest.c','3224','669','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','a820dbeac29d330bae4be05d9ecd939ad6b4aa33','Pranjal Jumde','bug 758605: heap-based buffer overread in xmldictaddstring <https://bugzilla.gnome.org/show_bug.cgi?id=758605>  reviewed by david kilzer.  * htmlparser.c: (htmlparsename): add bounds check. (htmlparsenamecomplex): ditto. * result/html/758605.html: added. * result/html/758605.html.err: added. * result/html/758605.html.sax: added. * runtest.c: (pushparsetest): the input for the new test case was so small (4 bytes) that htmlparsechunk() was never called after htmlcreatepushparserctxt(), thereby creating a false positive test failure.  fixed by using a do-while loop so we always call htmlparsechunk() at least once. * test/html/758605.html: added.','758605.html','1','0','1','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>  * parser.c: (xmlparsencnamecomplex): store start position instead of a pointer to the name since the underlying buffer may change, resulting in a stale pointer being used. * result/errors/759398.xml: added. * result/errors/759398.xml.err: added. * result/errors/759398.xml.str: added. * test/errors/759398.xml: added test case.','parser.c','10385','3538','4','5','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>  * parser.c: (xmlparsencnamecomplex): store start position instead of a pointer to the name since the underlying buffer may change, resulting in a stale pointer being used. * result/errors/759398.xml: added. * result/errors/759398.xml.err: added. * result/errors/759398.xml.str: added. * test/errors/759398.xml: added test case.','759398.xml','None','None','0','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>  * parser.c: (xmlparsencnamecomplex): store start position instead of a pointer to the name since the underlying buffer may change, resulting in a stale pointer being used. * result/errors/759398.xml: added. * result/errors/759398.xml.err: added. * result/errors/759398.xml.str: added. * test/errors/759398.xml: added test case.','759398.xml.err','9','0','9','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>  * parser.c: (xmlparsencnamecomplex): store start position instead of a pointer to the name since the underlying buffer may change, resulting in a stale pointer being used. * result/errors/759398.xml: added. * result/errors/759398.xml.err: added. * result/errors/759398.xml.str: added. * test/errors/759398.xml: added test case.','759398.xml.str','4','0','5','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','45752d2c334b50016666d8f0ec3691e2d680f0a0','Pranjal Jumde','bug 759398: heap use-after-free in xmldictcomputefastkey <https://bugzilla.gnome.org/show_bug.cgi?id=759398>  * parser.c: (xmlparsencnamecomplex): store start position instead of a pointer to the name since the underlying buffer may change, resulting in a stale pointer being used. * result/errors/759398.xml: added. * result/errors/759398.xml.err: added. * result/errors/759398.xml.str: added. * test/errors/759398.xml: added test case.','759398.xml','319','0','326','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','b1d34de46a11323fccffa9fadeb33be670d602f5','Daniel Veillard','fix inappropriate fetch of entities content  for https://bugzilla.gnome.org/show_bug.cgi?id=761430  libfuzzer regression testing exposed another case where the parser would fetch content of an external entity while not in validating mode. plug that hole','parser.c','10393','3541','15','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','beca86e8c86984b967a6efa05a9653470253edda','Hugh Davenport','detect change of encoding when parsing html names  from https://bugzilla.gnome.org/show_bug.cgi?id=758518  happens when a file has a name getting parsed, but no valid encoding set, so libxml has to guess what the encoding is. this patch detects when the buffer location changes, and if it does, restarts the parsing of the name.  this slightly change a couple of regression tests output','HTMLparser.c','4748','1389','8','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','beca86e8c86984b967a6efa05a9653470253edda','Hugh Davenport','detect change of encoding when parsing html names  from https://bugzilla.gnome.org/show_bug.cgi?id=758518  happens when a file has a name getting parsed, but no valid encoding set, so libxml has to guess what the encoding is. this patch detects when the buffer location changes, and if it does, restarts the parsing of the name.  this slightly change a couple of regression tests output','758605.html','3','0','1','1','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','beca86e8c86984b967a6efa05a9653470253edda','Hugh Davenport','detect change of encoding when parsing html names  from https://bugzilla.gnome.org/show_bug.cgi?id=758518  happens when a file has a name getting parsed, but no valid encoding set, so libxml has to guess what the encoding is. this patch detects when the buffer location changes, and if it does, restarts the parsing of the name.  this slightly change a couple of regression tests output','758605.html.err','3','0','1','1','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','beca86e8c86984b967a6efa05a9653470253edda','Hugh Davenport','detect change of encoding when parsing html names  from https://bugzilla.gnome.org/show_bug.cgi?id=758518  happens when a file has a name getting parsed, but no valid encoding set, so libxml has to guess what the encoding is. this patch detects when the buffer location changes, and if it does, restarts the parsing of the name.  this slightly change a couple of regression tests output','758605.html.sax','14','0','2','1','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','HTMLparser.c','4748','1389','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','SAX2.c','1986','677','6','6','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','catalog.c','2522','776','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','configure.ac','1628','0','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','debugXML.c','2575','785','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','encoding.c','2945','705','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','entities.c','723','195','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','error.c','647','229','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','parserInternals.h','238','0','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlerror.h','864','0','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlstring.h','100','0','4','4','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','libxml.h','22','0','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','parser.c','10394','3541','19','18','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','parserInternals.c','1310','390','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','relaxng.c','8351','2277','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','schematron.c','1212','283','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','testModule.c','41','5','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','valid.c','4752','1551','4','4','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xinclude.c','1754','536','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlIO.c','2166','717','7','7','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmllint.c','2758','868','10','10','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlreader.c','3868','1286','11','5','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlschemas.c','18730','4681','33','33','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlstring.c','531','201','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xmlwriter.c','3153','724','2','2','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xpath.c','9873','3145','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','4472c3a5a5b516aaf59b89be602fbce52756c3e9','David Kilzer','fix some format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  decorate every method in libxml2 with the appropriate libxml_attr_format(fmt,args) macro and add some cleanups following the reports.','xpointer.c','1926','560','1','1','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','11ed4a7a90d5ce156a18980a4ad4e53e77384852','Pranjal Jumde','heap use-after-free in htmlparsepubidliteral and htmlparsesystemiteral  for https://bugzilla.gnome.org/show_bug.cgi?id=760263  * htmlparser.c: add base_ptr convenience macro. (htmlparsesystemliteral): store length and start position instead of a pointer while iterating through the public identifier since the underlying buffer may change, resulting in a stale pointer being used. (htmlparsepubidliteral): ditto.','HTMLparser.c','4765','1393','43','15','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','38eae571111db3b43ffdeb05487c9f60551906fb','Pranjal Jumde','heap use-after-free in xmlsax2attributens  for https://bugzilla.gnome.org/show_bug.cgi?id=759020  * parser.c: (xmlparsestarttag2): attribute strings are only valid if the base does not change, so add another check where the base may change.  make sure to set \'attvalue\' to null after freeing it. * result/errors/759020.xml: added. * result/errors/759020.xml.err: added. * result/errors/759020.xml.str: added. * test/errors/759020.xml: added test case.','parser.c','10402','3545','10','2','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','38eae571111db3b43ffdeb05487c9f60551906fb','Pranjal Jumde','heap use-after-free in xmlsax2attributens  for https://bugzilla.gnome.org/show_bug.cgi?id=759020  * parser.c: (xmlparsestarttag2): attribute strings are only valid if the base does not change, so add another check where the base may change.  make sure to set \'attvalue\' to null after freeing it. * result/errors/759020.xml: added. * result/errors/759020.xml.err: added. * result/errors/759020.xml.str: added. * test/errors/759020.xml: added test case.','759020.xml','None','None','0','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','38eae571111db3b43ffdeb05487c9f60551906fb','Pranjal Jumde','heap use-after-free in xmlsax2attributens  for https://bugzilla.gnome.org/show_bug.cgi?id=759020  * parser.c: (xmlparsestarttag2): attribute strings are only valid if the base does not change, so add another check where the base may change.  make sure to set \'attvalue\' to null after freeing it. * result/errors/759020.xml: added. * result/errors/759020.xml.err: added. * result/errors/759020.xml.str: added. * test/errors/759020.xml: added test case.','759020.xml.err','5','0','6','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','38eae571111db3b43ffdeb05487c9f60551906fb','Pranjal Jumde','heap use-after-free in xmlsax2attributens  for https://bugzilla.gnome.org/show_bug.cgi?id=759020  * parser.c: (xmlparsestarttag2): attribute strings are only valid if the base does not change, so add another check where the base may change.  make sure to set \'attvalue\' to null after freeing it. * result/errors/759020.xml: added. * result/errors/759020.xml.err: added. * result/errors/759020.xml.str: added. * test/errors/759020.xml: added test case.','759020.xml.str','6','0','7','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','38eae571111db3b43ffdeb05487c9f60551906fb','Pranjal Jumde','heap use-after-free in xmlsax2attributens  for https://bugzilla.gnome.org/show_bug.cgi?id=759020  * parser.c: (xmlparsestarttag2): attribute strings are only valid if the base does not change, so add another check where the base may change.  make sure to set \'attvalue\' to null after freeing it. * result/errors/759020.xml: added. * result/errors/759020.xml.err: added. * result/errors/759020.xml.str: added. * test/errors/759020.xml: added test case.','759020.xml','3','0','46','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','parser.c','10404','3545','2','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573-2.xml','None','None','0','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573-2.xml.err','57','0','58','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573-2.xml.str','4','0','4','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573.xml','None','None','0','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573.xml.err','30','0','31','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573.xml.str','4','0','4','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573-2.xml','9','0','9','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','00906759053986b8079985644172085f74331f83','David Kilzer','heap-based buffer-underreads due to xmlparsename  for https://bugzilla.gnome.org/show_bug.cgi?id=759573  * parser.c: (xmlparseelementdecl): return early on invalid input to fix non-minimized test case (759573-2.xml).  otherwise the parser gets into a bad state in skip(3) at the end of the function. (xmlparseconditionalsections): halt parsing when hitting invalid input that would otherwise caused xmlparserhandlepereference() to recurse unexpectedly.  this fixes the minimized test case (759573.xml).  * result/errors/759573-2.xml: add. * result/errors/759573-2.xml.err: add. * result/errors/759573-2.xml.str: add. * result/errors/759573.xml: add. * result/errors/759573.xml.err: add. * result/errors/759573.xml.str: add. * test/errors/759573-2.xml: add. * test/errors/759573.xml: add.','759573.xml','1','0','1','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','parserInternals.c','1316','391','89','83','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606.html','1','0','2','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606.html.err','14','0','16','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606.html.sax','10','0','10','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606_2.html','2','0','2','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606_2.html.err','14','0','16','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606_2.html.sax','17','0','17','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606.html','1','0','1','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','0bcd05c5cd83dec3406c8f68b769b1d610c72f76','Pranjal Jumde','heap-based buffer overread in htmlcurrentchar  for https://bugzilla.gnome.org/show_bug.cgi?id=758606  * parserinternals.c: (xmlnextchar): add an test to catch other issues on ctxt->input corruption proactively. for non-utf-8 charsets, xmlnextchar() failed to check for the end of the input buffer and would continuing reading.  fix this by pulling out the check for the end of the input buffer into common code, and return if we reach the end of the input buffer prematurely. * result/html/758606.html: added. * result/html/758606.html.err: added. * result/html/758606.html.sax: added. * result/html/758606_2.html: added. * result/html/758606_2.html.err: added. * result/html/758606_2.html.sax: added. * test/html/758606.html: added test case. * test/html/758606_2.html: added test case.','758606_2.html','1','0','1','0','true','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','bdd66182ef53fe1f7209ab6535fda56366bd7ac9','Daniel Veillard','avoid building recursive entities  for https://bugzilla.gnome.org/show_bug.cgi?id=762100  when we detect a recusive entity we should really not build the associated data, moreover if someone bypass libxml2 fatal errors and still tries to serialize a broken entity make sure we don\'t risk to get ito a recursion  * parser.c: xmlparserentitycheck() don\'t build if entity loop   were found and remove the associated text content * tree.c: xmlstringgetnodelist() avoid a potential recursion','parser.c','10408','3547','5','1','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','bdd66182ef53fe1f7209ab6535fda56366bd7ac9','Daniel Veillard','avoid building recursive entities  for https://bugzilla.gnome.org/show_bug.cgi?id=762100  when we detect a recusive entity we should really not build the associated data, moreover if someone bypass libxml2 fatal errors and still tries to serialize a broken entity make sure we don\'t risk to get ito a recursion  * parser.c: xmlparserentitycheck() don\'t build if entity loop   were found and remove the associated text content * tree.c: xmlstringgetnodelist() avoid a potential recursion','tree.c','6373','2430','1','0','false','false','false','2016-05-23 15:01:07+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','libxml.h','24','0','3','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','relaxng.c','8352','2277','2','1','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','xmlschemas.c','18737','4683','26','13','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','502f6a6d08b08c04b3ddfb1cd21b2f699c1b7f5b','David Kilzer','more format string warnings with possible format string vulnerability  for https://bugzilla.gnome.org/show_bug.cgi?id=761029  adds a new xmlescapeformatstring() function to escape composed format strings','xmlstring.c','567','210','55','0','false','false','false','2016-05-23 15:01:08+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','APIchunk26.html','333','0','1','0','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','APIfunctions.html','2345','0','0','2','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml2-xmlmemory.html','182','0','1','1','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml2-xmlstring.html','217','0','4','4','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml-xmlmemory.html','103','0','1','1','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml-xmlstring.html','107','0','4','4','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml2-api.xml','18510','1','3','3','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml2-refs.xml','32142','0','1','2','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml2.xsa','75','0','57','166','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','news.html','2514','0','91','1','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','xml.html','5917','0','92','0','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','bdec2183f34b37ee89ae1d330c6ad2bb4d76605f','Daniel Veillard','release of libxml2-2.9.4  * doc/xml.html libxml.spec.in: updated for the release * doc/*: regenerated but no api additions','libxml.spec.in','114','0','2','2','false','false','false','2016-05-23 16:04:52+08:00'),('libxml2','2.9.4','d77e5fc4bcdb7da748c9cca116a601ae4df60d21','Chun-wei Fan','relaxng.c, xmlschemas.c: fix build on pre-c99 compilers  make sure that the variables are declared at the top of the block.  https://bugzilla.gnome.org/show_bug.cgi?id=767063','relaxng.c','8353','2277','2','1','true','false','false','2016-06-23 19:02:26+08:00'),('libxml2','2.9.4','d77e5fc4bcdb7da748c9cca116a601ae4df60d21','Chun-wei Fan','relaxng.c, xmlschemas.c: fix build on pre-c99 compilers  make sure that the variables are declared at the top of the block.  https://bugzilla.gnome.org/show_bug.cgi?id=767063','xmlschemas.c','18737','4683','1','1','true','false','false','2016-06-23 19:02:26+08:00'),('libxml2','2.9.4','1fc55ca72b9513f1695a63d0dc4f0a250a079982','Nick Wellnhofer','don\'t print generic error messages in xpath tests','runtest.c','3231','670','12','0','true','false','false','2016-06-25 14:24:51+02:00'),('libxml2','2.9.4','d8083bf77955b7879c1290f0c0a24ab8cc70f7fb','Nick Wellnhofer','fix null pointer deref in xpointer range-to  - check for errors after evaluating first operand. - add sanity check for empty stack.  found with afl-fuzz.','viderror','3','0','4','0','true','false','false','2016-06-25 14:24:51+02:00'),('libxml2','2.9.4','d8083bf77955b7879c1290f0c0a24ab8cc70f7fb','Nick Wellnhofer','fix null pointer deref in xpointer range-to  - check for errors after evaluating first operand. - add sanity check for empty stack.  found with afl-fuzz.','viderror','1','0','1','0','true','false','false','2016-06-25 14:24:51+02:00'),('libxml2','2.9.4','d8083bf77955b7879c1290f0c0a24ab8cc70f7fb','Nick Wellnhofer','fix null pointer deref in xpointer range-to  - check for errors after evaluating first operand. - add sanity check for empty stack.  found with afl-fuzz.','xpath.c','9878','3146','6','1','true','false','false','2016-06-25 14:24:51+02:00'),('libxml2','2.9.4','3169602058bd2d04913909e869c61d1540bc7fb4','Alex Henrie','fix attribute decoding during xml schema validation  for https://bugzilla.gnome.org/show_bug.cgi?id=766834  vctxt->parserctxt is always null in xmlschemasaxhandlestartelementns, so this function can\'t call xmlstringlendecodeentities to decode the entities.','xmlschemas.c','18759','4691','25','5','true','false','false','2016-08-29 11:21:08+02:00'),('libxml2','2.9.4','a005199330b86dada19d162cae15ef9bdcb6baa8','Nick Wellnhofer','fix comparison with root node in xmlxpathcmpnodes  this change has already been made in xmlxpathcmpnodesext but not in xmlxpathcmpnodes.','xpath.c','9878','3146','2','2','true','false','false','2016-10-12 13:09:21+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to  the old code would invoke the broken xmlxptrrangetofunction. range-to isn\'t really a function but a special kind of location step. remove this function and always handle range-to in the xpath code.  the old xmlxptrrangetofunction could also be abused to trigger a use-after-free error with the potential for remote code execution.  found with afl-fuzz.  fixes cve-2016-5131.','vidbase','27','0','13','0','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to  the old code would invoke the broken xmlxptrrangetofunction. range-to isn\'t really a function but a special kind of location step. remove this function and always handle range-to in the xpath code.  the old xmlxptrrangetofunction could also be abused to trigger a use-after-free error with the potential for remote code execution.  found with afl-fuzz.  fixes cve-2016-5131.','vidbase','3','0','1','0','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to  the old code would invoke the broken xmlxptrrangetofunction. range-to isn\'t really a function but a special kind of location step. remove this function and always handle range-to in the xpath code.  the old xmlxptrrangetofunction could also be abused to trigger a use-after-free error with the potential for remote code execution.  found with afl-fuzz.  fixes cve-2016-5131.','xpath.c','9881','3149','6','1','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to  the old code would invoke the broken xmlxptrrangetofunction. range-to isn\'t really a function but a special kind of location step. remove this function and always handle range-to in the xpath code.  the old xmlxptrrangetofunction could also be abused to trigger a use-after-free error with the potential for remote code execution.  found with afl-fuzz.  fixes cve-2016-5131.','xpath.c','9881','3149','6','1','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','9ab01a277d71f54d3143c2cf333c5c2e9aaedd9e','Nick Wellnhofer','fix xpointer paths beginning with range-to  the old code would invoke the broken xmlxptrrangetofunction. range-to isn\'t really a function but a special kind of location step. remove this function and always handle range-to in the xpath code.  the old xmlxptrrangetofunction could also be abused to trigger a use-after-free error with the potential for remote code execution.  found with afl-fuzz.  fixes cve-2016-5131.','xpointer.c','1886','555','6','70','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','3f8a91036d338e51c059d54397a42d645f019c65','Nick Wellnhofer','disallow namespace nodes in xpointer points','xpointer.c','1888','557','4','4','false','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','c1d1f7121194036608bf555f08d3062a36fd344b','Nick Wellnhofer','disallow namespace nodes in xpointer ranges  namespace nodes must be copied to avoid use-after-free errors. but they don\'t necessarily have a physical representation in a document, so simply disallow them in xpointer ranges.  found with afl-fuzz.  fixes cve-2016-4658.','xpointer.c','1833','553','56','93','true','false','false','2016-10-12 13:12:18+02:00'),('libxml2','2.9.4','c2545cbb6d9a87e3e0bce167eabcb8f3c9153edc','Nick Wellnhofer','fix format string warnings  also fixes bug #768199:  https://bugzilla.gnome.org/show_bug.cgi?id=768199','runtest.c','3231','670','1','1','true','false','false','2016-10-12 13:22:57+02:00'),('libxml2','2.9.4','c2545cbb6d9a87e3e0bce167eabcb8f3c9153edc','Nick Wellnhofer','fix format string warnings  also fixes bug #768199:  https://bugzilla.gnome.org/show_bug.cgi?id=768199','testlimits.c','1058','251','5','4','true','false','false','2016-10-12 13:22:57+02:00'),('libxml2','2.9.4','c2545cbb6d9a87e3e0bce167eabcb8f3c9153edc','Nick Wellnhofer','fix format string warnings  also fixes bug #768199:  https://bugzilla.gnome.org/show_bug.cgi?id=768199','timsort.h','313','78','1','1','true','false','false','2016-10-12 13:22:57+02:00'),('libxml2','2.9.4','c2545cbb6d9a87e3e0bce167eabcb8f3c9153edc','Nick Wellnhofer','fix format string warnings  also fixes bug #768199:  https://bugzilla.gnome.org/show_bug.cgi?id=768199','xmlIO.c','2166','717','1','1','true','false','false','2016-10-12 13:22:57+02:00'),('libxml2','2.9.4','94613f64c032c954fc9aefb9559469935123cd01','Nick Wellnhofer','remove unused variables','tree2.c','47','6','1','2','false','false','false','2016-10-12 13:23:08+02:00'),('libxml2','2.9.4','94613f64c032c954fc9aefb9559469935123cd01','Nick Wellnhofer','remove unused variables','timsort.h','312','78','1','2','false','false','false','2016-10-12 13:23:08+02:00'),('libxml2','2.9.4','229d1f93ceaa5e29a1e8455e73a7f346993d20b3','Nick Wellnhofer','avoid function/data pointer conversion in xpath.c  fixes a `-pedantic` compiler warning.','xpath.c','9881','3149','3','3','true','false','false','2016-10-12 13:23:16+02:00'),('libxml2','2.9.4','e905f08123e4a6e7731549e6f09dadff4cab65bd','Nick Wellnhofer','fix more null pointer derefs in xpointer.c  found with afl-fuzz.','xpointer.c','1835','556','7','5','true','false','false','2016-10-12 14:00:03+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','elfgcchack.h','3185','0','10','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','parser.h','661','0','2','1','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','xmlIO.h','192','0','8','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','xmlerror.h','865','0','1','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','parser.c','10412','3548','4','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','xmlIO.c','2193','723','35','5','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','2304078555896cf1638c628f50326aeef6f0e0d0','Doran Moppert','add an xml_parse_noxxe flag to block all entities loading even local  for https://bugzilla.gnome.org/show_bug.cgi?id=772726  * include/libxml/parser.h: add a new parser flag xml_parse_noxxe * elfgcchack.h, xmlio.h, xmlio.c: associated loading routine * include/libxml/xmlerror.h: new error raised * xmllint.c: adds --noxxe flag to activate the option','xmllint.c','2763','870','5','0','true','false','false','2017-04-07 16:55:05+02:00'),('libxml2','2.9.4','5dca9eea1bd4263bfa4d037ab2443de1cd730f7e','Daniel Veillard','increase buffer space for port in http redirect support  for https://bugzilla.gnome.org/show_bug.cgi?id=780690  nanohttp.c: the code wrongly assumed a short int port value.','nanohttp.c','1136','385','2','2','false','false','false','2017-04-07 17:13:28+02:00'),('libxml2','2.9.4','90ccb58242866b0ba3edbef8fe44214a101c2b3e','Neel Mehta','prevent unwanted external entity reference  for https://bugzilla.gnome.org/show_bug.cgi?id=780691  * parser.c: add a specific check to avoid pe reference','parser.c','10420','3555','9','0','false','false','false','2017-04-07 17:45:14+02:00'),('libxml2','2.9.4','074180119fc90d5fd04ef9e8a5ee1910d6f9ad8e','David Tardon','do not leak the new cdata node if adding fails  for https://bugzilla.gnome.org/show_bug.cgi?id=780918','SAX2.c','1987','678','2','1','false','false','false','2017-04-07 18:24:52+02:00'),('libxml2','2.9.4','d42a7063dae060164c5cb731caad6c4f3002e6de','Nick Wellnhofer','fix memory leaks in xpath error paths  found with libfuzzer and asan.','xpath.c','9898','3161','26','9','true','false','false','2017-05-27 14:58:19+02:00'),('libxml2','2.9.4','95a9249a60efa977226b58d9f6ec23734654def4','Nick Wellnhofer','fix memory leak in xpath filter optimizations  namespace nodes must be freed when selecting the first or last element of a node set.  found with libfuzzer and asan.','xpath.c','9890','3160','46','45','true','false','false','2017-05-27 15:59:05+02:00'),('libxml2','2.9.4','9d08b347162ca3916984f05c907e968aea28b3ed','Nick Wellnhofer','fix memory leak in xmlxpathnodesetmergeandclear  namespaces nodes must not be duplicated when merging.  found with libfuzzer and asan.','xpath.c','9885','3159','1','7','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','bd1571cdc56b40638d0aa431ff436e478139a0b8','Nick Wellnhofer','fix memory leaks in xpointer error paths  found with libfuzzer and asan.','xpointer.c','1841','556','10','1','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','8627e4ed207571d2647ac3e28fb18e03f9326ad9','Nick Wellnhofer','fix memory leak in parser error path  triggered in mixed content element declarations if there\'s an invalid name after the first valid name:      <!element para (#pcdata|a|<invalid>)*>  found with libfuzzer and asan.','parser.c','10420','3555','1','1','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','1f131f1133e1441ea159204d606fb4bbc394e14b','Nick Wellnhofer','fix memory leak in pattern error path  found with libfuzzer and asan.','pattern.c','1749','509','1','0','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','cf60dbe461966f40fece3737f95859144b1d452d','Nick Wellnhofer','fix memory leak in xmlxpathcomparenodesetvalue  implement todo block to free the arguments in error case.  found with libfuzzer and asan.','xpath.c','9891','3159','7','1','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','d6b3645f9b72e55fece09c8d49f91e78a812b0f4','Nick Wellnhofer','fix memory leak in xmlcanonicpath  found with libfuzzer and asan.','uri.c','1527','584','1','0','true','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','640a368c804d0eb5f3a74b8dcf246e8abd352fdd','Nick Wellnhofer','make xmlxpathevalexpression call xmlxpatheval  both functions are supposed to do exactly the same.','xpath.c','9863','3152','2','37','false','false','false','2017-05-27 15:59:18+02:00'),('libxml2','2.9.4','c851970c6ec2166df804b1d551df0998de182fc4','Nick Wellnhofer','rework final handling of xpath results  move cleanup of xpath stack to xmlxpathfreeparsercontext. this avoids memory leaks if valuepop fails in some error cases. found with libfuzzer and asan.  rework handling of the final xpath result object in xmlxpathcompiledevalinternal and xmlxpatheval to avoid useless error messages.','xpath.c','9845','3142','35','57','true','false','false','2017-05-27 16:03:48+02:00'),('libxml2','2.9.4','c851970c6ec2166df804b1d551df0998de182fc4','Nick Wellnhofer','rework final handling of xpath results  move cleanup of xpath stack to xmlxpathfreeparsercontext. this avoids memory leaks if valuepop fails in some error cases. found with libfuzzer and asan.  rework handling of the final xpath result object in xmlxpathcompiledevalinternal and xmlxpatheval to avoid useless error messages.','xpath.c','9845','3142','35','57','true','false','false','2017-05-27 16:03:48+02:00'),('libxml2','2.9.4','aed407c14bb67368f7ff1d691ee566e276ba9a32','Nick Wellnhofer','check for trailing characters in xpath expressions earlier  move the check for trailing characters from xmlxpatheval to xmlxpathevalexpr. otherwise, a valid portion of a syntactically invalid expression would be evaluated before returning an error.','xpath.c','9835','3135','8','16','true','false','false','2017-05-27 16:04:07+02:00'),('libxml2','2.9.4','a07a4e96d04e802c291578a850a17797912249ab','Nick Wellnhofer','fix spurious error message  commit c851970 introduced a spurious error message when evaluating xpath expressions with xmlxpathcompiledevaltoboolean.','xpath.c','9836','3136','3','2','true','false','false','2017-05-27 17:07:53+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','nssimple','33','0','16','2','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','simplebase','116','0','5','0','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','ns','5','0','2','0','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','nssimple','4','0','2','0','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','simplebase','16','0','1','0','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','40f58521493e6a5429ea92964dec7bc09168224f','Nick Wellnhofer','fix axis traversal from attribute and namespace nodes  when traversing the \"preceding\" axis from an attribute node, we must first go up to the attribute\'s containing element. otherwise, text children of other attributes could be returned. this made it possible to hit a code path in xmlxpathnextancestor which contained another bug: the attribute node was initialized with the context node instead of the current node. normally, this code path is only hit via xmlxpathnextancestororself in which case the current and context node are the same.  the combination of the two bugs could result in an infinite loop, found with libfuzzer.  traversing the \"following\" and the \"preceding\" axis from namespace nodes should be handled similarly. this wasn\'t supported at all previously.','xpath.c','9853','3143','31','11','true','false','false','2017-05-31 14:57:46+02:00'),('libxml2','2.9.4','43f50f4dfc6371495c80491b42b858a3bb937862','Nick Wellnhofer','fix white space in test output  quote echoed variable to avoid newlines being converted to space.','Makefile.am','1167','0','42','42','true','false','false','2017-05-31 15:30:19+02:00'),('libxml2','2.9.4','4bebb030db2100fce5b43fbbae413d372ee70497','Nick Wellnhofer','rework xpath rounding functions  use the c library\'s floor and ceil functions. the old code was overly complicated for no apparent reason and could result in undefined behavior when handling nans (found with afl-fuzz and ubsan).  fix wrong comment in xmlxpathroundfunction. the implementation was already following the spec and rounding half up.','functions','126','0','68','0','true','false','false','2017-05-31 15:38:42+02:00'),('libxml2','2.9.4','4bebb030db2100fce5b43fbbae413d372ee70497','Nick Wellnhofer','rework xpath rounding functions  use the c library\'s floor and ceil functions. the old code was overly complicated for no apparent reason and could result in undefined behavior when handling nans (found with afl-fuzz and ubsan).  fix wrong comment in xmlxpathroundfunction. the implementation was already following the spec and rounding half up.','functions','42','0','17','0','true','false','false','2017-05-31 15:38:42+02:00'),('libxml2','2.9.4','4bebb030db2100fce5b43fbbae413d372ee70497','Nick Wellnhofer','rework xpath rounding functions  use the c library\'s floor and ceil functions. the old code was overly complicated for no apparent reason and could result in undefined behavior when handling nans (found with afl-fuzz and ubsan).  fix wrong comment in xmlxpathroundfunction. the implementation was already following the spec and rounding half up.','xpath.c','9827','3133','15','56','true','false','false','2017-05-31 15:38:42+02:00'),('libxml2','2.9.4','a851868a75c108e3b8fc507f5d6555b09abb51c9','Nick Wellnhofer','parse small xpath numbers more accurately  don\'t count leading zeros towards the fraction size limit. this allows to parse numbers like      0.0000000000000000000000000000000000000000000000000000000001  which is the only standard-conformant way to represent such numbers, as scientific notation isn\'t allowed in xpath 1.0. (it is allowed in xpath 2.0 and in libxml2 as an extension, though.)  overall accuracy is still bad, see bug 783238.','base','27','0','8','0','true','false','false','2017-05-31 15:46:29+02:00'),('libxml2','2.9.4','a851868a75c108e3b8fc507f5d6555b09abb51c9','Nick Wellnhofer','parse small xpath numbers more accurately  don\'t count leading zeros towards the fraction size limit. this allows to parse numbers like      0.0000000000000000000000000000000000000000000000000000000001  which is the only standard-conformant way to represent such numbers, as scientific notation isn\'t allowed in xpath 1.0. (it is allowed in xpath 2.0 and in libxml2 as an extension, though.)  overall accuracy is still bad, see bug 783238.','base','9','0','2','0','true','false','false','2017-05-31 15:46:29+02:00'),('libxml2','2.9.4','a851868a75c108e3b8fc507f5d6555b09abb51c9','Nick Wellnhofer','parse small xpath numbers more accurately  don\'t count leading zeros towards the fraction size limit. this allows to parse numbers like      0.0000000000000000000000000000000000000000000000000000000001  which is the only standard-conformant way to represent such numbers, as scientific notation isn\'t allowed in xpath 1.0. (it is allowed in xpath 2.0 and in libxml2 as an extension, though.)  overall accuracy is still bad, see bug 783238.','xpath.c','9829','3135','16','20','true','false','false','2017-05-31 15:46:29+02:00'),('libxml2','2.9.4','a58331a6ee4d4c161cebfa4e0d9a090945c6bf23','Nick Wellnhofer','check for overflow in xmlxpathispositionalpredicate  avoid undefined behavior when casting from double to int.  found with afl-fuzz and ubsan.','chaptersbase','127','0','15','0','false','false','false','2017-05-31 16:04:26+02:00'),('libxml2','2.9.4','a58331a6ee4d4c161cebfa4e0d9a090945c6bf23','Nick Wellnhofer','check for overflow in xmlxpathispositionalpredicate  avoid undefined behavior when casting from double to int.  found with afl-fuzz and ubsan.','chaptersbase','9','0','3','0','false','false','false','2017-05-31 16:04:26+02:00'),('libxml2','2.9.4','a58331a6ee4d4c161cebfa4e0d9a090945c6bf23','Nick Wellnhofer','check for overflow in xmlxpathispositionalpredicate  avoid undefined behavior when casting from double to int.  found with afl-fuzz and ubsan.','xpath.c','9830','3137','8','6','false','false','false','2017-05-31 16:04:26+02:00'),('libxml2','2.9.4','f4029cd413940677a310b48cd6cf6acf9cf33008','Nick Wellnhofer','check xpath exponents for overflow  avoid undefined behavior and wrong results with huge exponents.  found with afl-fuzz and ubsan.','base','51','0','32','0','false','false','false','2017-05-31 16:04:37+02:00'),('libxml2','2.9.4','f4029cd413940677a310b48cd6cf6acf9cf33008','Nick Wellnhofer','check xpath exponents for overflow  avoid undefined behavior and wrong results with huge exponents.  found with afl-fuzz and ubsan.','base','17','0','8','0','false','false','false','2017-05-31 16:04:37+02:00'),('libxml2','2.9.4','f4029cd413940677a310b48cd6cf6acf9cf33008','Nick Wellnhofer','check xpath exponents for overflow  avoid undefined behavior and wrong results with huge exponents.  found with afl-fuzz and ubsan.','xpath.c','9832','3139','4','2','false','false','false','2017-05-31 16:04:37+02:00'),('libxml2','2.9.4','474967241cdcce6d3a2fd356079571eee794ec12','Nick Wellnhofer','avoid spurious ubsan errors in parser.c  if available, use a c99 flexible array member to avoid spurious ubsan errors.','parser.c','10421','3555','6','1','false','false','false','2017-06-01 14:31:27+02:00'),('libxml2','2.9.4','34e445674d5fe7b94b702449ac40d4c0a3ca9d12','Nick Wellnhofer','fix undefined behavior in xmlregexecpushstringinternal  it\'s stupid, but the behavior of memcpy(null, null, 0) is undefined.','xmlregexp.c','5838','1974','3','2','true','false','false','2017-06-01 14:31:27+02:00'),('libxml2','2.9.4','ff34ba3e88cdd2e83e1c95e0356bbf4bef47ae2e','Nick Wellnhofer','avoid out-of-bound array access in api tests  the api tests combine string buffers with arbitrary length values which makes asan detect out-of-bound array accesses. even without asan, this could lead to unwanted test failures.  add a check for \"len\", \"size\", and \"start\" arguments, assuming they apply to the nearest char pointer. skip the test if they exceed the buffer size. this is a somewhat naive heuristic but it seems to work well.','gentest.py','772','145','18','0','false','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','ff34ba3e88cdd2e83e1c95e0356bbf4bef47ae2e','Nick Wellnhofer','avoid out-of-bound array access in api tests  the api tests combine string buffers with arbitrary length values which makes asan detect out-of-bound array accesses. even without asan, this could lead to unwanted test failures.  add a check for \"len\", \"size\", and \"start\" arguments, assuming they apply to the nearest char pointer. skip the test if they exceed the buffer size. this is a somewhat naive heuristic but it seems to work well.','testapi.c','42046','6551','174','0','false','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','ac9a4560ee85b18811ff8ab7791ddfff7b144b0a','Nick Wellnhofer','disable leaksanitizer when running api tests  the autogenerated api tests leak memory.','Makefile.am','1172','0','7','2','false','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','07b7428b69c368611d215a140fe630b2d1e61349','Nick Wellnhofer','simplify control flow in xmlparsestarttag2  remove some goto labels and deduplicate a bit of code after handling namespaces.  before:      loop {         parseattribute         if (ok) {             if (defaultnamespace) {                 handledefaultnamespace                 if (error)                     goto skip_default_ns;                 handledefaultnamespace     skip_default_ns:                 freeattr                 nextattr                 continue;             }             if (namespace) {                 handlenamespace                 if (error)                     goto skip_ns;                 handlenamespace     skip_ns:                 freeattr                 nextattr;                 continue;             }             handleattr         } else {             freeattr         }         nextattr     }  after:      loop {         parseattribute         if (!ok)             goto next_attr;         if (defaultnamespace) {             handledefaultnamespace             if (error)                 goto next_attr;             handledefaultnamespace         } else if (namespace) {             handlenamespace             if (error)                 goto next_attr;             handlenamespace         } else {             handleattr         }     next_attr:         freeattr         nextattr     }','parser.c','10389','3538','152','182','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','855c19efb7cd30d927d673b3658563c4959ca6f0','Nick Wellnhofer','avoid reparsing in xmlparsestarttag2  the code in xmlparsestarttag2 must handle the case that the input buffer was grown and reallocated which can invalidate pointers to attribute values. before, this was handled by detecting changes of the input buffer \"base\" pointer and, in case of a change, jumping back to the beginning of the function and reparsing the start tag.  the major problem of this approach is that whether an input buffer is reallocated is nondeterministic, resulting in seemingly random test failures. see the mailing list thread \"runtest mystery bug: name2.xml error case regression test\" from 2012, for example.  if a reallocation was detected, the code also made no attempts to continue parsing in case of errors which makes a difference in the lax \"recover\" mode.  now we store the current input buffer \"base\" pointer for each (not separately allocated) attribute in the namespace uri field, which isn\'t used until later. after the whole start tag was parsed, the pointers to the attribute values are reconstructed using the offset between the new and the old input buffer. this relies on arithmetic on dangling pointers which is technically undefined behavior. but it seems like the easiest and most efficient fix and a similar approach is used in xmlparserinputgrow.  this changes the error output of several tests, typically making it more verbose because we try harder to continue parsing in case of errors.  (another possible solution is to check not only the \"base\" pointer but the size of the input buffer as well. but this would result in even more reparsing.)','parser.c','10365','3525','26','48','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','855c19efb7cd30d927d673b3658563c4959ca6f0','Nick Wellnhofer','avoid reparsing in xmlparsestarttag2  the code in xmlparsestarttag2 must handle the case that the input buffer was grown and reallocated which can invalidate pointers to attribute values. before, this was handled by detecting changes of the input buffer \"base\" pointer and, in case of a change, jumping back to the beginning of the function and reparsing the start tag.  the major problem of this approach is that whether an input buffer is reallocated is nondeterministic, resulting in seemingly random test failures. see the mailing list thread \"runtest mystery bug: name2.xml error case regression test\" from 2012, for example.  if a reallocation was detected, the code also made no attempts to continue parsing in case of errors which makes a difference in the lax \"recover\" mode.  now we store the current input buffer \"base\" pointer for each (not separately allocated) attribute in the namespace uri field, which isn\'t used until later. after the whole start tag was parsed, the pointers to the attribute values are reconstructed using the offset between the new and the old input buffer. this relies on arithmetic on dangling pointers which is technically undefined behavior. but it seems like the easiest and most efficient fix and a similar approach is used in xmlparserinputgrow.  this changes the error output of several tests, typically making it more verbose because we try harder to continue parsing in case of errors.  (another possible solution is to check not only the \"base\" pointer but the size of the input buffer as well. but this would result in even more reparsing.)','759398.xml.err','12','0','7','4','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','855c19efb7cd30d927d673b3658563c4959ca6f0','Nick Wellnhofer','avoid reparsing in xmlparsestarttag2  the code in xmlparsestarttag2 must handle the case that the input buffer was grown and reallocated which can invalidate pointers to attribute values. before, this was handled by detecting changes of the input buffer \"base\" pointer and, in case of a change, jumping back to the beginning of the function and reparsing the start tag.  the major problem of this approach is that whether an input buffer is reallocated is nondeterministic, resulting in seemingly random test failures. see the mailing list thread \"runtest mystery bug: name2.xml error case regression test\" from 2012, for example.  if a reallocation was detected, the code also made no attempts to continue parsing in case of errors which makes a difference in the lax \"recover\" mode.  now we store the current input buffer \"base\" pointer for each (not separately allocated) attribute in the namespace uri field, which isn\'t used until later. after the whole start tag was parsed, the pointers to the attribute values are reconstructed using the offset between the new and the old input buffer. this relies on arithmetic on dangling pointers which is technically undefined behavior. but it seems like the easiest and most efficient fix and a similar approach is used in xmlparserinputgrow.  this changes the error output of several tests, typically making it more verbose because we try harder to continue parsing in case of errors.  (another possible solution is to check not only the \"base\" pointer but the size of the input buffer as well. but this would result in even more reparsing.)','attr1.xml.err','8','0','6','3','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','855c19efb7cd30d927d673b3658563c4959ca6f0','Nick Wellnhofer','avoid reparsing in xmlparsestarttag2  the code in xmlparsestarttag2 must handle the case that the input buffer was grown and reallocated which can invalidate pointers to attribute values. before, this was handled by detecting changes of the input buffer \"base\" pointer and, in case of a change, jumping back to the beginning of the function and reparsing the start tag.  the major problem of this approach is that whether an input buffer is reallocated is nondeterministic, resulting in seemingly random test failures. see the mailing list thread \"runtest mystery bug: name2.xml error case regression test\" from 2012, for example.  if a reallocation was detected, the code also made no attempts to continue parsing in case of errors which makes a difference in the lax \"recover\" mode.  now we store the current input buffer \"base\" pointer for each (not separately allocated) attribute in the namespace uri field, which isn\'t used until later. after the whole start tag was parsed, the pointers to the attribute values are reconstructed using the offset between the new and the old input buffer. this relies on arithmetic on dangling pointers which is technically undefined behavior. but it seems like the easiest and most efficient fix and a similar approach is used in xmlparserinputgrow.  this changes the error output of several tests, typically making it more verbose because we try harder to continue parsing in case of errors.  (another possible solution is to check not only the \"base\" pointer but the size of the input buffer as well. but this would result in even more reparsing.)','attr2.xml.err','8','0','6','3','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','855c19efb7cd30d927d673b3658563c4959ca6f0','Nick Wellnhofer','avoid reparsing in xmlparsestarttag2  the code in xmlparsestarttag2 must handle the case that the input buffer was grown and reallocated which can invalidate pointers to attribute values. before, this was handled by detecting changes of the input buffer \"base\" pointer and, in case of a change, jumping back to the beginning of the function and reparsing the start tag.  the major problem of this approach is that whether an input buffer is reallocated is nondeterministic, resulting in seemingly random test failures. see the mailing list thread \"runtest mystery bug: name2.xml error case regression test\" from 2012, for example.  if a reallocation was detected, the code also made no attempts to continue parsing in case of errors which makes a difference in the lax \"recover\" mode.  now we store the current input buffer \"base\" pointer for each (not separately allocated) attribute in the namespace uri field, which isn\'t used until later. after the whole start tag was parsed, the pointers to the attribute values are reconstructed using the offset between the new and the old input buffer. this relies on arithmetic on dangling pointers which is technically undefined behavior. but it seems like the easiest and most efficient fix and a similar approach is used in xmlparserinputgrow.  this changes the error output of several tests, typically making it more verbose because we try harder to continue parsing in case of errors.  (another possible solution is to check not only the \"base\" pointer but the size of the input buffer as well. but this would result in even more reparsing.)','name2.xml.err','6','0','6','3','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','83212ff4be122c424312f7a1986ee7c30f3be98c','Nick Wellnhofer','fix expected error output in python tests','xpathleak.py','46','1','0','0','true','false','false','2017-06-01 14:31:28+02:00'),('libxml2','2.9.4','a2b5317834360d8ca4eca23e9a2af554d0d00e1c','Nick Wellnhofer','add .travis.yml  for now this is mainly useful if you work on a fork of the libxml2 mirror on github:      https://github.com/gnome/libxml2  start with two build setups:  - gcc with as many gnu extensions disabled as possible, trying to   emulate a c89 compiler on a posix system.  - clang with asan and ubsan.  the python tests don\'t set an exit code, so travis won\'t detect failures. the same goes for \"make tests\", but we only run \"make check\" anyway.','.travis.yml','17','0','22','0','false','false','false','2017-06-01 14:32:23+02:00'),('libxml2','2.9.4','863b57925a5a2cd45a12ceb935dd82a411ab746e','Nick Wellnhofer','make travis print ubsan stacktraces','.travis.yml','18','0','1','0','false','false','false','2017-06-01 17:53:38+02:00'),('libxml2','2.9.4','7482f41f61d733656d588b4d8c300b1ecdff7f5f','Nick Wellnhofer','check for integer overflow in xmlxpathformatnumber  check for overflow before casting double to int.  found with afl-fuzz and ubsan.','floats','189','0','8','0','false','false','false','2017-06-01 22:00:19+02:00'),('libxml2','2.9.4','7482f41f61d733656d588b4d8c300b1ecdff7f5f','Nick Wellnhofer','check for integer overflow in xmlxpathformatnumber  check for overflow before casting double to int.  found with afl-fuzz and ubsan.','strings','108','0','8','0','false','false','false','2017-06-01 22:00:19+02:00'),('libxml2','2.9.4','7482f41f61d733656d588b4d8c300b1ecdff7f5f','Nick Wellnhofer','check for integer overflow in xmlxpathformatnumber  check for overflow before casting double to int.  found with afl-fuzz and ubsan.','floats','63','0','2','0','false','false','false','2017-06-01 22:00:19+02:00'),('libxml2','2.9.4','7482f41f61d733656d588b4d8c300b1ecdff7f5f','Nick Wellnhofer','check for integer overflow in xmlxpathformatnumber  check for overflow before casting double to int.  found with afl-fuzz and ubsan.','strings','36','0','2','0','false','false','false','2017-06-01 22:00:19+02:00'),('libxml2','2.9.4','7482f41f61d733656d588b4d8c300b1ecdff7f5f','Nick Wellnhofer','check for integer overflow in xmlxpathformatnumber  check for overflow before casting double to int.  found with afl-fuzz and ubsan.','xpath.c','9833','3141','2','1','false','false','false','2017-06-01 22:00:19+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','Makefile.am','1190','0','18','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','parser.c','10363','3524','10','8','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781205.xml','None','None','0','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781205.xml.err','19','0','21','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781361.xml','None','None','0','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781361.xml.err','8','0','13','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','766956.xml','None','None','0','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','766956.xml.err','9','0','9','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','766956.xml.err.rdr','10','0','10','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','runtest.c','3234','670','3','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781205.xml','3','0','3','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','781361.xml','3','0','3','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','766956.xml','2','0','2','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','e26630548e7d138d2c560844c43820b6767251e3','Nick Wellnhofer','fix handling of parameter-entity references  there were two bugs where parameter-entity references could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer.  percent sign in dtd names =========================  the nextl macro used to call xmlparserhandlepereference. when parsing \"complex\" names inside the dtd, this could result in entity expansion which created a new input buffer. the fix is to simply remove the call to xmlparserhandlepereference from the nextl macro. this is safe because no users of the macro require expansion of parameter entities.  - xmlparsenamecomplex - xmlparsencnamecomplex - xmlparsenmtoken  the percent sign is not allowed in names, which are grammatical tokens.  - xmlparseentityvalue  parameter-entity references in entity values are expanded but this happens in a separate step in this function.  - xmlparsesystemliteral  parameter-entity references are ignored in the system literal.  - xmlparseattvaluecomplex - xmlparsechardatacomplex - xmlparsecommentcomplex - xmlparsepi - xmlparsecdsect  parameter-entity references are ignored outside the dtd.  - xmlloadentitycontent  this function is only called from xmlstringlendecodeentities and entities are replaced in a separate step immediately after the function call.  this bug could also be triggered with an internal subset and double entity expansion.  this fixes bug 766956 initially reported by wei lei and independently by chromium\'s clusterfuzz, hanno böck, and marco grassi. thanks to everyone involved.  xmlparsenamecomplex with xml_parse_old10 ========================================  when parsing names inside an expanded parameter entity with the xml_parse_old10 option, xmlparsenamecomplex would call xmlgrow via the grow macro if the input buffer was exhausted. at the end of the parameter entity\'s replacement text, this function would then call xmlpopinput which invalidated the input buffer.  there should be no need to invoke grow in this situation because the buffer is grown periodically every xml_parser_chunk_size characters and, at least for utf-8, in xmlcurrentchar. this also matches the code path executed when xml_parse_old10 is not set.  this fixes bugs 781205 (cve-2017-9049) and 781361 (cve-2017-9050). thanks to marcel böhme and thuan pham for the report.  additional hardening ====================  a separate check was added in xmlparsenamecomplex to validate the buffer size.','766956.dtd','2','0','2','0','true','false','false','2017-06-05 18:38:33+02:00'),('libxml2','2.9.4','932cc9896ab41475d4aa429c27d9afd175959d74','Nick Wellnhofer','fix buffer size checks in xmlsnprintfelementcontent  xmlsnprintfelementcontent failed to correctly check the available buffer space in two locations.  fixes bug 781333 (cve-2017-9047) and bug 781701 (cve-2017-9048).  thanks to marcel böhme and thuan pham for the report.','781333.xml','5','0','5','0','true','false','false','2017-06-05 19:38:19+02:00'),('libxml2','2.9.4','932cc9896ab41475d4aa429c27d9afd175959d74','Nick Wellnhofer','fix buffer size checks in xmlsnprintfelementcontent  xmlsnprintfelementcontent failed to correctly check the available buffer space in two locations.  fixes bug 781333 (cve-2017-9047) and bug 781701 (cve-2017-9048).  thanks to marcel böhme and thuan pham for the report.','781333.xml.err','3','0','3','0','true','false','false','2017-06-05 19:38:19+02:00'),('libxml2','2.9.4','932cc9896ab41475d4aa429c27d9afd175959d74','Nick Wellnhofer','fix buffer size checks in xmlsnprintfelementcontent  xmlsnprintfelementcontent failed to correctly check the available buffer space in two locations.  fixes bug 781333 (cve-2017-9047) and bug 781701 (cve-2017-9048).  thanks to marcel böhme and thuan pham for the report.','781333.xml.err.rdr','5','0','6','0','true','false','false','2017-06-05 19:38:19+02:00'),('libxml2','2.9.4','932cc9896ab41475d4aa429c27d9afd175959d74','Nick Wellnhofer','fix buffer size checks in xmlsnprintfelementcontent  xmlsnprintfelementcontent failed to correctly check the available buffer space in two locations.  fixes bug 781333 (cve-2017-9047) and bug 781701 (cve-2017-9048).  thanks to marcel böhme and thuan pham for the report.','781333.xml','4','0','4','0','true','false','false','2017-06-05 19:38:19+02:00'),('libxml2','2.9.4','932cc9896ab41475d4aa429c27d9afd175959d74','Nick Wellnhofer','fix buffer size checks in xmlsnprintfelementcontent  xmlsnprintfelementcontent failed to correctly check the available buffer space in two locations.  fixes bug 781333 (cve-2017-9047) and bug 781701 (cve-2017-9048).  thanks to marcel böhme and thuan pham for the report.','valid.c','4753','1552','11','9','true','false','false','2017-06-05 19:38:19+02:00'),('libxml2','2.9.4','897dffbae322b46b83f99a607d527058a72c51ed','Nick Wellnhofer','check for integer overflow in memory debug code  fixes bug 783026.  thanks to pranjal jumde for the report.','xmlmemory.c','644','184','21','0','true','false','false','2017-06-06 13:21:14+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','elfgcchack.h','3183','0','0','10','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','parser.h','660','0','1','2','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','xmlIO.h','188','0','0','8','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','xmlerror.h','864','0','0','1','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','parser.c','10359','3523','0','4','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','xmlIO.c','2166','717','5','35','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','030b1f7a27c22f9237eddca49ec5e620b6258d7d','Nick Wellnhofer','revert \"add an xml_parse_noxxe flag to block all entities loading even local\"  this reverts commit 2304078555896cf1638c628f50326aeef6f0e0d0.  the new flag doesn\'t work and the change even broke the xml_parse_nonet option.','xmllint.c','2758','868','0','5','false','false','false','2017-06-06 15:53:42+02:00'),('libxml2','2.9.4','0db8dc9ddcc0b5fb435b869668fb2155d491e245','Nick Wellnhofer','stop parser on unsupported encodings  otherwise, the push parser can loop infinitely in recover mode.  found with libfuzzer.','parserInternals.c','1318','391','3','1','false','false','false','2017-06-07 19:30:56+02:00'),('libxml2','2.9.4','362b32293487ece0dc76b9df29c59e25c0712432','Nick Wellnhofer','fix memory leak in xmlbufattrserializetxtcontent  the serializer sets doc->encoding to a temporary value and restores the original value when it\'s done. this overwrites the encoding value set in xmlbufattrserializetxtcontent, causing a memory leak.  don\'t mess with doc->encoding if invalid utf-8 is encountered.  found with libfuzzer and asan.','xmlsave.c','1841','603','0','5','true','false','false','2017-06-07 19:58:20+02:00'),('libxml2','2.9.4','94691dc884d1a8ada39f073408b4bb92fe7fe882','Daniel Veillard','fix null pointer deref in xmldumpelementcontent  can only be triggered in recovery mode.  fixes bug 758422 (cve-2017-5969).','valid.c','4757','1556','14','10','true','false','false','2017-06-07 19:58:26+02:00'),('libxml2','2.9.4','8c82f5deeba9d6ecf85f2a0aa9c967320cc6c13c','Nick Wellnhofer','fix memory leak in xmlstringlengetnodelist  avoid expanding the entity recursively. use the same prevention mechanism as in xmlstringgetnodelist.  xmlstringgetnodelist on the other hand wasn\'t fixing up the \'last\' pointer.  i think the memory leak can only be triggered in recovery mode.  found with libfuzzer and asan.','tree.c','6375','2430','4','0','true','false','false','2017-06-07 19:58:26+02:00'),('libxml2','2.9.4','92b9e8c8b3787068565a1820ba575d042f9eec66','Nick Wellnhofer','fix type confusion in xmlvalidateonenamespace  comment out code that casts xmlnsptr to xmlattrptr. id types on namespace declarations make no practical sense anyway.  fixes bug 780228.  found with libfuzzer and asan.','valid.c','4757','1557','7','0','true','false','false','2017-06-07 20:26:32+02:00'),('libxml2','2.9.4','45ce1ee3994b73e30b8e2bda9dbfbb99e5347b66','Nick Wellnhofer','add todo comment in xmlswitchencoding  it would be nice if we could recover from unsupported encodings in external entities.','parserInternals.c','1318','391','5','0','false','false','false','2017-06-10 17:32:44+02:00'),('libxml2','2.9.4','91e549678019a14cb6df4a1b58ce5681d0b16264','Nick Wellnhofer','fix xmlbuildrelativeuri for uris starting with \'./\'  if the relative uri started with \'./\', the \'pos\' index was increased which also affected indexing into the base path. aside from producing wrong results, this could also lead to a heap overread of the base path buffer. the data read from beyond the buffer was only compared to some char values, so this is mostly harmless.  inside libxml2, xmlbuildrelativeuri is only called from xinclude.c.  found with libfuzzer and asan.','uri.c','1528','584','17','15','true','false','false','2017-06-10 17:41:42+02:00'),('libxml2','2.9.4','94f6ce838c6a903ef5d0251f061a3af1816b4c50','Nick Wellnhofer','allow zero sized memory input buffers  useful for a fuzz target i\'m working on.','buf.c','755','240','1','1','false','false','false','2017-06-10 17:42:04+02:00'),('libxml2','2.9.4','94f6ce838c6a903ef5d0251f061a3af1816b4c50','Nick Wellnhofer','allow zero sized memory input buffers  useful for a fuzz target i\'m working on.','xmlIO.c','2166','717','2','2','false','false','false','2017-06-10 17:42:04+02:00'),('libxml2','2.9.4','bedbef806531543712cf671e8805f4badf1a22ca','Nick Wellnhofer','fix memory leak in xmlparseentitydecl error path  when parsing the entity value, it can happen that an external entity with an unsupported encoding is loaded and the parser is stopped. this would lead to a memory leak.  a custom sax callback could also stop the parser.  found with libfuzzer and asan.','parser.c','10358','3524','8','8','true','false','false','2017-06-10 17:42:52+02:00'),('libxml2','2.9.4','f9e7997e803457b714352c4d51a96104ae298d94','Nick Wellnhofer','reset parser input pointers on encoding failure  call xmlbufresetinput before bailing out if switching the encoding fails. otherwise, the input pointers are left in an invalid state. this would typically lead to an internal error in xmlgrow but could also cause other unforeseen problems.','parserInternals.c','1318','391','1','1','true','false','false','2017-06-10 17:50:27+02:00'),('libxml2','2.9.4','4ba8cc856bd2d11f3c500a27bca7b56d826a19b6','Nick Wellnhofer','remove useless check in xmlparseattributelistdecl  since we already successfully parsed the attribute name and other items, it is guaranteed that we made progress in the input stream.  comparing the input pointer to a previous value also looks fragile to me. what if the input buffer was reallocated and the new \"cur\" pointer happens to be the same as the old one? there are a couple of similar checks which also take \"consumed\" into account. this seems to be safer but i\'m not convinced that it couldn\'t lead to false alarms in rare situations.','parser.c','10348','3521','0','10','false','false','false','2017-06-10 17:52:59+02:00'),('libxml2','2.9.4','fb2f518cc61239a4010612c9307a3fd7d13c996c','Nick Wellnhofer','fix potential infinite loop in xmlstringlendecodeentities  make sure that xmlparsestringpereference advances the \"str\" pointer even if the parser was stopped. otherwise xmlstringlendecodeentities can loop infinitely.','parser.c','10349','3521','1','0','true','false','false','2017-06-10 18:00:55+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','parserInternals.c','1331','393','28','27','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_1.xml','None','None','0','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_1.xml.err','7','0','7','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_1.xml.str','4','0','4','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_2.xml','None','None','0','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_2.xml.err','7','0','7','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_2.xml.str','5','0','5','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_3.xml','None','None','0','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_3.xml.err','7','0','7','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_3.xml.str','5','0','5','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_1.xml','1','0','1','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_2.xml','1','0','1','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','79c8a6b10593c709fd3ceea9deef35c1a3da70f0','Nick Wellnhofer','print error messages for truncated utf-8 sequences  before, truncated utf-8 sequences at the end of a file were treated as eof. create an error message containing the offending bytes.  xmlstringcurrentchar would also print characters from the input stream, not the string it\'s working on.','partial_utf8_3.xml','1','0','1','0','true','false','false','2017-06-10 18:11:58+02:00'),('libxml2','2.9.4','f39e3be0dd9b3aa3ec47ff339b4934c16f6e5156','Nick Wellnhofer','fix sanity check in htmlparsenamecomplex  - (cur - len) can overflow. - throw an internal error.  fixes bug 780077.','HTMLparser.c','4768','1393','6','2','true','false','false','2017-06-11 12:43:37+02:00'),('libxml2','2.9.4','9a366a3748389fb62a49c3e9d24458274fb426f3','Nick Wellnhofer','fix compiler warning in htmlparseelementinternal','HTMLparser.c','4768','1393','1','1','true','false','false','2017-06-11 12:43:59+02:00'),('libxml2','2.9.4','ed48d65b4d6c5cec7be035ad5eebeba873b4b955','Nick Wellnhofer','fix copy-paste errors in error messages  thanks to david kilzer for the review.','xmlmemory.c','644','184','3','3','true','false','false','2017-06-11 17:12:21+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-entity.html','2','0','2','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-entity.html.err','3','0','3','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-entity.html.sax','12','0','12','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-tag.html','2','0','2','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-tag.html.err','3','0','3','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-tag.html.sax','10','0','10','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','runtest.c','3238','671','12','7','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-entity.html','1','0','1','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','85c112a0828a13aadf9fa806a38dfb185e1ddd4c','David Kilzer','add test cases for bug 758518  test/html/758518-entity.html exposed a bug in pushparsetest() in runtest.c which assumed that an input file was at least 4 bytes long. that test case is only 3 bytes, so we now take the minimum of 4 bytes or the length of the test input.  we also now use \'chunksize\' in place of the hard-coded value \'1024\' later in the function.','758518-tag.html','1','0','1','0','true','false','false','2017-06-12 18:26:11+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','HTMLparser.c','4769','1393','1','0','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','53867.html.sax','26','0','5','5','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','758605.html.sax','14','0','1','1','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','Down.html.sax','36','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','attrents.html.sax','21','0','3','3','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','autoclose.html.sax','11','0','1','1','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','cf_128.html.sax','68','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','doc2.htm.sax','68','0','7','7','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','doc3.htm.sax','2873','0','9','9','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','entities.html.sax','27','0','1','1','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','entities2.html.sax','23','0','2','2','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','fp40.htm.sax','395','0','8','8','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','html5_enc.html.sax','30','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','liclose.html.sax','37','0','5','5','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','lt.html.sax','19','0','5','5','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','noscript.html.sax','38','0','7','7','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','pre.html.sax','23','0','3','3','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','python.html.sax','29','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','reg1.html.sax','36','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','reg2.html.sax','41','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','reg3.html.sax','45','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','reg4.html.sax','43','0','6','6','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','repeat.html.sax','14','0','1','1','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','script.html.sax','32','0','4','4','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','script2.html.sax','49','0','7','7','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','test2.html.sax','142','0','4','4','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','test3.html.sax','228','0','5','5','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','utf8bug.html.sax','732','0','8','8','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','0b2d5c48e3e0c16e434450057927ad4aa52f9f5c','Nick Wellnhofer','initialize keepblanks in html parser  this caused failures in the html push tests but the fix required to change the expected output of the html sax tests.','wired.html.sax','2738','0','2','2','true','false','false','2017-06-12 19:11:54+02:00'),('libxml2','2.9.4','67f9f9d6c836bb5ae5085860dc543324f8f08b6f','Nick Wellnhofer','misc fixes for \'make tests\'  - silence test output. - clean up after doc/examples tests. - adjust expected output for script tests. - add missing results for relaxng/pattern3  there are still two test failures i can\'t comment on:  - regexp/bug316338 - schemas/any4_0','Makefile.am','1190','0','8','8','true','false','false','2017-06-12 19:46:56+02:00'),('libxml2','2.9.4','67f9f9d6c836bb5ae5085860dc543324f8f08b6f','Nick Wellnhofer','misc fixes for \'make tests\'  - silence test output. - clean up after doc/examples tests. - adjust expected output for script tests. - add missing results for relaxng/pattern3  there are still two test failures i can\'t comment on:  - regexp/bug316338 - schemas/any4_0','Makefile.am','120','0','27','16','true','false','false','2017-06-12 19:46:56+02:00'),('libxml2','2.9.4','67f9f9d6c836bb5ae5085860dc543324f8f08b6f','Nick Wellnhofer','misc fixes for \'make tests\'  - silence test output. - clean up after doc/examples tests. - adjust expected output for script tests. - add missing results for relaxng/pattern3  there are still two test failures i can\'t comment on:  - regexp/bug316338 - schemas/any4_0','pattern3_err','1','0','1','0','true','false','false','2017-06-12 19:46:56+02:00'),('libxml2','2.9.4','67f9f9d6c836bb5ae5085860dc543324f8f08b6f','Nick Wellnhofer','misc fixes for \'make tests\'  - silence test output. - clean up after doc/examples tests. - adjust expected output for script tests. - add missing results for relaxng/pattern3  there are still two test failures i can\'t comment on:  - regexp/bug316338 - schemas/any4_0','pattern3_valid','None','None','0','0','true','false','false','2017-06-12 19:46:56+02:00'),('libxml2','2.9.4','67f9f9d6c836bb5ae5085860dc543324f8f08b6f','Nick Wellnhofer','misc fixes for \'make tests\'  - silence test output. - clean up after doc/examples tests. - adjust expected output for script tests. - add missing results for relaxng/pattern3  there are still two test failures i can\'t comment on:  - regexp/bug316338 - schemas/any4_0','set3.err','3','0','1','1','true','false','false','2017-06-12 19:46:56+02:00'),('libxml2','2.9.4','3939178e4cb797417ff033b1e04ab4b038e224d9','Nick Wellnhofer','treat uris with scheme as absolute in c14n  fixes bug 783656.','c14n.c','1242','360','0','7','true','false','false','2017-06-12 20:19:02+02:00'),('libxml2','2.9.4','01a4b81a036228d7c692f29e5f306ff0d510597f','Nick Wellnhofer','support catalog and threads tests under --without-sax1','runtest.c','3239','672','6','2','false','false','false','2017-06-16 21:27:47+02:00'),('libxml2','2.9.4','01a4b81a036228d7c692f29e5f306ff0d510597f','Nick Wellnhofer','support catalog and threads tests under --without-sax1','testThreads.c','162','29','5','1','false','false','false','2017-06-16 21:27:47+02:00'),('libxml2','2.9.4','3f0627a1ee854dc965bf61dd6466a798b80cf088','David Kilzer','fix duplicate sax callbacks for entity content  reset \'was_checked\' to prevent entity from being parsed twice and sax callbacks being invoked twice if xml_parse_noent was set.  this regressed in version 2.9.3 and caused problems with webkit.  fixes bug 760367.','parser.c','10350','3521','3','0','true','false','false','2017-06-16 21:30:42+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','Makefile.am','1205','0','15','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att1.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att10.sax2','57','0','57','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att11.sax2','20','0','20','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att2.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att3.sax2','8','0','8','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att4.sax2','36976','0','36976','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att5.sax2','149','0','149','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att6.sax2','20','0','20','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att7.sax2','23','0','23','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att8.sax2','29','0','29','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','att9.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','attrib.xml.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','badcomment.xml.sax2','24','0','24','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','bigentname.xml.sax2','15','0','15','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','bigname.xml.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','bigname2.xml.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','cdata-2-byte-UTF-8.xml.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','cdata-3-byte-UTF-8.xml.sax2','23','0','23','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','cdata-4-byte-UTF-8.xml.sax2','28','0','28','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','cdata.sax2','10','0','10','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','cdata2.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment.xml.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment2.xml.sax2','13','0','13','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment3.xml.sax2','167','0','167','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment4.xml.sax2','8','0','8','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment5.xml.sax2','10','0','12','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','comment6.xml.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav1.sax2','81','0','81','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav10.sax2','12','0','12','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav11.sax2','62','0','62','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav12.sax2','6','0','6','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav13.sax2','46','0','46','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav15.sax2','76','0','76','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav16.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav17.sax2','78','0','78','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav18.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav19.sax2','62','0','62','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav2.sax2','84','0','84','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav3.sax2','63','0','63','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav4.sax2','51','0','51','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav5.sax2','54','0','54','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav6.sax2','66','0','66','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav7.sax2','60','0','60','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav8.sax2','54','0','54','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dav9.sax2','70','0','70','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','defattr.xml.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','defattr2.xml.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dia1.sax2','323','0','323','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dia2.sax2','323','0','323','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd1.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd10.sax2','21','0','21','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd11.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd12.sax2','15','0','15','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd13.sax2','10','0','10','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd2.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd3.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd4.sax2','8','0','8','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd5.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd6.sax2','19','0','19','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd7.sax2','16','0','16','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd8.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','dtd9.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ebcdic_566012.xml.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','emptycdata.xml.sax2','10','0','10','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent1.sax2','15','0','15','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent10.sax2','30','0','30','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent11.sax2','12','0','12','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent12.sax2','20','0','20','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent13.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent2.sax2','37','0','37','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent3.sax2','12','0','12','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent4.sax2','16','0','16','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent5.sax2','13','0','13','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent6.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent7.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent8.sax2','35','0','35','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent9.sax2','308','0','308','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ent_738805.xml.sax2','51','0','54','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','eve.xml.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','intsubset.xml.sax2','9','0','9','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','intsubset2.xml.sax2','283','0','286','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','isolat1.sax2','7','0','7','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','isolat2.sax2','34','0','35','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','isolat3.sax2','29','0','29','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','japancrlf.xml.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns2.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns3.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns4.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns5.sax2','11','0','11','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns6.sax2','15','0','15','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','ns7.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','nsclean.xml.sax2','13','0','13','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','p3p.sax2','65','0','65','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','pi.xml.sax2','17','0','17','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','pi2.xml.sax2','13','0','13','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','rdf1.sax2','186','0','186','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','rdf2.sax2','191','0','191','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','slashdot.rdf.sax2','209','0','221','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','slashdot.xml.sax2','517','0','517','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','slashdot16.xml.sax2','721','0','721','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','svg1.sax2','613','0','613','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','svg2.sax2','189','0','189','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','svg3.sax2','2407','0','2407','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','title.xml.sax2','6','0','6','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','tstblanks.xml.sax2','6','0','6','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','utf16bebom.xml.sax2','8','0','8','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','utf16bom.xml.sax2','7','0','7','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','utf16lebom.xml.sax2','8','0','8','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','utf8bom.xml.sax2','5','0','5','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','wap.xml.sax2','86','0','87','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','winblanks.xml.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','wml.xml.sax2','30','0','31','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','xhtml1.sax2','103','0','104','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','xhtmlcomp.sax2','23','0','23','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','xml1.sax2','22','0','22','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','xml2.sax2','18','0','18','0','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','runtest.c','3260','674','27','10','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','runtest.c','3260','674','27','10','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','dbaab1f3693bfa3bf27772371542f321f47539fd','Nick Wellnhofer','test sax2 callbacks with entity substitution  this detects regressions like bug 760367.','runtest.c','3260','674','27','10','true','false','false','2017-06-16 21:38:57+02:00'),('libxml2','2.9.4','03904159f8ada9f18ca110de7f0fc24b994b315d','Nick Wellnhofer','merge duplicate code paths handling pe references  xmlparsepereference is essentially a subset of xmlparserhandlepereference, so make xmlparserhandlepereference call xmlparsepereference. the code paths in these functions differed slighty, but the code from xmlparserhandlepereference seems more solid and tested.','parser.c','10284','3495','41','148','false','false','false','2017-06-17 13:22:37+02:00'),('libxml2','2.9.4','46dc989080d5d6b7854de8fb3cb3de55ecbf0621','Nick Wellnhofer','don\'t switch encoding for internal parameter entities  this is only needed for external entities. trying to switch the encoding for internal entities could also cause a memory leak in recovery mode.','parser.c','10285','3495','28','26','false','false','false','2017-06-17 13:23:40+02:00'),('libxml2','2.9.4','46dc989080d5d6b7854de8fb3cb3de55ecbf0621','Nick Wellnhofer','don\'t switch encoding for internal parameter entities  this is only needed for external entities. trying to switch the encoding for internal entities could also cause a memory leak in recovery mode.','parserInternals.c','1331','392','1','5','false','false','false','2017-06-17 13:23:40+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','parser.c','10315','3498','82','48','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','754946.xml.err','18','0','13','12','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','754946.xml.str','4','0','2','2','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','781205.xml.err','12','0','7','11','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','t8.xml.err','18','0','9','7','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','t8.xml.err.rdr','19','0','11','3','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','t8a.xml.err','18','0','9','7','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','t8a.xml.err.rdr','19','0','11','3','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','5f440d8cadea9f0d87fd3849366445029d47f528','Nick Wellnhofer','rework entity boundary checks  make sure to finish all entities in the internal subset. nevertheless, readd a sanity check in xmlparsestarttag2 that was lost in my previous commit. also add a sanity check in xmlpopinput. popping an input unexpectedly was the source of many recent memory bugs. the check doesn\'t mitigate such issues but helps with diagnosis.  always base entity boundary checks on the input id, not the input pointer. the pointer could have been reallocated to the old address.  always throw a well-formedness error if a boundary check fails. in a few places, a validity error was thrown.  fix a few error codes and improve indentation.','754946.xml','4','0','4','1','true','false','false','2017-06-17 13:25:53+02:00'),('libxml2','2.9.4','1ce1f7852ce4c131c22c147df28d66835835d5de','Nick Wellnhofer','fix invalid-source-encoding warnings in testwriter.c  use hex escapes instead of binary data in source file.','testWriter.c','828','145','16','16','true','false','false','2017-06-17 14:11:03+02:00'),('libxml2','2.9.4','81c01ee9ff1493a92dfb3e679a0d6f45d59622aa','Nick Wellnhofer','fix unused-parameter warnings','gjobread.c','197','58','1','1','true','false','false','2017-06-17 14:12:53+02:00'),('libxml2','2.9.4','81c01ee9ff1493a92dfb3e679a0d6f45d59622aa','Nick Wellnhofer','fix unused-parameter warnings','runtest.c','3261','674','2','1','true','false','false','2017-06-17 14:12:53+02:00'),('libxml2','2.9.4','81c01ee9ff1493a92dfb3e679a0d6f45d59622aa','Nick Wellnhofer','fix unused-parameter warnings','xmlIO.c','2166','717','1','1','true','false','false','2017-06-17 14:12:53+02:00'),('libxml2','2.9.4','1a595cd17347e0475ab57038ba4a11f1bf41b40f','Nick Wellnhofer','fix cast-align warnings  - suppress warnings in xmlmemory.c by casting to \'void *\'. - remove unneeded cast in xmlschemas.c that caused a macro precedence   error. - add dummy fields to short structs in xmlschemas.c. this increases the   size of the structs, but i can\'t see a better solution without using   c11\'s _alignof operator.  there are still a couple of cast-align warnings in encoding.c. these are legitimate portability issues that can\'t be fixed without reworking the conversion functions.','xmlmemory.c','644','184','1','1','true','false','false','2017-06-17 14:17:27+02:00'),('libxml2','2.9.4','1a595cd17347e0475ab57038ba4a11f1bf41b40f','Nick Wellnhofer','fix cast-align warnings  - suppress warnings in xmlmemory.c by casting to \'void *\'. - remove unneeded cast in xmlschemas.c that caused a macro precedence   error. - add dummy fields to short structs in xmlschemas.c. this increases the   size of the structs, but i can\'t see a better solution without using   c11\'s _alignof operator.  there are still a couple of cast-align warnings in encoding.c. these are legitimate portability issues that can\'t be fixed without reworking the conversion functions.','xmlschemas.c','18761','4691','3','1','true','false','false','2017-06-17 14:17:27+02:00'),('libxml2','2.9.4','629e47e7a28264627ac5de95a3aa450d6b46b837','Nick Wellnhofer','fix empty-body warning in nanohttp.c','nanohttp.c','1137','385','2','1','true','false','false','2017-06-17 14:56:53+02:00'),('libxml2','2.9.4','1f09aea26d1a0b7343dcb5185a19aa7fa896807f','Nick Wellnhofer','fix compiler warnings in threads.c  use \'#pragma weak\' to declare weak functions.','threads.c','533','173','17','37','true','false','false','2017-06-17 15:05:34+02:00'),('libxml2','2.9.4','b9b4b6b51339805ce4d1f24de88e5a4d0226cbe2','Nick Wellnhofer','fix doc/examples/index.py  in my previous commit that silenced some test output i didn\'t realize that doc/examples/makefile.am was autogenerated.  also make index.py output deterministic by sorting the glob results.','Makefile.am','110','0','1','11','true','false','false','2017-06-17 15:43:29+02:00'),('libxml2','2.9.4','b9b4b6b51339805ce4d1f24de88e5a4d0226cbe2','Nick Wellnhofer','fix doc/examples/index.py  in my previous commit that silenced some test output i didn\'t realize that doc/examples/makefile.am was autogenerated.  also make index.py output deterministic by sorting the glob results.','examples.xml','751','0','256','256','true','true','false','2017-06-17 15:43:29+02:00'),('libxml2','2.9.4','b9b4b6b51339805ce4d1f24de88e5a4d0226cbe2','Nick Wellnhofer','fix doc/examples/index.py  in my previous commit that silenced some test output i didn\'t realize that doc/examples/makefile.am was autogenerated.  also make index.py output deterministic by sorting the glob results.','index.py','274','65','4','3','true','false','false','2017-06-17 15:43:29+02:00'),('libxml2','2.9.4','988a5a3b6b1c48ea5c3b4ab81a4338987018803c','Nick Wellnhofer','build test programs only when needed  add test programs to \'check_programs\' instead of \'noinst_programs\'.  fixes bug 760457.','Makefile.am','1206','0','6','5','true','false','false','2017-06-17 15:44:50+02:00'),('libxml2','2.9.4','988a5a3b6b1c48ea5c3b4ab81a4338987018803c','Nick Wellnhofer','build test programs only when needed  add test programs to \'check_programs\' instead of \'noinst_programs\'.  fixes bug 760457.','Makefile.am','110','0','3','3','true','false','false','2017-06-17 15:44:50+02:00'),('libxml2','2.9.4','988a5a3b6b1c48ea5c3b4ab81a4338987018803c','Nick Wellnhofer','build test programs only when needed  add test programs to \'check_programs\' instead of \'noinst_programs\'.  fixes bug 760457.','index.py','274','65','5','5','true','false','false','2017-06-17 15:44:50+02:00'),('libxml2','2.9.4','988a5a3b6b1c48ea5c3b4ab81a4338987018803c','Nick Wellnhofer','build test programs only when needed  add test programs to \'check_programs\' instead of \'noinst_programs\'.  fixes bug 760457.','Makefile.am','5','0','1','1','true','false','false','2017-06-17 15:44:50+02:00'),('libxml2','2.9.4','988a5a3b6b1c48ea5c3b4ab81a4338987018803c','Nick Wellnhofer','build test programs only when needed  add test programs to \'check_programs\' instead of \'noinst_programs\'.  fixes bug 760457.','build_libxml.com','273','0','3','3','true','false','false','2017-06-17 15:44:50+02:00'),('libxml2','2.9.4','576912fa04e3cab5876d94a99a9a2bb60b5fd0d1','Nick Wellnhofer','make html parser functions take const pointers  the \'cur\' parameter of htmlparsedoc and htmlsaxparsedoc should be \'const xmlchar *\'.  fixes bug 770650.','HTMLparser.c','4770','1393','3','2','true','false','false','2017-06-17 15:59:13+02:00'),('libxml2','2.9.4','576912fa04e3cab5876d94a99a9a2bb60b5fd0d1','Nick Wellnhofer','make html parser functions take const pointers  the \'cur\' parameter of htmlparsedoc and htmlsaxparsedoc should be \'const xmlchar *\'.  fixes bug 770650.','HTMLparser.h','196','0','2','2','true','false','false','2017-06-17 15:59:13+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','ChangeLog','794','0','9','9','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','SAX2.c','1987','678','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','buf.c','755','240','2','2','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','debugXML.c','2575','785','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','debugXML.c','2575','785','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','dict.c','759','271','3','3','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','news.html','2514','0','7','7','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','xml.html','5917','0','8','8','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','error.c','647','229','2','2','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','hash.c','681','215','2','2','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','schemasInternals.h','308','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','xmlreader.h','298','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','libxml.m4','161','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','list.c','403','100','2','2','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','schemasInternals.rpgle','986','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','xmlreader.rpgle','555','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','parser.c','10315','3498','3','3','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','name2.xml.err','6','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','name2.xml.str','7','0','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','valid.c','4757','1557','3','3','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','xmlschemas.c','18761','4691','17','17','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','8bbe4508ef2a97110eac02f16782678c38ea97af','Nick Wellnhofer','spelling and grammar fixes  fixes bug 743172, bug 743489, bug 769632, bug 782400 and a few other misspellings.','xmlstring.c','567','210','1','1','true','false','false','2017-06-17 16:34:23+02:00'),('libxml2','2.9.4','5a0ae66d7202619d493985537818e052d9d1239f','Nick Wellnhofer','documentation fixes  fixes bug 347465, bug 599433, bug 624550, bug 698253.','tree.c','6375','2430','3','3','true','false','false','2017-06-18 17:58:38+02:00'),('libxml2','2.9.4','5a0ae66d7202619d493985537818e052d9d1239f','Nick Wellnhofer','documentation fixes  fixes bug 347465, bug 599433, bug 624550, bug 698253.','xmlIO.c','2166','717','1','1','true','false','false','2017-06-18 17:58:38+02:00'),('libxml2','2.9.4','5a0ae66d7202619d493985537818e052d9d1239f','Nick Wellnhofer','documentation fixes  fixes bug 347465, bug 599433, bug 624550, bug 698253.','xmlreader.c','3868','1286','1','1','true','false','false','2017-06-18 17:58:38+02:00'),('libxml2','2.9.4','5a0ae66d7202619d493985537818e052d9d1239f','Nick Wellnhofer','documentation fixes  fixes bug 347465, bug 599433, bug 624550, bug 698253.','xmlstring.c','567','210','4','3','true','false','false','2017-06-18 17:58:38+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c  introduce static functions xmlencinputchunk and xmlencoutputchunk that handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c  introduce static functions xmlencinputchunk and xmlencoutputchunk that handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','c9ccbd6a6dc7b8dbed3f401698290b9513cd9d98','Nick Wellnhofer','deduplicate code in encoding.c  introduce static functions xmlencinputchunk and xmlencoutputchunk that handle the internal/iconv/icu branching.','encoding.c','2811','657','153','312','false','true','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','e5107772ff317875bc08b859900254de058de368','Nick Wellnhofer','fix pathological performance when outputting charrefs  if a character can\'t be represented in the output encoding, it is converted to a character reference. this used to to replace the character in the input stream by calling xmlbufaddhead or xmlbufferaddhead. these functions shifted the entire input array around, leading to quadratic performance when converting a run of non-representable characters. this is most pronounced when dumping to memory.  output the charref directly instead.  found with libfuzzer.','encoding.c','2808','657','59','70','true','false','false','2017-06-19 16:06:21+02:00'),('libxml2','2.9.4','24246c762693c7237b0baaba85111a0326efa867','Nick Wellnhofer','fix xmlhaltparser  pop all extra input streams before resetting the input. otherwise, a call to xmlpopinput could make input available again.  also set input->end to input->cur.  changes the test output for some error tests. unfortunately, some fuzzed test cases were added to the test suite without manual cleanup. this makes it almost impossible to review the impact of later changes on the test output.','parser.c','10318','3499','3','0','true','false','false','2017-06-20 13:15:43+02:00'),('libxml2','2.9.4','24246c762693c7237b0baaba85111a0326efa867','Nick Wellnhofer','fix xmlhaltparser  pop all extra input streams before resetting the input. otherwise, a call to xmlpopinput could make input available again.  also set input->end to input->cur.  changes the test output for some error tests. unfortunately, some fuzzed test cases were added to the test suite without manual cleanup. this makes it almost impossible to review the impact of later changes on the test output.','759573-2.xml.err','54','0','6','6','true','false','false','2017-06-20 13:15:43+02:00'),('libxml2','2.9.4','24246c762693c7237b0baaba85111a0326efa867','Nick Wellnhofer','fix xmlhaltparser  pop all extra input streams before resetting the input. otherwise, a call to xmlpopinput could make input available again.  also set input->end to input->cur.  changes the test output for some error tests. unfortunately, some fuzzed test cases were added to the test suite without manual cleanup. this makes it almost impossible to review the impact of later changes on the test output.','759573.xml.err','33','0','10','7','true','false','false','2017-06-20 13:15:43+02:00'),('libxml2','2.9.4','aa267cd12752f2ff94b0f0c01e2adc30a7913ad4','Nick Wellnhofer','simplify handling of parameter entity references  there are only two places where parameter entity references must be handled. for the internal subset in xmlparseinternalsubset. for the external subset or content from other external pes in xmlskipblankchars.  make sure that xmlskipblankchars skips over sequences of pes and whitespace. rely on xmlskipblankchars instead of calling xmlparsepereference directly when in the external subset or a conditional section.  xmlparserhandlepereference is unused now.','parser.c','10310','3494','21','35','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','aa267cd12752f2ff94b0f0c01e2adc30a7913ad4','Nick Wellnhofer','simplify handling of parameter entity references  there are only two places where parameter entity references must be handled. for the internal subset in xmlparseinternalsubset. for the external subset or content from other external pes in xmlskipblankchars.  make sure that xmlskipblankchars skips over sequences of pes and whitespace. rely on xmlskipblankchars instead of calling xmlparsepereference directly when in the external subset or a conditional section.  xmlparserhandlepereference is unused now.','parserInternals.c','1329','390','0','2','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','453dff1e3b6f7aa724c4996a375c51df6d95abc4','Nick Wellnhofer','remove unnecessary calls to xmlpopinput  it\'s enough if xmlpopinput is called from xmlskipblankchars. since the replacement text of a parameter entity is surrounded with space characters, that\'s the only place where the replacement can end in a well-formed document.  this is also required to get rid of the \"blanks wrapper\" hack.','parser.c','10285','3472','20','78','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','453dff1e3b6f7aa724c4996a375c51df6d95abc4','Nick Wellnhofer','remove unnecessary calls to xmlpopinput  it\'s enough if xmlpopinput is called from xmlskipblankchars. since the replacement text of a parameter entity is surrounded with space characters, that\'s the only place where the replacement can end in a well-formed document.  this is also required to get rid of the \"blanks wrapper\" hack.','parserInternals.c','1322','386','2','9','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','d9e43c7db51ed97cfff6a2a065b6851bcbac59ac','Nick Wellnhofer','make sure not to call is_blank_ch when parsing the dtd  this is required to get rid of the \"blanks wrapper\" hack. checking the return value of xmlskipblankchars is more efficient, too.','parser.c','10257','3471','32','61','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','parser.c','10215','3463','9','56','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','754946.xml.err','18','0','3','3','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','759573-2.xml.err','54','0','21','21','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','759573.xml.err','33','0','6','6','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','781205.xml.err','12','0','3','3','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','766956.xml.err','9','0','3','3','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','766956.xml.err.rdr','10','0','3','3','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','t8.xml.err','18','0','9','9','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','t8.xml.err.rdr','19','0','9','9','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','t8a.xml.err','18','0','9','9','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','872fea9485bd715aeccdaef64cda8a4cc05bd9c5','Nick Wellnhofer','get rid of \"blanks wrapper\" for parameter entities  now that replacement of parameter entities goes exclusively through xmlskipblankchars, we can account for the surrounding space characters there and remove the \"blanks wrapper\" hack.','t8a.xml.err.rdr','19','0','9','9','false','false','false','2017-06-20 13:19:47+02:00'),('libxml2','2.9.4','3eef3f39a646f279e88cdb2fc45b6b17211fcd74','Nick Wellnhofer','fix null deref in xmlparseexternalentityprivate  if called from xmlparseexternalentity, oldctxt is null which leads to a null deref if an error occurs. this only affects external code that calls xmlparseexternalentity.  patch from david kilzer with minor changes.  fixes bug 780159.','parser.c','10215','3464','1','1','true','false','false','2017-06-20 16:13:57+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','f435365b59dd018383474df895e7b8e230f0000b','Nick Wellnhofer','send xmllint usage error to stderr  fixes bug 781459.','xmllint.c','2758','868','78','78','true','false','false','2017-07-04 18:51:28+02:00'),('libxml2','2.9.4','52ceced6e7038a6bff4960f3e5e729ed01448a41','Nick Wellnhofer','fix infinite loops with push parser in recovery mode  make sure that the input pointer advances in case of errors. otherwise, the push parser can loop infinitely.  found with libfuzzer.','parser.c','10215','3464','2','2','true','false','false','2017-07-04 18:51:29+02:00'),('libxml2','2.9.4','8a0c66986e68c1c23fc3bb421b73465937c803b2','Nick Wellnhofer','fix null pointer deref in xmlfaparsecharclassesc  found with libfuzzer.','xmlregexp.c','5839','1975','2','1','true','false','false','2017-07-04 18:51:29+02:00'),('libxml2','2.9.4','fb56f80eeffde4b79a49667c3f0727181d57aeb3','David Kilzer','heap-buffer-overflow read of size 1 in xmlfaparseposchargroup  credit to oss-fuzz.  add a check to xmlfaparsecharrange() for the end of the buffer to prevent reading past the end of it.  this fixes bug 784017.','xmlregexp.c','5839','1976','1','1','true','false','false','2017-07-04 18:51:29+02:00'),('libxml2','2.9.4','899a5d9f0ed13b8e32449a08a361e0de127dd961','Nick Wellnhofer','detect infinite recursion in parameter entities  when expanding a parameter entity in a dtd, infinite recursion could lead to an infinite loop or memory exhaustion.  thanks to wei lei for the first of many reports.  fixes bug 759579.','parser.c','10224','3468','10','1','true','false','false','2017-07-25 15:21:12+02:00'),('libxml2','2.9.4','899a5d9f0ed13b8e32449a08a361e0de127dd961','Nick Wellnhofer','detect infinite recursion in parameter entities  when expanding a parameter entity in a dtd, infinite recursion could lead to an infinite loop or memory exhaustion.  thanks to wei lei for the first of many reports.  fixes bug 759579.','759579.xml','None','None','0','0','true','false','false','2017-07-25 15:21:12+02:00'),('libxml2','2.9.4','899a5d9f0ed13b8e32449a08a361e0de127dd961','Nick Wellnhofer','detect infinite recursion in parameter entities  when expanding a parameter entity in a dtd, infinite recursion could lead to an infinite loop or memory exhaustion.  thanks to wei lei for the first of many reports.  fixes bug 759579.','759579.xml.err','6','0','6','0','true','false','false','2017-07-25 15:21:12+02:00'),('libxml2','2.9.4','899a5d9f0ed13b8e32449a08a361e0de127dd961','Nick Wellnhofer','detect infinite recursion in parameter entities  when expanding a parameter entity in a dtd, infinite recursion could lead to an infinite loop or memory exhaustion.  thanks to wei lei for the first of many reports.  fixes bug 759579.','759579.xml.str','7','0','7','0','true','false','false','2017-07-25 15:21:12+02:00'),('libxml2','2.9.4','899a5d9f0ed13b8e32449a08a361e0de127dd961','Nick Wellnhofer','detect infinite recursion in parameter entities  when expanding a parameter entity in a dtd, infinite recursion could lead to an infinite loop or memory exhaustion.  thanks to wei lei for the first of many reports.  fixes bug 759579.','759579.xml','11','0','11','0','true','false','false','2017-07-25 15:21:12+02:00'),('libxml2','2.9.4','d1f90624864c321e38d3a09a014afd56eb438702','Patrick Monnerat','small changes for os/400  os/400 version v5r3 is not supported by ibm anymore. in addition, the iseries system i have here for development has been changed and the new system is not able to compile for an os version lower than v6r1.  thus i made some updates to the libxml2 os400 scripts accordingly:  - oldest supported os version is now v6r1. - adjust ile/rpg wrappers comments. - update copyright year range. - do not log compiler informational messages.','initscript.sh','234','16','2','2','false','false','false','2017-07-27 11:20:02+08:00'),('libxml2','2.9.4','d1f90624864c321e38d3a09a014afd56eb438702','Patrick Monnerat','small changes for os/400  os/400 version v5r3 is not supported by ibm anymore. in addition, the iseries system i have here for development has been changed and the new system is not able to compile for an os version lower than v6r1.  thus i made some updates to the libxml2 os400 scripts accordingly:  - oldest supported os version is now v6r1. - adjust ile/rpg wrappers comments. - update copyright year range. - do not log compiler informational messages.','xmlstring.rpgle','176','0','2','2','false','false','false','2017-07-27 11:20:02+08:00'),('libxml2','2.9.4','d1f90624864c321e38d3a09a014afd56eb438702','Patrick Monnerat','small changes for os/400  os/400 version v5r3 is not supported by ibm anymore. in addition, the iseries system i have here for development has been changed and the new system is not able to compile for an os version lower than v6r1.  thus i made some updates to the libxml2 os400 scripts accordingly:  - oldest supported os version is now v6r1. - adjust ile/rpg wrappers comments. - update copyright year range. - do not log compiler informational messages.','make-src.sh','309','2','1','1','false','false','false','2017-07-27 11:20:02+08:00'),('libxml2','2.9.4','d1f90624864c321e38d3a09a014afd56eb438702','Patrick Monnerat','small changes for os/400  os/400 version v5r3 is not supported by ibm anymore. in addition, the iseries system i have here for development has been changed and the new system is not able to compile for an os version lower than v6r1.  thus i made some updates to the libxml2 os400 scripts accordingly:  - oldest supported os version is now v6r1. - adjust ile/rpg wrappers comments. - update copyright year range. - do not log compiler informational messages.','setup.py','181','3','1','1','false','false','false','2017-07-27 11:20:02+08:00'),('libxml2','2.9.4','27f310d453b7e2e71847e5910a0961753aacdbd1','Daniel Veillard','fix signature of xmlschemaaugmentimportedidc  this is used in a callback which will pass a name, the name is ignored but it\'s best to have the signature of the function match, pointed out by claude petit * xmlschemas.c: fix xmlschemaaugmentimportedidc() signature no functional   change','xmlschemas.c','18761','4691','1','1','true','true','false','2017-07-27 14:06:44+08:00'),('libxml2','2.9.4','3aca7f31cb9901dc3af449e08dda647898bfc1fe','Nick Wellnhofer','fix unwanted warnings when switching encodings  revert part of commit 46dc989 \"don\'t switch encoding for internal parameter entities\" that caused spurious warnings.  fixes bug 786267.','parserInternals.c','1322','387','5','1','true','false','false','2017-08-21 13:09:33+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','entities.c','723','195','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','parser.c','10224','3468','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','tree.c','6375','2430','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xmlIO.c','2167','719','7','2','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xmlmodule.c','209','38','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xmlschemas.c','18761','4691','6','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xmlschemastypes.c','4327','1593','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xpath.c','9833','3141','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','454e397eb7dd0fe219fa681eeadfaf2a64a3aeec','Stéphane Michaut','porting libxml2 on zos encoding of code  first set of patches for zos - entities.c parser.c tree.c xmlschemas.c xmlschemastypes.c xpath.c xpointer.c:   ask conversion of code to iso latin 1 to avoid having the compiler assume   ebcdic codepoint for characters. - xmlmodule.c: make sure we have support for modules - xmlio.c: zos path names are special avoid dsome of the expectstions from   unix/windows','xpointer.c','1841','556','5','0','false','false','false','2017-08-28 14:30:43+02:00'),('libxml2','2.9.4','1056e82e649d99cbe46648d99ddc00e6154de826','Stéphane Michaut','description of work needed to compile on zos  building on zos requires makefile surgery that we cannot carrry in the common branch, this documents the changes needed to compile on that platform','README.zOS','193','0','211','0','false','true','false','2017-08-28 14:45:19+02:00'),('libxml2','2.9.4','605899cf22d185f537eb5efb97a55be30467eb17','Boris Shtrasman','allow build on visual studio 2017 community edition for win32 on a 64 bit machine.  this patch hold the necessary changes to build libxml2 with visual studio 2017 for win32 on a 64 bit machine.  today 64 bit windows installation are very common, and visual studio 2017 community is the most recent version i have access to.  i have chosen 32 bit and sdk 8.1 to be as close as possible to igor zlatkovic work.','Makefile.msvc','393','0','16','4','false','false','false','2017-08-28 14:58:21+02:00'),('libxml2','2.9.4','605899cf22d185f537eb5efb97a55be30467eb17','Boris Shtrasman','allow build on visual studio 2017 community edition for win32 on a 64 bit machine.  this patch hold the necessary changes to build libxml2 with visual studio 2017 for win32 on a 64 bit machine.  today 64 bit windows installation are very common, and visual studio 2017 community is the most recent version i have access to.  i have chosen 32 bit and sdk 8.1 to be as close as possible to igor zlatkovic work.','Readme.txt','195','0','14','0','false','false','false','2017-08-28 14:58:21+02:00'),('libxml2','2.9.4','afb0f93c122b6fe16a14f59d635ff29d34d45525','Daniel Veillard','revert \"allow build on visual studio 2017 community edition for win32 on a 64 bit machine.\"  this reverts commit 605899cf22d185f537eb5efb97a55be30467eb17.','Makefile.msvc','382','0','4','16','false','true','false','2017-08-28 17:45:47+02:00'),('libxml2','2.9.4','afb0f93c122b6fe16a14f59d635ff29d34d45525','Daniel Veillard','revert \"allow build on visual studio 2017 community edition for win32 on a 64 bit machine.\"  this reverts commit 605899cf22d185f537eb5efb97a55be30467eb17.','Readme.txt','181','0','0','13','false','false','false','2017-08-28 17:45:47+02:00'),('libxml2','2.9.4','56ec9cef9ef19e6eba64842279c1566699ff8b15','Daniel Veillard','adding readme.zos to list of extra files for the release','Makefile.am','1207','0','1','0','false','false','false','2017-08-28 20:15:38+02:00'),('libxml2','2.9.4','dbb828feb9ba9a3b2694883b7d59787b121660a2','Daniel Veillard','fix missing part of comment for function xmlxpathevalexpression()','xpath.c','9833','3141','4','1','true','false','false','2017-08-28 20:38:53+02:00'),('libxml2','2.9.4','f19385a589ad6f8e98fd183228858e04970368a3','Daniel Veillard','fix a couple of misleading indentation errors  raised by gcc as potential error, no semantic change needed but fixed the indentation','parserInternals.c','1322','387','2','2','true','false','false','2017-08-28 20:40:19+02:00'),('libxml2','2.9.4','f19385a589ad6f8e98fd183228858e04970368a3','Daniel Veillard','fix a couple of misleading indentation errors  raised by gcc as potential error, no semantic change needed but fixed the indentation','tree.c','6375','2430','2','2','true','false','false','2017-08-28 20:40:19+02:00'),('libxml2','2.9.4','3daee3f159a1f962278e6f92572b7749b2b2babb','Daniel Veillard','problem resolving relative uris  raised by matthias pigulla <mp@webfactory.de>  in a nutshell we had that bug on uri composition after some fixes in the area of localhost empty shortcuts :  ./testuri --base file:///some/where file  without patch: file:/some/file with patch: file:///some/file','uri.c','1530','588','6','4','true','false','false','2017-08-28 21:12:14+02:00'),('libxml2','2.9.4','8f57103793e1e1b1be478f1feb607d19d725d048','Bruce Dawson','add const in five places to move 1 kib to .rdata  xmlunicodeblocks is logically const but was not marked as such. this fixes that, thus moving it to the read-only data segment.','genUnicode.py','397','0','2','2','true','false','false','2017-08-28 21:27:03+02:00'),('libxml2','2.9.4','8f57103793e1e1b1be478f1feb607d19d725d048','Bruce Dawson','add const in five places to move 1 kib to .rdata  xmlunicodeblocks is logically const but was not marked as such. this fixes that, thus moving it to the read-only data segment.','xmlunicode.c','1616','360','3','3','true','false','false','2017-08-28 21:27:03+02:00'),('libxml2','2.9.4','e29e50e54f471c7019059e5358b2739442266246','Daniel Veillard','updating the spec file to reflect fedora 24  new python subpackages namings','libxml.spec.in','107','0','19','10','false','false','false','2017-08-29 12:40:54+02:00'),('libxml2','2.9.5','e29e50e54f471c7019059e5358b2739442266246','Daniel Veillard','updating the spec file to reflect fedora 24  new python subpackages namings','libxml.spec.in','107','0','19','10','false','false','false','2017-08-29 12:40:54+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','parser.c','10224','3468','1','1','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','parserInternals.c','1309','385','27','28','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_1.xml','None','None','0','0','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_1.xml.err','None','None','0','7','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_1.xml.str','None','None','0','4','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_2.xml','None','None','0','0','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_2.xml.err','None','None','0','7','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_2.xml.str','None','None','0','5','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_3.xml','None','None','0','0','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_3.xml.err','None','None','0','7','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_3.xml.str','None','None','0','5','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_1.xml','None','None','0','1','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_2.xml','None','None','0','1','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','69936b129fedcda3514fee1a0d6b39521923cbac','Nick Wellnhofer','revert \"print error messages for truncated utf-8 sequences\"  this reverts commit 79c8a6b which caused a serious regression in streaming mode.  also reverts part of commit 52ceced \"fix infinite loops with push parser in recovery mode\".  fixes bug 786554.','partial_utf8_3.xml','None','None','0','1','true','false','false','2017-08-30 14:19:06+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','configure.ac','1628','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk0.html','303','0','2','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk13.html','654','0','1','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk14.html','469','0','0','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk16.html','376','0','2','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk17.html','581','0','1','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk18.html','458','0','1','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk2.html','415','0','0','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk20.html','330','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk21.html','399','0','7','7','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk23.html','670','0','2','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk24.html','1003','0','2','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk28.html','567','0','2','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIchunk5.html','295','0','3','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','APIfunctions.html','2345','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','bugs.html','70','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-HTMLparser.html','371','0','4','4','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-dict.html','134','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-hash.html','214','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-list.html','226','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-schemasInternals.html','779','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-tree.html','1590','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xmlerror.html','953','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xmlreader.html','565','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xmlstring.html','217','0','3','3','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xpath.html','538','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xpathInternals.html','759','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-xpointer.html','171','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-HTMLparser.html','184','0','4','4','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-dict.html','58','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-hash.html','116','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-list.html','120','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-schemasInternals.html','373','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-tree.html','991','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xmlerror.html','865','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xmlreader.html','330','0','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xmlstring.html','107','0','3','3','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xpath.html','316','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xpathInternals.html','394','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml-xpointer.html','83','0','1','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-api.xml','18510','1','20','20','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2-refs.xml','32156','0','32','18','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','libxml2.xsa','96','0','77','57','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','news.html','2632','0','125','1','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','xml.html','6043','0','126','0','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','setup.py','181','3','2','2','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','2960178fe8f9fe690b7f8c1c49093ff54bb56934','Daniel Veillard','release of libxml2-2.9.5  * configure.ac, doc/xslt.html: updated for the release * doc/*, python/setup.py, testapi.c: regenerated','testapi.c','42046','6551','8','8','false','false','false','2017-09-04 15:38:47+02:00'),('libxml2','2.9.5','83fb4119a9e8b5f029f6b876ecc497be4e6702e7','Nick Wellnhofer','fix memory leaks in sax1 parser  found by oss-fuzz. i could only reproduce this with the (obsolete) sax1 parser.  one leak is caused by duplicate namespaced attribute names and can be reproduced in memory mode (testcase 4556417027538944):      $ cat file     <d xmlns:a=\"ns\" a:x=\"v\" xmlns:b=\"ns\" b:x=\"v\"/>     $ xmllint --sax1 --memory file  the other is caused by attlists with a normalized default for \"xmlns\" if they\'re processed after the entity recursion limit was hit (testcase 5580750034305024).      $ cat file     <!doctype d [ 	<!entity a \'<d>&a;\'> 	<!attlist d xmlns nmtoken \'t\'>     ]>     <d>&a;     $ xmllint --sax1 --valid file  also see https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2461','SAX2.c','1993','681','6','0','true','false','false','2017-09-06 01:12:34+02:00'),('libxml2','2.9.5','3b3d75028a1d60fa9650137bfac90e9b36ee6199','Nick Wellnhofer','fix memory leak in nanoftp  found by oss-fuzz (testcase 5487741645094912). free the user and password strings in xmlnanoftpfreectxt.  also see https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2727','nanoftp.c','1411','422','2','0','true','false','false','2017-09-06 02:11:48+02:00'),('libxml2','2.9.5','ca8635bfc23d67f6a9cce33733981ee768945b69','Nick Wellnhofer','fix debug dump of streaming xpath expressions  the debug function xmlxpathdebugdumpcompexpr would crash when called with a \"streaming\" expression.  fixes bug 787368.','xpath.c','9838','3143','11','4','true','false','false','2017-09-07 15:46:12+02:00'),('libxml2','2.9.5','ca8635bfc23d67f6a9cce33733981ee768945b69','Nick Wellnhofer','fix debug dump of streaming xpath expressions  the debug function xmlxpathdebugdumpcompexpr would crash when called with a \"streaming\" expression.  fixes bug 787368.','xpath.c','9838','3143','11','4','true','false','false','2017-09-07 15:46:12+02:00'),('libxml2','2.9.5','0fcab658a27c3f0759b89809da1015f9bcbd999a','Nick Wellnhofer','handle illegal entity values in recovery mode  make xmlparseentityvalue always return null on error. otherwise some illegal entity values like      <!entity e \'&%#4294967298;\'>  would later cause problems like integer overflow.  found by oss-fuzz. should fix bug 783052.  also see      https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=592     https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2732','parser.c','10226','3469','32','31','true','false','false','2017-09-07 19:08:43+02:00'),('libxml2','2.9.5','e2a9122b8dde53d320750451e9907a7dcb2ca8bb','Nick Wellnhofer','set memory limit for lzma decompression  otherwise malicious lzma compressed files could consume large amounts of memory when decompressed.  according to the xz man page, files compressed with `xz -9` currently require 65 mb to decompress, so set the limit to 100 mb.  should fix bug 786696.','xzlib.c','578','149','1','1','true','false','false','2017-09-07 19:08:43+02:00'),('libxml2','2.9.5','07e227ed00d0fb787c06cf03069b2904e692e770','Nick Wellnhofer','fix memory leak in lzma decompressor','xzlib.c','580','151','2','0','true','false','false','2017-09-07 19:08:43+02:00'),('libxml2','2.9.5','c709f3f2676c1ea2499ad942f1e780a5325152c2','Nick Wellnhofer','fix structured validation errors  also pass \'str2\'. fixes bug 777473.','valid.c','4757','1557','2','2','true','false','false','2017-09-07 19:52:39+02:00'),('libxml2','2.9.5','abbda93c723b337ae647ccb398c23eeb1868add4','Nick Wellnhofer','handle more invalid entity values in recovery mode  in attribute content, don\'t emit entity references if there are problems with the entity value. otherwise some illegal entity values like      <!entity a \'&#38;#x123456789;\'>  would later cause problems like integer overflow.  make xmlstringlendecodeentities return null on more error conditions including invalid char refs and errors from recursive calls. remove some fragile error checks based on lasterror that shouldn\'t be needed now. clear the entity content in xmlparseattvaluecomplex if an error was found.  found by oss-fuzz. should fix bug 783052.  also see https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3343','parser.c','10221','3464','34','40','true','false','false','2017-09-13 17:21:04+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','.travis.yml','18','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','elfgcchack.h','3183','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','libxml.h','24','0','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','nanohttp.c','1137','385','1','1','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','threads.c','533','173','2','2','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','2cdaaab11ce3fc855361b3267bc25fe3b9fa1f6f','Nick Wellnhofer','change preprocessor os tests to __linux__  \"linux\" without leading underscores is deprecated and less reliable.','threads.c','533','173','2','2','false','false','false','2017-09-14 21:30:51+02:00'),('libxml2','2.9.5','b90d8989d3dc486519686f01490379c963bd1145','Nick Wellnhofer','fix regression with librsvg  instead of using xmlcreateioparserctxt, librsvg pushes its own xmlparserinput on top of a memory push parser. this incorrect use of the api confuses several parser checks and, since 2.9.5, completely breaks documents with internal subsets. work around the problem with internal subsets.  thanks to petr sumbera for the report:      https://mail.gnome.org/archives/xml/2017-september/msg00011.html  also see      https://bugzilla.gnome.org/show_bug.cgi?id=787895','parser.c','10222','3464','3','2','true','false','false','2017-09-19 16:45:49+02:00'),('libxml2','2.9.5','3157cf4e53c03bc3da604472c015c63141907db8','Nick Wellnhofer','report undefined xpath variable error message  commit c851970 removed a redundant error message if xpath evaluation failed. this uncovered a case where an undefined xpath variable error wasn\'t reported correctly.  thanks to petr pisar for the report.  fixes bug 787941.','xpath.c','9834','3143','4','8','true','false','false','2017-09-20 16:13:29+02:00'),('libxml2','2.9.5','0f3b843b3534784ef57a4f9b874238aa1fda5a73','Nick Wellnhofer','fix xpath stack frame logic  move the calls to xmlxpathsetframe and xmlxpathpopframe around in xmlxpathcompopevalpositionalpredicate to make sure that the context object on the stack is actually protected. otherwise, memory corruption can occur when calling sloppily coded xpath extension functions.  fixes bug 783160.','xpath.c','9834','3143','2','2','true','false','false','2017-09-21 17:55:39+02:00'),('libxml2','2.9.6','0f3b843b3534784ef57a4f9b874238aa1fda5a73','Nick Wellnhofer','fix xpath stack frame logic  move the calls to xmlxpathsetframe and xmlxpathpopframe around in xmlxpathcompopevalpositionalpredicate to make sure that the context object on the stack is actually protected. otherwise, memory corruption can occur when calling sloppily coded xpath extension functions.  fixes bug 783160.','xpath.c','9834','3143','2','2','true','false','false','2017-09-21 17:55:39+02:00'),('libxml2','2.9.6','4b4d3d85165e6bfca23893cf98834c4bc747a96c','Daniel Veillard','release of libxml2-2.9.6 * configure.ac doc/xml.html doc/news.html: updated for release','configure.ac','1628','0','1','1','false','false','false','2017-10-06 09:00:53+02:00'),('libxml2','2.9.6','4b4d3d85165e6bfca23893cf98834c4bc747a96c','Daniel Veillard','release of libxml2-2.9.6 * configure.ac doc/xml.html doc/news.html: updated for release','libxml2.xsa','127','0','109','77','false','false','false','2017-10-06 09:00:53+02:00'),('libxml2','2.9.6','4b4d3d85165e6bfca23893cf98834c4bc747a96c','Daniel Veillard','release of libxml2-2.9.6 * configure.ac doc/xml.html doc/news.html: updated for release','news.html','2649','0','19','1','false','false','false','2017-10-06 09:00:53+02:00'),('libxml2','2.9.6','4b4d3d85165e6bfca23893cf98834c4bc747a96c','Daniel Veillard','release of libxml2-2.9.6 * configure.ac doc/xml.html doc/news.html: updated for release','xml.html','6063','0','20','0','false','false','false','2017-10-06 09:00:53+02:00'),('libxml2','2.9.6','4b4d3d85165e6bfca23893cf98834c4bc747a96c','Daniel Veillard','release of libxml2-2.9.6 * configure.ac doc/xml.html doc/news.html: updated for release','setup.py','181','3','1','1','false','false','false','2017-10-06 09:00:53+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','.travis.yml','18','0','1','2','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','03a238f954ed2959e9eacb011872779e6e77ab5d','Nick Wellnhofer','use __linux__ macro in generated code','elfgcchack.xsl','111','0','1','1','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','0c91391683b41c718f5e82a3ce41735d95eeb049','Nick Wellnhofer','remove generated file python/setup.py from version control','.gitignore','122','0','1','0','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','0c91391683b41c718f5e82a3ce41735d95eeb049','Nick Wellnhofer','remove generated file python/setup.py from version control','setup.py','None','None','0','242','false','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','5af594d8bc55121ae454cba4d05793d1db7ff612','Nick Wellnhofer','fix comparison of nodesets to strings  fix two bugs in xmlxpathnodevalhash which could lead to errors when comparing nodesets to strings:  - only use contents of text nodes to compute the hash for element nodes.   comments, pis, and other node types don\'t affect the string-value and   must be ignored. - reset `string` to null for node types other than text.  reported by aleksei on the mailing list:      https://mail.gnome.org/archives/xml/2017-september/msg00016.html','strbase','12','0','13','0','true','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','5af594d8bc55121ae454cba4d05793d1db7ff612','Nick Wellnhofer','fix comparison of nodesets to strings  fix two bugs in xmlxpathnodevalhash which could lead to errors when comparing nodesets to strings:  - only use contents of text nodes to compute the hash for element nodes.   comments, pis, and other node types don\'t affect the string-value and   must be ignored. - reset `string` to null for node types other than text.  reported by aleksei on the mailing list:      https://mail.gnome.org/archives/xml/2017-september/msg00016.html','str','11','0','2','0','true','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','5af594d8bc55121ae454cba4d05793d1db7ff612','Nick Wellnhofer','fix comparison of nodesets to strings  fix two bugs in xmlxpathnodevalhash which could lead to errors when comparing nodesets to strings:  - only use contents of text nodes to compute the hash for element nodes.   comments, pis, and other node types don\'t affect the string-value and   must be ignored. - reset `string` to null for node types other than text.  reported by aleksei on the mailing list:      https://mail.gnome.org/archives/xml/2017-september/msg00016.html','strbase','0','0','1','0','true','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','5af594d8bc55121ae454cba4d05793d1db7ff612','Nick Wellnhofer','fix comparison of nodesets to strings  fix two bugs in xmlxpathnodevalhash which could lead to errors when comparing nodesets to strings:  - only use contents of text nodes to compute the hash for element nodes.   comments, pis, and other node types don\'t affect the string-value and   must be ignored. - reset `string` to null for node types other than text.  reported by aleksei on the mailing list:      https://mail.gnome.org/archives/xml/2017-september/msg00016.html','xpath.c','9830','3140','1','5','true','false','false','2017-10-07 15:22:57+02:00'),('libxml2','2.9.6','41c0a13fe7455bbdd3aa785a67ded91058f81333','Nick Wellnhofer','fix windows compiler warnings in xmlcanonicpath  the code handling windows paths assigned some char/xmlchar pointers without explicit casts. also remove an unused variable.','uri.c','1529','588','4','5','true','false','false','2017-10-09 13:46:44+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','SAX2.c','1994','681','2','1','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','parser.c','10223','3464','9','8','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','relaxng.c','8354','2277','7','6','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','tree.c','6376','2430','2','1','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','xmlIO.c','2168','719','6','5','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','xmlmemory.c','644','184','1','1','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','d422b954be178afca1abeded9054ee6e39272904','Nick Wellnhofer','fix pointer/int cast warnings on 64-bit windows  on 64-bit windows, `long` is 32 bits wide and can\'t hold a pointer. switch to ptrdiff_t instead which should be the same size as a pointer on every somewhat sane platform without requiring c99 types like intptr_t.  fixes bug 788312.  thanks to j. peter mugaas for the report and initial patch.','xpath.c','9831','3140','28','27','true','false','false','2017-10-09 13:47:49+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','wsockcompat.h','5','0','16','51','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','5b2324b6e007b5a03e4131877ab09f4dc8037e59','Nick Wellnhofer','don\'t redefine socket error codes on windows  translate wsa error codes instead of blindly redefining posix error codes on windows. the redefinitions caused warnings in modern windows environments, but simply ifdef\'ing out the redefinitions seems like the wrong approach.','nanohttp.c','1151','390','16','2','true','false','false','2017-10-09 13:49:36+02:00'),('libxml2','2.9.6','45b0ebdc8d1336092d8dd2e3c77a08fda4dd4e70','Nick Wellnhofer','socklen_t is always int on windows  define xml_socklen_t as `int` unconditionally in wsockcompat.h. fixes compiler warnings and removes some duplicated code.','wsockcompat.h','5','0','2','4','true','false','false','2017-10-09 13:57:42+02:00'),('libxml2','2.9.6','45b0ebdc8d1336092d8dd2e3c77a08fda4dd4e70','Nick Wellnhofer','socklen_t is always int on windows  define xml_socklen_t as `int` unconditionally in wsockcompat.h. fixes compiler warnings and removes some duplicated code.','nanoftp.c','1411','422','0','2','true','false','false','2017-10-09 13:57:42+02:00'),('libxml2','2.9.6','45b0ebdc8d1336092d8dd2e3c77a08fda4dd4e70','Nick Wellnhofer','socklen_t is always int on windows  define xml_socklen_t as `int` unconditionally in wsockcompat.h. fixes compiler warnings and removes some duplicated code.','nanohttp.c','1151','390','0','2','true','false','false','2017-10-09 13:57:42+02:00'),('libxml2','2.9.6','45b0ebdc8d1336092d8dd2e3c77a08fda4dd4e70','Nick Wellnhofer','socklen_t is always int on windows  define xml_socklen_t as `int` unconditionally in wsockcompat.h. fixes compiler warnings and removes some duplicated code.','xmllint.c','2758','868','0','2','true','false','false','2017-10-09 13:57:42+02:00'),('libxml2','2.9.6','bee8f1e47b0072e8ea216ed08ed819df96812a25','Nick Wellnhofer','don\'t include winsock2.h in xmllint.c  i\'m not sure why xmllint.c did include winsock2.h at all. stop including the header as both mingw and msvc builds don\'t seem to require it.','xmllint.c','2755','868','0','14','false','false','false','2017-10-09 13:59:44+02:00'),('libxml2','2.9.6','bee8f1e47b0072e8ea216ed08ed819df96812a25','Nick Wellnhofer','don\'t include winsock2.h in xmllint.c  i\'m not sure why xmllint.c did include winsock2.h at all. stop including the header as both mingw and msvc builds don\'t seem to require it.','xmllint.c','2755','868','0','14','false','false','false','2017-10-09 13:59:44+02:00'),('libxml2','2.9.6','bee8f1e47b0072e8ea216ed08ed819df96812a25','Nick Wellnhofer','don\'t include winsock2.h in xmllint.c  i\'m not sure why xmllint.c did include winsock2.h at all. stop including the header as both mingw and msvc builds don\'t seem to require it.','xmllint.c','2755','868','0','14','false','false','false','2017-10-09 13:59:44+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','configure.ac','1627','0','0','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','dict.c','759','271','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','nanoftp.h','74','0','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','win32config.h','36','8','0','5','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','nanoftp.c','1410','422','1','7','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','nanohttp.c','1150','390','1','6','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','os400config.h.in','0','0','0','3','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','parser.c','10223','3464','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','parserInternals.c','1309','385','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','runtest.c','3261','674','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','threads.c','533','173','1','0','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','threads.c','533','173','1','0','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','timsort.h','312','78','2','2','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','timsort.h','312','78','2','2','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','Makefile.mingw','265','0','0','2','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','Makefile.msvc','382','0','1','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','config.h','36','8','0','5','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','xmlIO.c','2168','719','3','2','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','e3890546d798927aeabdb471985b4afd9f74bbec','Nick Wellnhofer','fix the windows header mess  don\'t include windows.h and wsockcompat.h from config.h but only when needed.  don\'t define _winsockapi_ manually. this was apparently done to stop windows.h from including winsock.h which is a problem if winsock2.h wasn\'t included first. but on mingw, this causes compiler warnings. define win32_lean_and_mean instead which has the same effect.  always use the compiler-defined _win32 macro instead of win32.','xmlmodule.c','209','38','2','1','true','false','false','2017-10-09 14:35:40+02:00'),('libxml2','2.9.6','ecbdfa9eb3ee478193deaf6d0bb2400a80ef172d','Nick Wellnhofer','fix unused variable warnings in nanohttp.c  some variables are only used if certain macros are set. move the declarations around.','nanohttp.c','1150','390','4','3','true','false','false','2017-10-09 14:35:55+02:00'),('libxml2','2.9.6','82e0394d46095dd32d3de8c244ef7b7d5b019b51','Nick Wellnhofer','fix runtest on windows  unbuffer the output and fix some compiler warnings.','runtest.c','3263','675','7','2','true','false','false','2017-10-09 14:35:56+02:00'),('libxml2','2.9.6','d1505ef57a30961535235e86352ad118aa8a8d2e','Nick Wellnhofer','update .gitignore for windows','.gitignore','123','0','1','0','false','false','false','2017-10-09 14:35:56+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','567239747702c7f14272897fd8a9c5a9b44c2bad','Nick Wellnhofer','simplify windows io functions  remove \"native\" non-unicode functions which were only needed for pre-nt systems like windows 95/98.  don\'t redefine `stat` but use `struct _stat` and `_stat()` instead.','xmlIO.c','2127','707','21','129','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','8575c1170b7ba14d0033a0e18bf5073a5616296d','Nick Wellnhofer','default to native threads on mingw-w64','configure.ac','1627','0','2','2','false','false','false','2017-10-09 16:52:14+02:00'),('libxml2','2.9.6','6472dfe337f8cc81c68ce903b81d7ec8a321369d','Nick Wellnhofer','fix a couple of warnings in dict.c and threads.c  only visible on windows.','dict.c','759','271','2','2','true','false','false','2017-10-09 16:52:15+02:00'),('libxml2','2.9.6','6472dfe337f8cc81c68ce903b81d7ec8a321369d','Nick Wellnhofer','fix a couple of warnings in dict.c and threads.c  only visible on windows.','threads.c','536','173','7','4','true','true','false','2017-10-09 16:52:15+02:00'),('libxml2','2.9.6','25499fc2295d0a2844b6b1fb356ce4c46363216b','Nick Wellnhofer','increase warning level to /w3 under msvc  with the exception of timsort.h and warnings 4244 and 4267, the msvc build is now warnings-free with /w3.','Makefile.msvc','382','0','1','1','false','false','false','2017-10-09 16:52:34+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','bec3c17fae1610c6e39f982a35b391d9f1c84943','Nick Wellnhofer','upgrade timsort.h to latest revision  upgrade timsort.h to revision 05fd77bfec049ce8b7c408c4d3dd2d51ee061a15 from https://github.com/swenson/sort  removed all code unrelated to timsort and made minor adjustments for cross-platform compatibility.','timsort.h','359','88','331','248','false','false','false','2017-10-12 15:22:21+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','catalog.c','2522','776','1','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','dict.c','759','271','29','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','nanoftp.c','1410','422','4','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','relaxng.c','8354','2277','2','2','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','tree.c','6376','2430','3','3','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','valid.c','4757','1557','1','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','xmlregexp.c','5839','1976','5','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','xmlschemas.c','18761','4691','1','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','xmlschemastypes.c','4327','1593','1','1','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','xmlwriter.c','3153','724','1','0','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','d2c329a9a4b630de1f32d359fcc983a6cc285649','J. Peter Mugaas','fix -wimplicit-fallthrough warnings  add \"falls through\" comments to quench implicit-fallthrough warnings which are enabled by -wextra under gcc 7.','xpath.c','9831','3140','1','1','true','false','false','2017-10-21 13:49:31+02:00'),('libxml2','2.9.6','8bc6c878e9e3cc2941eb1264693841ece84ceaaa','J. Peter Mugaas','fix macro redefinition warning','libxml.h','24','0','1','1','true','false','false','2017-10-21 13:57:44+02:00'),('libxml2','2.9.6','a4864c2f98f2a093402e6a4bb14a10af45025f40','J. Peter Mugaas','fix pointer comparison warnings on 64-bit windows','nanoftp.c','1410','422','1','1','true','false','false','2017-10-21 14:01:10+02:00'),('libxml2','2.9.6','a4864c2f98f2a093402e6a4bb14a10af45025f40','J. Peter Mugaas','fix pointer comparison warnings on 64-bit windows','nanohttp.c','1150','390','2','2','true','false','false','2017-10-21 14:01:10+02:00'),('libxml2','2.9.6','154824ee5ec47a82b3a27f76d4305ba0658d88ef','Nick Wellnhofer','fix unused variable warnings in testrecurse','testrecurse.c','692','187','2','2','true','false','false','2017-10-21 14:10:11+02:00'),('libxml2','2.9.6','882a165a3f2b275c9679b2a1ef18e0421ec32ef2','J. Peter Mugaas','fix preprocessor conditional in threads.h  make sure that the preprocessor conditions and types for xmldllmain match exactly in threads.h and threads.c.','threads.h','43','0','7','2','true','false','false','2017-10-21 14:50:44+02:00'),('libxml2','2.9.6','882a165a3f2b275c9679b2a1ef18e0421ec32ef2','J. Peter Mugaas','fix preprocessor conditional in threads.h  make sure that the preprocessor conditions and types for xmldllmain match exactly in threads.h and threads.c.','threads.h','43','0','7','2','true','false','false','2017-10-21 14:50:44+02:00'),('libxml2','2.9.6','882a165a3f2b275c9679b2a1ef18e0421ec32ef2','J. Peter Mugaas','fix preprocessor conditional in threads.h  make sure that the preprocessor conditions and types for xmldllmain match exactly in threads.h and threads.c.','threads.c','536','173','3','3','true','false','false','2017-10-21 14:50:44+02:00'),('libxml2','2.9.6','f05af837bb21ec2244d42c1e6ffb8ea174292f03','J. Peter Mugaas','add declaration for dllmain  fixes a compiler warning.','threads.c','540','173','10','0','true','false','false','2017-10-21 14:51:35+02:00'),('libxml2','2.9.6','cf820462b7cd6f5ef443ebf3a71d293a6b00ce2c','Nick Wellnhofer','rework handling of return values in thread tests  pass a struct to each thread that contains the filename and the return value. this avoids casting a dword to a pointer on windows.','runtest.c','3263','674','37','37','false','false','false','2017-10-21 14:52:35+02:00'),('libxml2','2.9.6','cfa912dd91a8d5e52637f38ac403674de9bf1f6b','Nick Wellnhofer','fix deprecated travis compiler flag','.travis.yml','18','0','1','1','true','false','false','2017-10-21 15:02:30+02:00'),('libxml2','2.9.6','5e986e3b3377a39d9f965297c15c748ea52fccf6','Nick Wellnhofer','fix mixed decls and code in timsort.h','timsort.h','359','88','5','5','true','false','false','2017-10-21 15:09:33+02:00'),('libxml2','2.9.6','6b780f65d83cb952142fd1b211eeb99c7957da49','Jan Pokorný','xmlcatalog: restore ability to query system catalog easily  i\'ve noticed that easy way of locating a docbook xslt in a configure script of another project doesn\'t work anymore.  it is using something like: xmlcatalog \"\" ${docbook_xsl_uri}/${docbook_xsl_path}.  the script is then forced to a plain, suboptimal search using find utility. indeed, i retrospectively realize that the check was working just by mere accident given that the window this presumably side-effect was applicable had not lasted long, some 8 months between    054c716ea1bf001544127a4ab4f4346d1b9947e7  introducing xmlinitializecatalog in the libxml_test_version-rooted call chain, and    f65128f38289d77ff322d63aef2858cc0a819c34  reverting that again.  so while one can state /etc/xml/catalog constant explicitly, in some use cases (such as the mentioned one -- that\'s why i wanted to omit stating the full path in the first place), this is rather an implementation detail, perhaps subject to change from that pov. therefore i propose to restore that behaviour in the targeted manner without global disruptions this time around.  as a side-effect, this fixes indenting of the affected part.','xmlcatalog.c','515','166','10','2','true','false','false','2017-10-21 15:26:40+02:00'),('libxml2','2.9.6','ca01f8133eff5a5fe4fa542c0161c75bc702f253','Jan Pokorný','xmlcatalog: refresh man page wrt. quering system catalog easily  also normalize \"lookup\" spelling.','xmlcatalog.1','350','0','16','6','false','false','false','2017-10-24 13:57:43+02:00'),('libxml2','2.9.6','ca01f8133eff5a5fe4fa542c0161c75bc702f253','Jan Pokorný','xmlcatalog: refresh man page wrt. quering system catalog easily  also normalize \"lookup\" spelling.','xmlcatalog_man.xml','431','0','17','2','false','false','false','2017-10-24 13:57:43+02:00'),('libxml2','2.9.6','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','Makefile.am','322','0','7','1','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.6','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','xmlcatalog_man.html','140','0','140','101','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.6','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','xmllint.html','162','0','162','175','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.7','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','Makefile.am','322','0','7','1','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.7','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','xmlcatalog_man.html','140','0','140','101','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.7','09f51ecbc5b8ea418bacca4ad43a4d2d1e3ccdfb','Nick Wellnhofer','add makefile rules to rebuild html man pages  this should make sure that the online version of the man pages for xmllint and xmlcatalog stay up to date. also rebuild both html documents.','xmllint.html','162','0','162','175','false','false','false','2017-10-24 14:29:26+02:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','configure.ac','1627','0','1','1','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','libxml2.xsa','30','0','15','116','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','news.html','2689','0','43','1','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','xml.html','6105','0','44','0','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','xmlcatalog.1','350','0','1','1','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','bc5a5d658320c37e206fe4e7b525b4a24466d0c6','Daniel Veillard','release of libxnl2-2.9.7  * configure.ac doc/news.html : update for release * doc/news.html doc/xmlcatalog.1 doc/xmlcatalog_man.html: regenerated','xmlcatalog_man.html','140','0','1','1','false','false','false','2017-11-02 21:26:55+01:00'),('libxml2','2.9.7','f404c4f500a0ec18b04463581d5d1b3aae7f7730','Nick Wellnhofer','compile testapi with -wno-unused-function','Makefile.am','1208','0','1','0','false','false','false','2017-11-04 15:03:20+01:00'),('libxml2','2.9.7','4b4135977e82b7c9d3bba87a24fb7b5609312e14','Nick Wellnhofer','skip ebcdic tests if ebcdic isn\'t supported  fixes bug 603432.','runtest.c','3270','676','10','0','true','false','false','2017-11-04 15:25:30+01:00'),('libxml2','2.9.7','4b4135977e82b7c9d3bba87a24fb7b5609312e14','Nick Wellnhofer','skip ebcdic tests if ebcdic isn\'t supported  fixes bug 603432.','runtest.c','3270','676','10','0','true','false','false','2017-11-04 15:25:30+01:00'),('libxml2','2.9.7','0b19f236a263a7b0acacd4ea84dc7237303ee3d9','Joel Hockey','fixed icu to set flush correctly and provide pivot buffer.  by always setting flush=true when doing multiple reads, icu will not correctly handle truncated utf8 chars across read boundaries.  the fix is to set flush=true only on final read, and to provide a pivot buffer which is maintained by libxml between calls to ucnv_convertex.','encoding.c','2817','658','25','21','true','false','false','2017-11-04 15:25:31+01:00'),('libxml2','2.9.7','0b19f236a263a7b0acacd4ea84dc7237303ee3d9','Joel Hockey','fixed icu to set flush correctly and provide pivot buffer.  by always setting flush=true when doing multiple reads, icu will not correctly handle truncated utf8 chars across read boundaries.  the fix is to set flush=true only on final read, and to provide a pivot buffer which is maintained by libxml between calls to ucnv_convertex.','encoding.h','111','0','5','0','true','false','false','2017-11-04 15:25:31+01:00'),('libxml2','2.9.7','72182550926d31ad17357bd3ed69e49d7e69df02','Nick Wellnhofer','add test for icu flush and pivot buffer','icu_parse_test.xml','13','0','13','0','false','false','false','2017-11-04 15:38:58+01:00'),('libxml2','2.9.7','72182550926d31ad17357bd3ed69e49d7e69df02','Nick Wellnhofer','add test for icu flush and pivot buffer','icu_parse_test.xml.rde','14','0','14','0','false','false','false','2017-11-04 15:38:58+01:00'),('libxml2','2.9.7','72182550926d31ad17357bd3ed69e49d7e69df02','Nick Wellnhofer','add test for icu flush and pivot buffer','icu_parse_test.xml.rdr','14','0','14','0','false','false','false','2017-11-04 15:38:58+01:00'),('libxml2','2.9.7','72182550926d31ad17357bd3ed69e49d7e69df02','Nick Wellnhofer','add test for icu flush and pivot buffer','icu_parse_test.xml.sax','9','0','9','0','false','false','false','2017-11-04 15:38:58+01:00'),('libxml2','2.9.7','72182550926d31ad17357bd3ed69e49d7e69df02','Nick Wellnhofer','add test for icu flush and pivot buffer','icu_parse_test.xml.sax2','9','0','9','0','false','false','false','2017-11-04 15:38:58+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop  update xmlnop\'s name to xmlinputreadcallbacknop and its type signature to match xmlinputreadcallback.  fixes bug 786134.','libxml.h','24','0','1','1','true','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop  update xmlnop\'s name to xmlinputreadcallbacknop and its type signature to match xmlinputreadcallback.  fixes bug 786134.','libxml.h','24','0','1','1','true','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop  update xmlnop\'s name to xmlinputreadcallbacknop and its type signature to match xmlinputreadcallback.  fixes bug 786134.','parser.c','10224','3464','2','1','true','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','28f52fe89dccf9c0a99a905522be8194230c4e77','Vlad Tsyrklevich','refactor name and type signature for xmlnop  update xmlnop\'s name to xmlinputreadcallbacknop and its type signature to match xmlinputreadcallback.  fixes bug 786134.','xmlIO.c','2129','707','6','4','true','false','true','2017-11-09 13:43:08+01:00'),('libxml2','2.9.7','71462a600608f5263e3907eef8d685571abeb1b9','Nick Wellnhofer','introduce xmlposixstrdup and update xmlmemstrdup  introduce xmlposixstrdup, an internal strdup implementation matching the posix strdup type signature, and update xmlmemstrdup to use it.  thanks to vlad tsyrklevich for the initial patch.','globals.c','651','103','17','5','false','false','false','2017-11-09 15:30:15+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','HTMLparser.c','4770','1393','1','1','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','catalog.c','2524','776','26','24','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','debugXML.c','2576','785','6','5','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','symbols.xml','1771','0','3','0','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','entities.c','724','195','11','10','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','hash.c','688','216','17','2','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','hash.h','126','0','6','3','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','parser.c','10224','3464','1','1','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','parserInternals.c','1309','385','1','1','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','relaxng.c','8353','2277','17','18','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','valid.c','4781','1561','74','46','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','xinclude.c','1756','536','6','4','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','xmlreader.c','3872','1287','6','1','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','xmlschemas.c','18780','4694','40','18','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','xmlschemastypes.c','4331','1594','6','1','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','e03f0a199a67017b2f8052354cf732b2b4cae787','Nick Wellnhofer','fix hash callback signatures  make sure that all parameters and return values of hash callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  fixes bug 784861.','xpath.c','9836','3141','14','8','true','false','false','2017-11-09 16:42:47+01:00'),('libxml2','2.9.7','4dd6d7a58e3694af7ed42589affcfa9a1550dada','Nick Wellnhofer','fix list callback signatures  make sure that all parameters and return values of list callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  also change the `user` parameter type from `const void *` to `void *`.','c14n.c','1252','361','20','9','true','false','false','2017-11-09 17:28:00+01:00'),('libxml2','2.9.7','4dd6d7a58e3694af7ed42589affcfa9a1550dada','Nick Wellnhofer','fix list callback signatures  make sure that all parameters and return values of list callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  also change the `user` parameter type from `const void *` to `void *`.','list.h','78','0','3','3','true','false','false','2017-11-09 17:28:00+01:00'),('libxml2','2.9.7','4dd6d7a58e3694af7ed42589affcfa9a1550dada','Nick Wellnhofer','fix list callback signatures  make sure that all parameters and return values of list callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  also change the `user` parameter type from `const void *` to `void *`.','list.c','403','100','2','2','true','false','false','2017-11-09 17:28:00+01:00'),('libxml2','2.9.7','4dd6d7a58e3694af7ed42589affcfa9a1550dada','Nick Wellnhofer','fix list callback signatures  make sure that all parameters and return values of list callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  also change the `user` parameter type from `const void *` to `void *`.','valid.c','4781','1561','2','2','true','false','false','2017-11-09 17:28:00+01:00'),('libxml2','2.9.7','4dd6d7a58e3694af7ed42589affcfa9a1550dada','Nick Wellnhofer','fix list callback signatures  make sure that all parameters and return values of list callback functions exactly match the callback function type. this is required to pass clang\'s control flow integrity checks and to allow compilation to asm.js with emscripten.  also change the `user` parameter type from `const void *` to `void *`.','xmlwriter.c','3149','724','2','6','true','false','false','2017-11-09 17:28:00+01:00'),('libxml2','2.9.7','e5f33e56bafc332fd63f6643b687ebfe14bcba56','Nick Wellnhofer','fix misc callback signatures  fix parameter and return types for xmlc14nisvisiblecallback and xmlregexeccallbacks.','c14n.c','1253','361','4','3','true','false','false','2017-11-09 17:29:22+01:00'),('libxml2','2.9.7','e5f33e56bafc332fd63f6643b687ebfe14bcba56','Nick Wellnhofer','fix misc callback signatures  fix parameter and return types for xmlc14nisvisiblecallback and xmlregexeccallbacks.','xmlschemas.c','18779','4694','6','7','true','false','false','2017-11-09 17:29:22+01:00'),('libxml2','2.9.7','86615e43bbac2315aa069ca3ef4712477d61605c','Nick Wellnhofer','fix io callback signatures','xmlIO.c','2127','707','2','4','true','false','false','2017-11-09 17:47:47+01:00'),('libxml2','2.9.7','86615e43bbac2315aa069ca3ef4712477d61605c','Nick Wellnhofer','fix io callback signatures','xmllint.c','2753','868','11','13','true','false','false','2017-11-09 17:47:47+01:00'),('libxml2','2.9.7','86615e43bbac2315aa069ca3ef4712477d61605c','Nick Wellnhofer','fix io callback signatures','xmlwriter.c','3147','724','5','7','true','false','false','2017-11-09 17:47:47+01:00'),('libxml2','2.9.7','772c06487b45d347d8c1387a217d930f6ab485d0','Nick Wellnhofer','fix unused parameter warning without icu','encoding.c','2818','658','1','0','true','false','false','2017-11-09 17:56:31+01:00'),('libxml2','2.9.7','861823902b780a36d2583c0b742a19b3da3ddd1e','Nick Wellnhofer','revert \"compile testapi with -wno-unused-function\"  this reverts commit f404c4f500a0ec18b04463581d5d1b3aae7f7730.  the change broke non-gcc compilers.','Makefile.am','1207','0','0','1','false','false','false','2017-11-14 15:58:01+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','.travis.yml','18','0','1','1','false','false','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','8813f397f8925f85ffbe9e9fb62bfaa3c1accf11','Nick Wellnhofer','simplify xpath nan, inf and -0 handling  use c99 macros nan, infinity, isnan, isinf. if they\'re not available:  - assume that (0.0 / 0.0) generates a nan and !(x == x) tests for nan. - use c89\'s huge_val for infinity.  remove manual handling of nan, infinity and negative zero in functions xmlxpathvalueflipsign and xmlxpathdivvalues.  remove xmlxpathgetsign. all the tests for negative zero can be replaced with a test for negative or positive zero.  simplify xmlxpathroundfunction.  remove trio dependency.  this should work on ieee 754 compliant implementations even if the c99 macros aren\'t available, but will likely break some ancient platforms. if problems arise, my plan is to port the relevant trionan.c solution to xpath.c. note that non-compliant implementations are impossible to fully support, anyway, since xpath requires ieee 754.','xpath.c','9796','3122','48','98','false','true','false','2017-11-14 15:58:40+01:00'),('libxml2','2.9.7','13acadbb1ca1f42a65c6466dca025d4020be192a','Nick Wellnhofer','ignore function pointer cast warnings  use gcc pragmas as these warnings are enabled by -wpedantic and there\'s no way to disable them selectively.','libxml.h','24','0','12','0','false','false','false','2017-11-14 16:01:48+01:00'),('libxml2','2.9.7','13acadbb1ca1f42a65c6466dca025d4020be192a','Nick Wellnhofer','ignore function pointer cast warnings  use gcc pragmas as these warnings are enabled by -wpedantic and there\'s no way to disable them selectively.','xmlmodule.c','211','38','2','0','false','false','false','2017-11-14 16:01:48+01:00'),('libxml2','2.9.7','13acadbb1ca1f42a65c6466dca025d4020be192a','Nick Wellnhofer','ignore function pointer cast warnings  use gcc pragmas as these warnings are enabled by -wpedantic and there\'s no way to disable them selectively.','xpath.c','9800','3122','6','2','false','false','false','2017-11-14 16:01:48+01:00'),('libxml2','2.9.7','00859f9118c59ba419dc08162438a0246af34659','Nick Wellnhofer','fix callback signature in testapi.c','testapi.c','42047','6551','2','1','true','false','false','2017-11-14 16:03:31+01:00'),('libxml2','2.9.7','8cb8e31773f9d148091cb71141c5ec4cd6b815df','Nick Wellnhofer','don\'t touch cflags in configure.ac  cflags shouldn\'t be touched by configure.ac. the variable is supplied by the user and must come after other flags, so flags like warning options can be overridden.  rename cflags to extra_cflags and add the value to am_cflags. this also makes it possible to override flags for each automake program or library.','Makefile.am','1207','0','1','1','false','false','false','2017-11-14 16:03:36+01:00'),('libxml2','2.9.7','8cb8e31773f9d148091cb71141c5ec4cd6b815df','Nick Wellnhofer','don\'t touch cflags in configure.ac  cflags shouldn\'t be touched by configure.ac. the variable is supplied by the user and must come after other flags, so flags like warning options can be overridden.  rename cflags to extra_cflags and add the value to am_cflags. this also makes it possible to override flags for each automake program or library.','configure.ac','1627','0','13','13','false','false','false','2017-11-14 16:03:36+01:00'),('libxml2','2.9.7','359e750482e9b54cb10c7af477cc108d21f7531c','Nick Wellnhofer','fix -wmisleading-indentation warnings','xmlsave.c','1841','603','25','25','true','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','359e750482e9b54cb10c7af477cc108d21f7531c','Nick Wellnhofer','fix -wmisleading-indentation warnings','xmlschemas.c','18779','4694','4','4','true','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','b21895717debfc513640463371e76d2d16051491','Nick Wellnhofer','fix -wenum-compare warnings  also fixes a serious bug in xmlxptrnewrangenodepoint.','xpath.c','9800','3122','1','1','true','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','b21895717debfc513640463371e76d2d16051491','Nick Wellnhofer','fix -wenum-compare warnings  also fixes a serious bug in xmlxptrnewrangenodepoint.','xpointer.c','1839','555','0','2','true','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','c1002101f7e5b5194af50e6d2be38c96054dfef2','Nick Wellnhofer','update information about contributing  the contents of the hacking file were hopelessly outdated. remove the file and start with a contributing document.','CONTRIBUTING','15','0','24','0','false','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','c1002101f7e5b5194af50e6d2be38c96054dfef2','Nick Wellnhofer','update information about contributing  the contents of the hacking file were hopelessly outdated. remove the file and start with a contributing document.','HACKING','None','None','0','37','false','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','c1002101f7e5b5194af50e6d2be38c96054dfef2','Nick Wellnhofer','update information about contributing  the contents of the hacking file were hopelessly outdated. remove the file and start with a contributing document.','README.cvs-commits','3','0','1','1','false','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','c1002101f7e5b5194af50e6d2be38c96054dfef2','Nick Wellnhofer','update information about contributing  the contents of the hacking file were hopelessly outdated. remove the file and start with a contributing document.','make.sh','55','1','1','1','false','false','false','2017-11-27 13:42:30+01:00'),('libxml2','2.9.7','ddbb075b70abdc8166f878f039c5efd27a9df3e0','Nick Wellnhofer','fix xmlxpathisnan broken by recent commit','xpath.c','9800','3124','1','1','true','false','false','2017-11-27 14:33:26+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','HTMLparser.c','4770','1393','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','HTMLparser.c','4770','1393','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','HTMLparser.c','4770','1393','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','libxml2.bkl','670','0','0','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','c14n.c','1253','361','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','c14n.c','1253','361','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','configure.ac','1622','0','29','45','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','config-mac.h','4','0','0','3','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','nanohttp.c','1150','390','8','8','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','nanohttp.c','1150','390','8','8','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','nanohttp.c','1150','390','8','8','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','os400config.h.in','0','0','0','14','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','wrappers.c','113','14','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','wrappers.c','113','14','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','wrappers.h','16','0','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','wrappers.h','16','0','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parser.c','10222','3464','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parser.c','10222','3464','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parser.c','10222','3464','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parserInternals.c','1309','385','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parserInternals.c','1309','385','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','parserInternals.c','1309','385','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','tree.c','6376','2430','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','tree.c','6376','2430','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','tree.c','6376','2430','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','config.vms','1','0','0','3','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','Makefile.bcb','262','0','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','Makefile.mingw','259','0','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','Makefile.msvc','376','0','0','6','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xlink.c','71','20','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xlink.c','71','20','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xlink.c','71','20','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlIO.c','2127','707','21','21','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmllint.c','2753','868','2','2','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmllint.c','2753','868','2','2','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmllint.c','2753','868','2','2','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlsave.c','1841','603','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xmlsave.c','1841','603','1','1','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','cb5541c9f34fc29b0d7b8d89a3122c3fa46a6068','Nick Wellnhofer','fix libz and liblzma detection  if libz or liblzma are detected with pkg-config, ac_check_headers must not be run because the correct cppflags aren\'t set. it is actually not required have separate checks for libxml_zlib_enabled and have_zlib_h. only check for libxml_zlib_enabled and remove have_zlib_h macro.  fixes bug 764657, bug 787041.','xzlib.c','580','151','12','12','true','false','false','2017-11-27 14:33:37+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','configure.ac','1617','0','1','6','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','win32config.h','36','8','0','1','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','config-mac.h','4','0','0','36','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','os400config.h.in','0','0','0','36','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','config.vms','1','0','0','42','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','bf3b45635021dc1fc7160d907a01051ce81fb11d','Nick Wellnhofer','remove unused ac_checks','config.h','36','8','0','1','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','configure.ac','1616','0','0','1','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlversion.h.in','4','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlversion.h.in','4','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlwin32version.h','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlwin32version.h','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlwin32version.h','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlwin32version.h.in','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','xmlwin32version.h.in','3','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','config-mac.h','4','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','ff628d46a1301d76e0217c23c7ef53c5f1faed45','Nick Wellnhofer','stop including ansidecl.h  this seems to be an undocumented, internal gcc header added a long time ago. i don\'t know why it was included, but i think it can be safely removed.','os400config.h.in','0','0','0','3','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','2677fbf4a4a6dec69ff52265addab713fe48ad1f','Nick Wellnhofer','fix -wtautological-pointer-compare warnings  skip tautological pointer comparisons on pthread systems where we don\'t use the weak symbols hack.','threads.c','543','175','26','11','true','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','2677fbf4a4a6dec69ff52265addab713fe48ad1f','Nick Wellnhofer','fix -wtautological-pointer-compare warnings  skip tautological pointer comparisons on pthread systems where we don\'t use the weak symbols hack.','threads.c','543','175','26','11','true','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','2677fbf4a4a6dec69ff52265addab713fe48ad1f','Nick Wellnhofer','fix -wtautological-pointer-compare warnings  skip tautological pointer comparisons on pthread systems where we don\'t use the weak symbols hack.','threads.c','543','175','26','11','true','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','45efd0b05b01949301ee1fa6c973d34187b63c2b','Nick Wellnhofer','build with \"-wall -wextra\"  remove warning options that are enabled with \"-wall -wextra\".  disable -warray-bounds warning that produces a (seemingly) false positive in xpath.c.','configure.ac','1616','0','2','2','false','false','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','790c230fcfbc3d9d5cc272479dc6d0d8765fb9d7','Nick Wellnhofer','run travis tests with -werror','.travis.yml','18','0','2','2','false','true','false','2017-11-27 14:35:29+01:00'),('libxml2','2.9.7','d4049198707f7d7c344632a73119f847b6e5b217','ccpaging','add resource file to windows dll  add a resource file containing verison information for the windows dll. this is only used by the msvc build for now.','Makefile.msvc','379','0','5','2','false','false','false','2017-11-27 16:33:00+01:00'),('libxml2','2.9.7','d4049198707f7d7c344632a73119f847b6e5b217','ccpaging','add resource file to windows dll  add a resource file containing verison information for the windows dll. this is only used by the msvc build for now.','configure.js','647','178','12','0','false','false','false','2017-11-27 16:33:00+01:00'),('libxml2','2.9.7','d4049198707f7d7c344632a73119f847b6e5b217','ccpaging','add resource file to windows dll  add a resource file containing verison information for the windows dll. this is only used by the msvc build for now.','libxml2.rc','32','0','36','0','false','false','false','2017-11-27 16:33:00+01:00'),('libxml2','2.9.7','706926fddf81a2b92fa76cfc4898cd234aa7cdbc','Nick Wellnhofer','fix icu library filenames on windows/msvc  fixes bug 790119.','Makefile.msvc','383','0','5','1','true','false','false','2017-11-27 18:26:24+01:00'),('libxml2','2.9.7','8ac759a6e6a61476a81449bdd67bc85025b07fcd','Nick Wellnhofer','build more test executables on windows/msvc  build all test executables required by \'make checktests\'.','Makefile.msvc','386','0','3','0','false','false','false','2017-11-27 18:26:32+01:00'),('libxml2','2.9.7','ad88b54f1a28a8565964a370b5d387927b633c0d','Daniel Veillard','improve handling of context input_id  for https://bugzilla.gnome.org/show_bug.cgi?id=772726 this was used in xmlsec to detect issues with accessing external entities and prevent them, but was unreliable, based on a patch from aleksey sanin  * parser.c: make sure input_id is incremented when creating sub-entities             for parsing or when parsing out of context','parser.c','10226','3464','8','0','false','false','false','2017-12-08 09:42:31+01:00'),('libxml2','2.9.7','132af1a0d1e949ea0a488c31689f83c1dde7df7d','Nick Wellnhofer','fix buffer over-read in xmlparsencnamecomplex  calling grow can halt the parser if the buffer grows too large. this will set the buffer to an empty string. return immediately in this case, otherwise the \"current\" pointer is advanced leading to a buffer over-read.  found with oss-fuzz. see  https://oss-fuzz.com/testcase?key=6683819592646656 https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=5031','parser.c','10226','3464','1','1','true','false','false','2018-01-08 18:48:01+01:00'),('libxml2','2.9.7','1637d612d15318496804d59fc92594d732c5258a','Nick Wellnhofer','disable pointer-overflow ubsan checks under travis  clang 5 added ubsan checks for pointer overflow which are triggered by an api test.','.travis.yml','18','0','1','1','false','true','false','2018-01-08 19:19:42+01:00'),('libxml2','2.9.7','6e6ae5daa6cd9640c9a83c1070896273e9b30d14','Joel Hockey','change calls to xmlcharencinput to set flush false when not final call. having flush incorrectly set to true causes errors for icu.','HTMLparser.c','4770','1393','1','1','false','false','false','2018-01-08 19:57:53+01:00'),('libxml2','2.9.7','6e6ae5daa6cd9640c9a83c1070896273e9b30d14','Joel Hockey','change calls to xmlcharencinput to set flush false when not final call. having flush incorrectly set to true causes errors for icu.','parserInternals.c','1309','385','1','1','false','false','false','2018-01-08 19:57:53+01:00'),('libxml2','2.9.7','6e6ae5daa6cd9640c9a83c1070896273e9b30d14','Joel Hockey','change calls to xmlcharencinput to set flush false when not final call. having flush incorrectly set to true causes errors for icu.','xmlIO.c','2127','707','2','2','false','false','false','2018-01-08 19:57:53+01:00'),('libxml2','2.9.7','60dded12cbf1705927803c5ed615a7a0132aebbd','Nick Wellnhofer','clear entity content in case of errors  this only affects recovery mode and avoids integer overflow in xmlstringgetnodelist and possibly other nasty surprises.  see bug 783052 and  https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3874 https://bugs.chromium.org/p/chromium/issues/detail?id=796804','parser.c','10228','3465','3','1','true','false','false','2018-01-22 15:23:22+01:00'),('libxml2','2.9.7','ab362ab0ad3af54406ae8237a525405c6e2a705b','Nick Wellnhofer','halt parser in case of encoding error  should fix crbug.com/793715, although i wasn\'t able to reproduce the issue.','parser.c','10229','3465','1','0','true','false','false','2018-01-22 15:42:26+01:00'),('libxml2','2.9.8','ab362ab0ad3af54406ae8237a525405c6e2a705b','Nick Wellnhofer','halt parser in case of encoding error  should fix crbug.com/793715, although i wasn\'t able to reproduce the issue.','parser.c','10229','3465','1','0','true','false','false','2018-01-22 15:42:26+01:00'),('libxml2','2.9.8','707ad080e61014ab4a6d60dc12875e233c1f673c','Nick Wellnhofer','fix xmlparserentitycheck  a previous commit removed the check for xml_err_entity_loop which is required to abort early in case of excessive entity recursion.','parser.c','10229','3466','1','1','true','false','false','2018-01-23 16:37:54+01:00'),('libxml2','2.9.8','d910e99c322a0895955038c700471e9b1fd91fa6','Patrick Welche','python: remove single use of _pyverify_fd  _pyverify_fd disappeared from python with:    https://hg.python.org/cpython/rev/e88e2049b793  https://bugzilla.gnome.org/show_bug.cgi?id=776815','types.c','691','163','0','2','false','false','false','2018-03-05 16:29:58+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','configure.ac','1616','0','1','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk0.html','301','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk12.html','925','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk13.html','652','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk14.html','470','0','1','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk16.html','374','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk17.html','579','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk18.html','459','0','1','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk2.html','416','0','1','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk20.html','329','0','1','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk22.html','595','0','0','4','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk24.html','1001','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk25.html','449','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk28.html','568','0','1','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk4.html','350','0','0','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIchunk5.html','293','0','0','2','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIfiles.html','3593','0','3','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIfunctions.html','2348','0','8','5','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','APIsymbols.html','3589','0','3','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-encoding.html','226','0','9','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-hash.html','219','0','11','6','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-list.html','226','0','6','6','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-xpath.html','538','0','4','4','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2.devhelp','3576','0','2','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml-encoding.html','128','0','5','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml-hash.html','119','0','10','7','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml-list.html','120','0','6','6','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml-xpath.html','316','0','4','4','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-api.xml','18523','1','23','10','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2-refs.xml','32133','0','21','44','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2.xsa','51','0','36','15','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','news.html','2734','0','47','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','xml.html','6152','0','48','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','libxml2.syms','1806','0','7','0','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','18890f471c420411aa3c989e104d090966ec9dbf','Daniel Veillard','release of libxml2-2.9.8  * configure.ac doc/* libxml2.syms testapi.c: updated for the new release','testapi.c','42079','6555','39','1','false','false','false','2018-03-05 17:09:43+01:00'),('libxml2','2.9.8','7abec671473b837f99181442d59edd0cc2ee01d1','Nick Wellnhofer','nan and inf fixes for pre-c99 compilers  on some pre-c99 compilers, the nan and infinity macros don\'t expand to constant expressions.  some msvc versions complain about floating point division by zero in constants.  thanks to fabrice manfroi for the report.','xpath.c','9803','3124','10','9','true','false','false','2018-03-16 15:09:42+01:00'),('libxml2','2.9.8','7abec671473b837f99181442d59edd0cc2ee01d1','Nick Wellnhofer','nan and inf fixes for pre-c99 compilers  on some pre-c99 compilers, the nan and infinity macros don\'t expand to constant expressions.  some msvc versions complain about floating point division by zero in constants.  thanks to fabrice manfroi for the report.','xpath.c','9803','3124','10','9','true','false','false','2018-03-16 15:09:42+01:00'),('libxml2','2.9.8','7a1bd7f6497ac33a9023d556f6f47a48f01deac0','Nick Wellnhofer','revert \"change calls to xmlcharencinput to set flush false\"  this reverts commit 6e6ae5daa6cd9640c9a83c1070896273e9b30d14 which broke decoding of larger documents with icu.  see https://bugs.chromium.org/p/chromium/issues/detail?id=820163','HTMLparser.c','4770','1393','1','1','true','false','false','2018-03-17 00:03:24+01:00'),('libxml2','2.9.8','7a1bd7f6497ac33a9023d556f6f47a48f01deac0','Nick Wellnhofer','revert \"change calls to xmlcharencinput to set flush false\"  this reverts commit 6e6ae5daa6cd9640c9a83c1070896273e9b30d14 which broke decoding of larger documents with icu.  see https://bugs.chromium.org/p/chromium/issues/detail?id=820163','parserInternals.c','1309','385','1','1','true','false','false','2018-03-17 00:03:24+01:00'),('libxml2','2.9.8','7a1bd7f6497ac33a9023d556f6f47a48f01deac0','Nick Wellnhofer','revert \"change calls to xmlcharencinput to set flush false\"  this reverts commit 6e6ae5daa6cd9640c9a83c1070896273e9b30d14 which broke decoding of larger documents with icu.  see https://bugs.chromium.org/p/chromium/issues/detail?id=820163','xmlIO.c','2127','707','2','2','true','false','false','2018-03-17 00:03:24+01:00'),('libxml2','2.9.8','ebe12882ee7e14fa6463bb07d7de5f5388f09573','Nick Wellnhofer','fix inconsistency in xmlxpathisinf  we don\'t use huge_val for infinity after the most recent fix.','xpath.c','9803','3124','2','2','true','false','false','2018-04-16 18:18:11+02:00'),('libxml2','2.9.8','e22a83b1d095dac25ce05e1a2d9f263f41d11c68','Nick Wellnhofer','stop using xpath_op_reset  it only sets the context node to null which doesn\'t seem useful and can even cause bugs like bug #795299:  https://bugzilla.gnome.org/show_bug.cgi?id=795299','xpath.c','9772','3114','3','34','true','false','false','2018-04-16 18:20:43+02:00'),('libxml2','2.9.8','938835e763277684274ac31afc08fc40fa419aae','Nick Wellnhofer','don\'t change context node in xmlxpathroot','xpath.c','9771','3114','1','2','false','false','false','2018-04-16 18:28:42+02:00'),('libxml2','2.9.8','029d0e960c02d83111acb5ab057ee055821943f7','Nick Wellnhofer','avoid unnecessary backups of the context node','xpath.c','9729','3114','0','42','false','false','false','2018-04-16 18:28:42+02:00'),('libxml2','2.9.8','665df41dcc6c4c3a609907c979b6c16472593d0d','Nick Wellnhofer','simplify and harden nodeset filtering  if a nodeset to be filtered is empty, it can be returned without popping it from the stack.  make sure to restore the context node in all error paths and never set it to null.  save and restore the context node in rangeto operations.','xpath.c','9679','3109','41','111','true','false','false','2018-04-16 19:45:37+02:00'),('libxml2','2.9.8','fa33bf317aa9b455e08b211252092dd9110c49fb','Nick Wellnhofer','improve restoring of context size and position  restore context size and position where it is modified, not in seemingly random places.','xpath.c','9652','3109','53','80','false','false','false','2018-04-16 20:23:48+02:00'),('libxml2','2.9.8','e61c82175e7b9289f751755dacc92d2c29fb6ffe','Nick Wellnhofer','run travis asan tests with \"sudo: required\"  see https://github.com/travis-ci/travis-ci/issues/9033','.travis.yml','19','0','1','0','false','false','false','2018-04-16 20:46:13+02:00'),('libxml2','2.9.8','35e83488505d501864826125cfe6a7950d6cba78','Daniel Veillard','html noscript should not close p  for https://bugzilla.gnome.org/show_bug.cgi?id=795343  - htmlparser.c: noscript should not close <p> but it should close <script>','HTMLparser.c','4770','1393','1','1','false','false','false','2018-04-18 16:04:27+02:00'),('libxml2','2.9.8','d2293cdbc83b3ca79b9d7132c5a62dfd7e3751be','Andrey Bienkowski','remove a misleading line from xmlcharencoutput  closes: https://bugzilla.gnome.org/show_bug.cgi?id=793028  it seams this line was accidentally copied over from xmlcharencoutfunc. in xmlcharencoutput output is a pointer so incrementing it by ret can point it where it wasn\'t supposed to be pointing. luckily the current implementation doesn\'t dereference the pointer after advancing it.  signed-off-by: daniel veillard <veillard@redhat.com>','encoding.c','2817','657','0','2','false','false','false','2018-07-23 10:21:38+08:00'),('libxml2','2.9.8','b7c50b8ddeae4662c639369360f34b832b6b2e49','Nick Wellnhofer','remove stray character from comment  fixes bug #795316:  https://bugzilla.gnome.org/show_bug.cgi?id=795316','xpath.c','9652','3109','1','1','true','false','false','2018-07-30 12:40:59+02:00'),('libxml2','2.9.8','a436374994c47b12d5de1b8b1d191a098fa23594','Nick Wellnhofer','fix nullptr deref with xpath logic ops  if the xpath stack is corrupted, for example by a misbehaving extension function, the \"and\" and \"or\" xpath operators could dereference null pointers. check that the xpath stack isn\'t empty and optimize the logic operators slightly.  closes: https://gitlab.gnome.org/gnome/libxml2/issues/5  also see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=901817 https://bugzilla.redhat.com/show_bug.cgi?id=1595985  this is cve-2018-14404.  thanks to guy inbar for the report.','xpath.c','9650','3111','4','6','true','false','false','2018-07-30 12:54:38+02:00'),('libxml2','2.9.8','2240fbf5912054af025fb6e01e26375100275e74','Nick Wellnhofer','fix infinite loop in lzma decompression  check the liblzma error code more thoroughly to avoid infinite loops.  closes: https://gitlab.gnome.org/gnome/libxml2/issues/13 closes: https://bugzilla.gnome.org/show_bug.cgi?id=794914  this is cve-2018-9251 and cve-2018-14567.  thanks to dongliang mu and simon wörner for the reports.','xzlib.c','585','154','9','0','true','false','false','2018-07-30 14:35:17+02:00'),('libxml2','2.9.8','173ea684dd355c68c3a9f521d108ff10c2fb3f5d','林博仁(Buo-ren Lin)','don\'t instruct user to run make when autogen.sh failed  currently the autogen script will always tell user to run make even when the configure script failed, this patch changes the behavior to only show this message when the configure script terminates without error.','autogen.sh','71','0','7','2','true','false','false','2018-08-19 19:02:12+02:00'),('libxml2','2.9.8','b6ab8b449cf47e5992d803fc588fe7e621f4526d','Nick Wellnhofer','improve error message if pkg.m4 couldn\'t be found  check whether aclocal.m4 contains the pkg.m4 macro package after running autoreconf and print a more helpful error message.  thanks to 林博仁 (buo-ren lin) for the initial patch.  closes: #21','autogen.sh','80','0','9','0','true','false','false','2018-08-19 19:31:19+02:00'),('libxml2','2.9.8','19f5efd677208efd530c75ec8f5aa7d19b8a3df9','Vitaly Buka','change dir to $thedir after aclocal_path check autoreconf creates aclocal.m4 in $srcdir','autogen.sh','81','0','2','2','false','false','false','2018-08-23 20:42:23+00:00'),('libxml2','2.9.8','c65c9e8ee07e2dab0647392c2bd1795a5bc99829','Michael Haubenwallner','really declare dllexport/dllimport for cygwin  cygwin does not define _win32, but still requires dllexport/dllimport tags for when applications use the --disable-auto-import linker flag, probably set by the gl_woe32_dll autoconf macro in woe32-dll.m4 file.','xmlexports.h','0','0','2','2','false','false','false','2018-08-31 11:42:14+02:00'),('libxml2','2.9.8','d2ef114c6b0d9a840b94cdecf554a873fc6f6df5','Felix Bünemann','fix xmltextreadernext with preparsed document  this fixes the traversal of parent nodes using xmltextreadernext() when the reader is based on a preparsed document (created using xmlreaderwalker(doc)).  without this fix the parser will abort even though there are parent nodes it should traverse to, if it is not currently on an element or attribute node. this is incorrect, since it can be for example on a text node when it needs to enter backtracking.','xmlreader.c','3869','1285','3','6','true','false','false','2018-09-01 14:31:34+02:00'),('libxml2','2.9.8','bfec41b3de1cbd35e547b57c80ae3a5101f8891c','Felix Bünemann','support xmltextreadernextsibling w/o preparsed doc  this implements missing support for readers that are not based on a preparsed document in xmltextreadernextsibling.','xmlreader.c','3870','1285','6','7','false','false','false','2018-09-01 14:32:25+02:00'),('libxml2','2.9.8','1dafb427d9e61559fbe12e530537b8096e4c315c','Nick Wellnhofer','don\'t include sax.h from globals.h  sax.h contains a legacy interface with several unprefixed symbols like `reference`, causing severe namespace pollution. the globals.h header doesn\'t need any of these symbols, so remove the #include.','globals.h','159','0','0','1','false','false','false','2018-09-03 15:33:19+02:00'),('libxml2','2.9.8','b697d7bb5953faa2e699aafcca4058f4caffe734','Greg Hildstrom','fix xmlschemavalidctxtptr reuse memory leak  when reusing an xmlschemavalidctxtptr to validate multiple xml documents against the same schema, there is a memory leak in xmlschemas.c in xmlschemaclearvalidctxt(). the vctxt->idckeys and associated counters are not cleaned up in xmlschemaclearvalidctxt() as they are in xmlschemafreevalidctxt(). as a result, vctxt->idckeys grows with each xmlvalidatedoc() call that uses the same context and that memory is never freed. similarly, vctxt->nbidckeys and vctxt->sizeidckeys increment and are never reset.  closes: #23','xmlschemas.c','18788','4696','11','0','true','false','false','2018-09-04 16:48:15+02:00'),('libxml2','2.9.8','dc6d2a4987879a5d50b2239ae10d0bc0dc1dbf11','Nick Wellnhofer','don\'t run icu_parse_test if euc-jp is unsupported  closes: #25','runtest.c','3274','678','7','3','false','false','false','2018-09-04 17:13:29+02:00'),('libxml2','2.9.8','60173c821eff9e01f1b8bab4f722150a4c3cf82f','Nick Wellnhofer','reset html parser input pointers on encoding failure  call xmlbufresetinput before bailing out if switching the encoding fails. otherwise, the input pointers could be left in an invalid state.  similar to commit f9e7997e803457b714352c4d51a96104ae298d94 for the xml parser.  thanks to yunho kim for the report.  closes: #27','HTMLparser.c','4770','1393','1','1','false','false','false','2018-09-11 14:08:39+02:00'),('libxml2','2.9.8','123234f2cfcd9e9b9f83047eee1dc17b4c3f4407','Nick Wellnhofer','free input buffer in xmlhaltparser  this avoids miscalculation of available bytes.  thanks to yunho kim for the report.  closes: #26','parser.c','10234','3467','5','0','false','false','false','2018-09-11 15:06:17+02:00'),('libxml2','2.9.8','123234f2cfcd9e9b9f83047eee1dc17b4c3f4407','Nick Wellnhofer','free input buffer in xmlhaltparser  this avoids miscalculation of available bytes.  thanks to yunho kim for the report.  closes: #26','759573.xml.err','27','0','7','10','false','false','false','2018-09-11 15:06:17+02:00'),('libxml2','2.9.8','8c9daf790abfc06e8ca3a44652542c577bb67d49','Nick Wellnhofer','check return value of nodepush in xmlsax2startelement  if the maximum depth is exceeded, nodepush halts the parser which results in freeing the input buffer since the previous commit. this invalidates the attribute pointers, so the error condition must be checked.  found by oss-fuzz.','SAX2.c','2000','683','8','2','true','false','false','2018-09-12 13:52:47+02:00'),('libxml2','2.9.8','0ed6addb8f165ae533fbe812e4a973c7b682ec7e','Nick Wellnhofer','unlink node before freeing it in xmlsax2startelement  the node may have been added to the document already, so it must be unlinked first. thanks to david kilzer for spotting this.','SAX2.c','2002','683','2','0','false','false','false','2018-09-22 15:41:01+02:00'),('libxml2','2.9.8','73b2417c5148af1f89708031b4bf96f40d1195e0','Michael Haubenwallner','variables need \'extern\' in static lib on cygwin  while the dllimport/dllexport macros now work for cygwin, using the static library still requires variables to be declared as \'extern\'. this is a regression of c65c9e8ee07e2dab0647392c2bd1795a5bc99829, found+fixed by bruno haible using static libxml embedded in gettext.','xmlexports.h','0','0','1','1','true','false','false','2018-09-22 15:45:02+02:00'),('libxml2','2.9.8','da35eeae5b92b88d8ebdb64b4b327ac1c2cf1bce','Nick Wellnhofer','add newlines to \'xmllint --xpath\' output  separate nodes in a node-set with newlines and always add a terminating newline. this is a breaking change but the old behavior of dumping text nodes without separator was mostly useless.  also use buffered i/o when dumping node-sets.','xmllint.c','2754','868','13','12','false','false','false','2018-09-23 01:34:26+02:00'),('libxml2','2.9.8','39fbfb4fd08eae88d4b0c15f3a8ac33babc740e6','Nick Wellnhofer','use actual doc in xmltextreaderread*xml  otherwise the encoding of the document is ignored and non-ascii characters are serialized as numeric references even if the encoding is specified as utf-8.','xmlreader.c','3870','1285','4','2','false','false','false','2018-09-25 13:55:46+02:00'),('libxml2','2.9.8','ee501f5449e14a25115a46e8bedec728ca00a89d','Nick Wellnhofer','stop using doc->charset outside parser code  doc->charset does not specify the in-memory encoding which is always utf-8.','HTMLtree.c','776','270','4','34','false','false','false','2018-10-13 16:47:01+02:00'),('libxml2','2.9.8','ee501f5449e14a25115a46e8bedec728ca00a89d','Nick Wellnhofer','stop using doc->charset outside parser code  doc->charset does not specify the in-memory encoding which is always utf-8.','c14n.c','1248','360','0','9','false','false','false','2018-10-13 16:47:01+02:00'),('libxml2','2.9.8','ee501f5449e14a25115a46e8bedec728ca00a89d','Nick Wellnhofer','stop using doc->charset outside parser code  doc->charset does not specify the in-memory encoding which is always utf-8.','tree.h','824','0','1','1','false','false','false','2018-10-13 16:47:01+02:00'),('libxml2','2.9.8','ee501f5449e14a25115a46e8bedec728ca00a89d','Nick Wellnhofer','stop using doc->charset outside parser code  doc->charset does not specify the in-memory encoding which is always utf-8.','xmlsave.c','1838','602','0','3','false','false','false','2018-10-13 16:47:01+02:00'),('libxml2','2.9.8','d459831c1b308c2095a1b73800e0238269d4106a','Nick Wellnhofer','fix html serialization with utf-8 encoding  if the encoding is specified as utf-8, make sure to use a null encoding handler.','HTMLtree.c','776','270','40','44','true','false','false','2018-10-13 16:47:13+02:00'),('libxml2','2.9.8','fc27759d2a5984ecf7a0d3183cafa4e828125ac6','Nick Wellnhofer','fix msvc build with lzma','Makefile.msvc','391','0','6','0','true','false','false','2018-11-06 10:17:35+01:00'),('libxml2','2.9.8','1567b55b72b8366ce120ed042e03ed5b50d191d7','Nick Wellnhofer','set doc on element obtained from freeelems  in commit 8c9daf79, a call to xmlfreenode was added in xmlsax2startelementns. if a node was obtained from the freeelems list, make sure to set the doc, otherwise xmlfreenode wouldn\'t realize that the node name might be in the dictionary, causing an invalid free.  note that the issue fixed in commit 8c9daf79 requires commit 0ed6addb and this one to work properly.  found by oss-fuzz.','SAX2.c','2003','683','1','0','true','false','false','2018-11-22 16:28:46+01:00'),('libxml2','2.9.8','3776cb4745cecd8f477b45857c9033a908f25cf3','Nick Wellnhofer','fix memory leak in xmlswitchinputencodingint error path  found by oss-fuzz.','parserInternals.c','1311','385','10','0','true','false','false','2018-11-22 16:28:46+01:00'),('libxml2','2.9.8','c8e5f9588b986c6e81c9028825aeff8151375d28','Nikolai Weibull','problem with data in interleave in relaxng validation  reported in https://mail.gnome.org/archives/xml/2018-october/msg00003.html  the issue seems to be that we build groups of what can be matched by the interleave, but that these groups don’t include data, list, and value elements, only element and text elements.  this patch extends xmlrelaxnggetelements so that it can return these elements for us in xmlrelaxngcomputeinterleaves.  then we make sure to updatexmlrelaxngnodematcheslist as well so that it accepts the correct types.','relaxng.c','8360','2285','12','4','false','false','false','2018-11-22 18:14:47+01:00'),('libxml2','2.9.9','c8e5f9588b986c6e81c9028825aeff8151375d28','Nikolai Weibull','problem with data in interleave in relaxng validation  reported in https://mail.gnome.org/archives/xml/2018-october/msg00003.html  the issue seems to be that we build groups of what can be matched by the interleave, but that these groups don’t include data, list, and value elements, only element and text elements.  this patch extends xmlrelaxnggetelements so that it can return these elements for us in xmlrelaxngcomputeinterleaves.  then we make sure to updatexmlrelaxngnodematcheslist as well so that it accepts the correct types.','relaxng.c','8360','2285','12','4','false','false','false','2018-11-22 18:14:47+01:00'),('libxml2','2.9.9','3c614191aacaa3402f96a080f4d2909fe7bda9f9','Nikolai Weibull','add compile and libxml2-config.cmake to .gitignore','.gitignore','125','0','2','0','false','false','false','2018-11-29 20:59:55+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','relaxng.c','8371','2291','12','1','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0_0','None','None','0','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0_0.err','1','0','1','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0_err','1','0','1','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0_valid','None','None','0','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0.inc','5','0','5','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0.rng','11','0','11','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','4338c310eb5e9402d0d4bf1cdf6d60430ac8a9a8','Nikolai Weibull','look inside divs for starts and defines inside include  relax ng allows for div elements inside of include elements.  we need to look inside those div elements for start and define elements that may be redefining start and define elements in the included grammar.','include0_0.xml','1','0','1','0','false','false','false','2018-11-29 21:00:46+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','relaxng.c','8375','2292','10','6','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0_0','None','None','0','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0_0.err','1','0','1','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0_err','1','0','1','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0_valid','None','None','0','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0.rng','15','0','15','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','46da8fc5290ed3243d0c137d712a1ed05c489f5f','Nikolai Weibull','allow choice within choice in nameclass in relax ng  the pattern nameclass allows for nested choice elements, for example    <name>     <choice>       <choice>         <name>a</name>         <name>b</name>       </choice>       <name>c</name>     </choice>   </name>  which is semantically equivalent to    <name>     <choice>       <name>a</name>       <name>b</name>       <name>c</name>     </choice>   </name>  the old code didn’t handle this correctly, as it never expected a choice inside another choice.  this patch fixes this by flattening any nested choices.  this pattern of nested choice elements comes up in relax ng simplification, where all choice elements are rewritten in this nested manner, see section 4.12 of the relax ng specification.','anyName0_0.xml','1','0','1','0','true','false','false','2018-11-29 21:03:11+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','relaxng.c','8378','2293','3','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1_0','None','None','0','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1_0.err','1','0','1','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1_err','1','0','1','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1_valid','None','None','0','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1-0.inc','12','0','12','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1-1.inc','7','0','7','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1.rng','12','0','12','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c64d4efb31ce1d1bec430ce2306d0f538250b960','Nikolai Weibull','remove redefined starts and defines inside include elements  when including a grammar from another grammar, we need to make sure that any redefines of starts and includes that that grammar does inside any of its include elements are also removed.','include1_0.xml','1','0','1','0','false','false','false','2018-11-29 21:06:06+01:00'),('libxml2','2.9.9','c7461f6547a2a1bbda63a072ace0776a285dab48','Mohammed Sadiq','reader: fix documentation comment','xmlreader.c','3870','1285','1','1','true','false','false','2018-11-29 21:57:45+01:00'),('libxml2','2.9.9','25f13e77e6ce47e7a87559813e802ffb8c3b957f','Thomas Holder','add --relative to testuri  example: testuri --relative --base file:///a/b/c file:///a/x/y  result: ../x/y','testURI.c','109','46','12','1','false','false','false','2018-11-29 22:11:59+01:00'),('libxml2','2.9.9','b1f87c0e4376a993e682f59471e2c455a9179e22','Thomas Holder','fix building relative uris  examples:  testuri --relative --base file:///a file:///b new correct result: b old incorrect result: ../b  testuri --relative --base file:///a file:/// new correct result: ./ old incorrect result: ../  testuri --relative --base file:///a/b file:///a/ new correct result: ./ old incorrect result: ../../a/','uri.c','1524','584','11','11','true','false','false','2018-11-29 22:19:44+01:00'),('libxml2','2.9.9','a71b98ec9dee2d44e16a74ab8472868891bbc7b4','Thomas Holder','cleanup: remove some unreachable code','uri.c','1506','577','4','23','false','false','false','2018-11-29 22:25:35+01:00'),('libxml2','2.9.9','6fc04d714a019cb3be351bc472f7a64a08f51008','Nick Wellnhofer','revert \"support xmltextreadernextsibling w/o preparsed doc\"  this reverts commit bfec41b3de1cbd35e547b57c80ae3a5101f8891c which caused problems with the xml::libxml perl bindings.  https://mail.gnome.org/archives/xml/2018-november/msg00010.html','xmlreader.c','3869','1285','7','6','false','false','false','2018-12-01 14:32:58+01:00'),('libxml2','2.9.9','7c4949afab383f07fc7ba467b6c24415ff8096e5','Nikolai Weibull','fix \"problem with data in interleave in relaxng validation\"  fixes commit c8e5f958.  https://mail.gnome.org/archives/xml/2018-november/msg00029.html','relaxng.c','8379','2294','3','3','true','false','false','2019-01-01 20:02:36+01:00'),('libxml2','2.9.9','f8a8c1f59db355b46962577e7b74f1a1e8149dc6','Daniel Veillard','release of libxml2-2.9.9  * configure.ac doc/news.html doc/xml.html doc/libxml2.xsa: making changes for     the release  signed-off-by: daniel veillard <veillard@redhat.com>','configure.ac','1616','0','1','1','false','false','false','2019-01-03 19:14:17+01:00'),('libxml2','2.9.9','f8a8c1f59db355b46962577e7b74f1a1e8149dc6','Daniel Veillard','release of libxml2-2.9.9  * configure.ac doc/news.html doc/xml.html doc/libxml2.xsa: making changes for     the release  signed-off-by: daniel veillard <veillard@redhat.com>','libxml2.xsa','57','0','40','34','false','false','false','2019-01-03 19:14:17+01:00'),('libxml2','2.9.9','f8a8c1f59db355b46962577e7b74f1a1e8149dc6','Daniel Veillard','release of libxml2-2.9.9  * configure.ac doc/news.html doc/xml.html doc/libxml2.xsa: making changes for     the release  signed-off-by: daniel veillard <veillard@redhat.com>','news.html','2800','0','66','1','false','false','false','2019-01-03 19:14:17+01:00'),('libxml2','2.9.9','f8a8c1f59db355b46962577e7b74f1a1e8149dc6','Daniel Veillard','release of libxml2-2.9.9  * configure.ac doc/news.html doc/xml.html doc/libxml2.xsa: making changes for     the release  signed-off-by: daniel veillard <veillard@redhat.com>','xml.html','6213','0','67','0','false','false','false','2019-01-03 19:14:17+01:00'),('libxml2','2.9.9','efe8c093c408311ddbb6995c92a9e077386a57bf','Nick Wellnhofer','memory leak in xmlfreeid (xmlreader.c)  fix a memory leak in xmlreader\'s private copy of xmlfreeid. only affects validation with nodict.  found by oss-fuzz.','xmlreader.c','3871','1286','2','0','true','false','false','2019-01-06 14:05:36+01:00'),('libxml2','2.9.9','57a3af56f4ee4418948dfbff8c02ae1d79de565e','Nick Wellnhofer','memory leak in xmlfreetextreader  in error cases, there might still be elements in the vstate table. since vstatevpop in valid.c is private, we have to pop the elements with xmlvalidatepopelement. this inspects nodes of the document, so the reader doc must be freed after the clearing the vstate table.  found by oss-fuzz.','xmlreader.c','3873','1287','7','5','true','false','false','2019-01-06 14:05:36+01:00'),('libxml2','2.9.9','157cd3aed70845564e2ecc9754f3f826a3c9c65e','Nick Wellnhofer','fix null pointer deref in xmltextreadervalidateentity  found by oss-fuzz.','xmlreader.c','3874','1287','3','2','true','false','false','2019-01-06 14:05:36+01:00'),('libxml2','2.9.9','8919885ff9363cecd4260827dd89514c33f3dc30','Nick Wellnhofer','fix -wformat-truncation warnings (gcc 8)','parser.c','10234','3467','1','1','true','false','false','2019-01-06 14:24:59+01:00'),('libxml2','2.9.9','8919885ff9363cecd4260827dd89514c33f3dc30','Nick Wellnhofer','fix -wformat-truncation warnings (gcc 8)','runtest.c','3291','696','49','32','true','false','false','2019-01-06 14:24:59+01:00'),('libxml2','2.9.9','8919885ff9363cecd4260827dd89514c33f3dc30','Nick Wellnhofer','fix -wformat-truncation warnings (gcc 8)','testrecurse.c','692','188','2','2','true','false','false','2019-01-06 14:24:59+01:00'),('libxml2','2.9.9','19f0950d30208c4a37fe90b25ed82c5bdc44287a','Nick Wellnhofer','fix -wcast-function-type warnings (gcc 8)  use xmlgenericerror instead of fprintf as error handler. it also prints to stderr by default.','debugXML.c','2570','785','5','11','true','false','false','2019-01-06 14:25:12+01:00'),('libxml2','2.9.9','19f0950d30208c4a37fe90b25ed82c5bdc44287a','Nick Wellnhofer','fix -wcast-function-type warnings (gcc 8)  use xmlgenericerror instead of fprintf as error handler. it also prints to stderr by default.','error.c','647','229','1','1','true','false','false','2019-01-06 14:25:12+01:00'),('libxml2','2.9.9','19f0950d30208c4a37fe90b25ed82c5bdc44287a','Nick Wellnhofer','fix -wcast-function-type warnings (gcc 8)  use xmlgenericerror instead of fprintf as error handler. it also prints to stderr by default.','testRelax.c','126','33','3','9','true','false','false','2019-01-06 14:25:12+01:00'),('libxml2','2.9.9','19f0950d30208c4a37fe90b25ed82c5bdc44287a','Nick Wellnhofer','fix -wcast-function-type warnings (gcc 8)  use xmlgenericerror instead of fprintf as error handler. it also prints to stderr by default.','testSchemas.c','117','30','3','9','true','false','false','2019-01-06 14:25:12+01:00'),('libxml2','2.9.9','19f0950d30208c4a37fe90b25ed82c5bdc44287a','Nick Wellnhofer','fix -wcast-function-type warnings (gcc 8)  use xmlgenericerror instead of fprintf as error handler. it also prints to stderr by default.','xmllint.c','2736','868','16','34','true','false','false','2019-01-06 14:25:12+01:00'),('libxml2','2.9.9','dcae579eca047affba1f5daef98b11b9593388db','Nick Wellnhofer','remove unneeded function pointer casts','runsuite.c','966','201','11','26','false','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','dcae579eca047affba1f5daef98b11b9593388db','Nick Wellnhofer','remove unneeded function pointer casts','runtest.c','3279','696','4','16','false','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','731b50640975e732320567d210e4312846d9ef16','Nick Wellnhofer','add some generated test files to .gitignore','.gitignore','127','0','2','0','false','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','.travis.yml','19','0','2','2','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','gentest.py','779','151','16','8','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','e8fdf5df6e547b44092a549c01bb127aa75c01c7','Nick Wellnhofer','fix unused function warning in testapi.c  check whether all param and return types are known before generating functions for param types. otherwise, unused functions end up in testapi.c.','testapi.c','42059','6547','73','110','true','false','false','2019-01-06 14:25:18+01:00'),('libxml2','2.9.9','7f40ed01f7a7c05a804664822777e42005c5f1d8','Nick Wellnhofer','fix python bindings under windows  - correct linker flags for mingw-w64 - adjust path to find libxml2.dll when running tests','configure.ac','1623','0','8','1','true','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','7f40ed01f7a7c05a804664822777e42005c5f1d8','Nick Wellnhofer','fix python bindings under windows  - correct linker flags for mingw-w64 - adjust path to find libxml2.dll when running tests','Makefile.am','72','0','1','0','true','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','Makefile.am','1203','0','1','5','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','libxml2.bkl','667','0','1','4','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','apibuild.py','1873','725','0','1','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','testThreads.c','220','39','102','31','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','testThreads.c','220','39','102','31','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','testThreadsWin32.c','None','None','0','150','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','testThreadsWin32.c','None','None','0','150','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','Makefile.bcb','260','0','1','3','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','Makefile.mingw','250','0','1','10','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','57d4329bd7440257929b763914bcb5439f53f1f5','Nick Wellnhofer','merge testthreadswin32.c into testthreads.c  apply the same cross-platform modifications as previously in runtest.c.','Makefile.msvc','389','0','1','3','false','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','619534ef2ed501e5206915064a5bc36153a897f7','Nick Wellnhofer','fix windows compiler warning in testc14n.c','testC14N.c','218','53','3','0','true','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','619534ef2ed501e5206915064a5bc36153a897f7','Nick Wellnhofer','fix windows compiler warning in testc14n.c','testC14N.c','218','53','3','0','true','false','false','2019-01-06 14:32:28+01:00'),('libxml2','2.9.9','26828cb3a1294e09e42064f4769d4b3c0a8623b3','Nick Wellnhofer','fix commit \"memory leak in xmlfreeid (xmlreader.c)\"  the recent commit \"memory leak in xmlfreeid (xmlreader.c)\" introduced a double-free.','xmlreader.c','3875','1287','1','0','true','false','false','2019-01-07 18:07:00+01:00'),('libxml2','2.9.9','6b49db2cb235a54b6a3bd91dccf3d98b9cdeaa65','Nick Wellnhofer','fix memory leak in xmlsax2startelement  introduced by a recent commit. only happens if max depth is exceeded in sax1 mode.  found by oss-fuzz.','SAX2.c','2005','684','2','0','true','false','false','2019-01-07 18:07:00+01:00'),('libxml2','2.9.9','b48226f78c626a0fdbaed65793f1a6138de8558f','Nick Wellnhofer','fix memory leaks in xmlparsestarttag2 error paths  found by oss-fuzz.','parser.c','10236','3467','4','2','true','false','false','2019-01-07 18:07:00+01:00'),('libxml2','2.9.9','d3de75782504c9136e504c6356bbae52fedf17e5','Nick Wellnhofer','fix nanohttp.c on mingw  commit e3890546 broke nanohttp.c on (old) mingw. mingw-w64 wasn\'t affected.  should fix #36. thanks to simon sobisch for the report.','wsockcompat.h','5','0','5','0','true','false','false','2019-01-15 12:33:48+01:00'),('libxml2','2.9.9','656df97d6d85a4f37bd7e69de123bd800b4d3918','Nick Wellnhofer','remove outdated html file','libxml-xzlib.html','None','None','0','16','false','false','false','2019-02-15 17:27:15+01:00'),('libxml2','2.9.9','04fbfa3f19274062618ee20557e54c9e9fbfa5c8','Nick Wellnhofer','change bug tracker url','CONTRIBUTING','15','0','1','1','true','false','false','2019-02-15 17:34:45+01:00'),('libxml2','2.9.9','04fbfa3f19274062618ee20557e54c9e9fbfa5c8','Nick Wellnhofer','change bug tracker url','site.xsl','740','0','1','1','true','false','false','2019-02-15 17:34:45+01:00'),('libxml2','2.9.9','04fbfa3f19274062618ee20557e54c9e9fbfa5c8','Nick Wellnhofer','change bug tracker url','xml.html','6213','0','4','4','true','false','false','2019-02-15 17:34:45+01:00'),('libxml2','2.9.9','538d827cc015f4f95461b8c519316c5b928ac9ca','Nick Wellnhofer','change git repo url','CONTRIBUTING','15','0','1','1','false','false','false','2019-02-15 17:37:17+01:00'),('libxml2','2.9.9','538d827cc015f4f95461b8c519316c5b928ac9ca','Nick Wellnhofer','change git repo url','xml.html','6213','0','4','4','false','false','false','2019-02-15 17:37:17+01:00'),('libxml2','2.9.9','a7fe7ee45938c53a8dd028dd40baa461191a2fd2','Nick Wellnhofer','regenerate news','NEWS','3001','0','448','5','false','false','false','2019-02-15 17:37:19+01:00'),('libxml2','2.9.9','2c8dc7158a3b7b028454abcb6f162c4da28ed80b','Nick Wellnhofer','fix null pointer dereference in xmltextreaderreadouterxml  fix a regression caused by commit 39fbfb4f. if xmltextreaderreadouterxml is called on a pristine xmlreader, the current node is null and must not be dereferenced. move the call to xmltextreaderexpand to the start of the function to make sure that we have a valid node.  fixes #43.','xmlreader.c','3875','1287','2','2','true','false','false','2019-02-25 12:08:48+01:00'),('libxml2','2.9.9','cf68fe3d505dd3f7525ccc28c90f87432a747aa4','Michael Haubenwallner','always define libxml_thread_enabled when enabled  when libxml2 is compiled with threads enabled, have the header file define libxml_thread_enabled even if the subsequent application by itself does not enable threads.  otherwise, the application would see the unthreaded api functions, but these are not exported (where it does make a difference, like on win32 based platforms).','xmlversion.h.in','4','0','0','3','false','false','false','2019-02-28 12:17:57+01:00'),('libxml2','2.9.9','9a82ae30db28696d414f50b69e5e84aa5a70b9b3','Nick Wellnhofer','stop defining _reentrant on some win32 platforms  the _reentrant macro was defined unconditionally on some win32 builds using the microsoft c runtime. it shouldn\'t have an effect under msvcrt and was presumably only defined because of the libxml_thread_enabled issue fixed with the previous commit.','xmlexports.h','0','0','0','9','true','false','false','2019-02-28 12:18:37+01:00'),('libxml2','2.9.9','8161b463f52c365273d110cffa2d980a271f98a8','Nick Wellnhofer','remove debug printf in xmlreader.c  fixes #46.','xmlreader.c','3874','1287','0','1','true','false','false','2019-02-28 12:25:05+01:00'),('libxml2','2.9.9','09797c139e5b0168c87f41b2cea1078d7244638d','Nick Wellnhofer','fix null deref in xmlregexp error path  thanks to shaobo he for the report.','xmlregexp.c','5841','1977','2','0','true','false','false','2019-03-05 15:14:34+01:00'),('libxml2','2.9.9','30a6533e010c740a7281a0c8960b4db9212f5f75','Nick Wellnhofer','fix float casts in xmlxpathsubstringfunction  rewrite conversion of double to int in xmlxpathsubstringfunction, adding range checks to avoid undefined behavior. make sure to add start and length as floating-point numbers before converting to int. fix a bug when rounding negative start indices.  remove unneeded calls to xmlxpathis{inf,nan} and rely on ieee math instead. avoid computing the string length. xmlutf8strsub works as expected if the length of the requested substring exceeds the input.  found with libfuzzer and ubsan.','strings','114','0','8','0','true','false','false','2019-03-08 14:29:59+01:00'),('libxml2','2.9.9','30a6533e010c740a7281a0c8960b4db9212f5f75','Nick Wellnhofer','fix float casts in xmlxpathsubstringfunction  rewrite conversion of double to int in xmlxpathsubstringfunction, adding range checks to avoid undefined behavior. make sure to add start and length as floating-point numbers before converting to int. fix a bug when rounding negative start indices.  remove unneeded calls to xmlxpathis{inf,nan} and rely on ieee math instead. avoid computing the string length. xmlutf8strsub works as expected if the length of the requested substring exceeds the input.  found with libfuzzer and ubsan.','strings','38','0','2','0','true','false','false','2019-03-08 14:29:59+01:00'),('libxml2','2.9.9','30a6533e010c740a7281a0c8960b4db9212f5f75','Nick Wellnhofer','fix float casts in xmlxpathsubstringfunction  rewrite conversion of double to int in xmlxpathsubstringfunction, adding range checks to avoid undefined behavior. make sure to add start and length as floating-point numbers before converting to int. fix a bug when rounding negative start indices.  remove unneeded calls to xmlxpathis{inf,nan} and rely on ieee math instead. avoid computing the string length. xmlutf8strsub works as expected if the length of the requested substring exceeds the input.  found with libfuzzer and ubsan.','xpath.c','9640','3107','27','53','true','false','false','2019-03-08 14:29:59+01:00'),('libxml2','2.9.9','c494a0ba671188e5ab93593c568843087aa6583a','Nick Wellnhofer','fix xmllint dump of xpath namespace nodes  starting with commit da35eeae, xmllint uses the xmlnodedump api to dump xpath nodes. make sure not to access node->doc which doesn\'t work with namespace nodes.','xmllint.c','2736','868','1','1','true','false','false','2019-03-13 11:59:21+01:00'),('libxml2','2.9.9','236dd6ab2e6129ece366117070c7c014500a00c1','Nick Wellnhofer','check xpath stack after calling functions  check that there\'s exactly one return value on the stack after calling xpath functions. otherwise, functions that corrupt the stack without signaling an error could lead to memory errors.  found with libfuzzer and ubsan.','xpath.c','9643','3109','3','0','true','false','false','2019-03-29 13:03:03+01:00'),('libxml2','2.9.9','b9bdb9dbfda8f591f1797ad90f900bf44ad39d45','Nick Wellnhofer','check for integer overflow in xmlxptrevalchildseq  found with libfuzzer and ubsan.','xpointer.c','1849','558','12','2','false','false','false','2019-03-29 13:03:17+01:00'),('libxml2','2.9.9','0f518611542115e0322acb60868750697ca03aab','Nick Wellnhofer','fix compilation with --with-minimum  presence of xmlencodeattributeentities doesn\'t depend on output module.  fixes #52.','save.h','10','0','2','1','true','false','false','2019-04-08 14:04:44+02:00'),('libxml2','2.9.9','91d576de8b890f9a9f86b0d0c711edd3a8ed90a7','Nick Wellnhofer','make configure.ac work with older pkg-config  older versions of pkg.m4 require the action-if-not-found argument of the pkg_check_modules macro to be non-empty. use a colon (null command) instead of an empty string.  fixes #50.','configure.ac','1623','0','2','2','true','false','false','2019-04-09 13:16:50+02:00'),('libxml2','2.9.9','852c93a2dc2224f020aab55a9702f992db404836','Nick Wellnhofer','optional xpath operation limit  optionally limit the maximum numbers of xpath operations when evaluating an expression. useful to avoid timeouts when fuzzing. the following operations count towards the limit:  - xpath operations - location step iterations - union operations  enabled by setting oplimit to a non-zero value. note that it\'s the user\'s responsibility to reset opcount. this allows to enforce the operation limit across multiple reuses of an xpath context.','xpath.h','261','0','6','1','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','852c93a2dc2224f020aab55a9702f992db404836','Nick Wellnhofer','optional xpath operation limit  optionally limit the maximum numbers of xpath operations when evaluating an expression. useful to avoid timeouts when fuzzing. the following operations count towards the limit:  - xpath operations - location step iterations - union operations  enabled by setting oplimit to a non-zero value. note that it\'s the user\'s responsibility to reset opcount. this allows to enforce the operation limit across multiple reuses of an xpath context.','xpath.c','9708','3134','81','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','5153c7baceca65f575efdcbb0244860d97031f96','Nick Wellnhofer','use break statements in xmlxpathcompopeval  this prepares for the next commit.','xpath.c','9716','3134','72','61','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','5153c7baceca65f575efdcbb0244860d97031f96','Nick Wellnhofer','use break statements in xmlxpathcompopeval  this prepares for the next commit.','xpath.c','9716','3134','72','61','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','64115ed62dd01dab81a9157a54738523fe117333','Nick Wellnhofer','optional recursion limit when evaluating xpath expressions  useful to avoid call stack overflows when fuzzing.','xpath.h','264','0','4','1','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','64115ed62dd01dab81a9157a54738523fe117333','Nick Wellnhofer','optional recursion limit when evaluating xpath expressions  useful to avoid call stack overflows when fuzzing.','xpath.c','9731','3137','17','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','2d97a97aa515f1bd3efc35c8ea2aa68676c6f8e1','Nick Wellnhofer','optional recursion limit when parsing xpath expressions  useful to avoid call stack overflows when fuzzing. note that parsing a parenthesized expression currently consumes more than 10 stack frames, so this limit should be set rather low.','xpath.h','265','0','1','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','2d97a97aa515f1bd3efc35c8ea2aa68676c6f8e1','Nick Wellnhofer','optional recursion limit when parsing xpath expressions  useful to avoid call stack overflows when fuzzing. note that parsing a parenthesized expression currently consumes more than 10 stack frames, so this limit should be set rather low.','xpath.c','9744','3142','16','0','false','false','false','2019-04-11 15:35:57+02:00'),('libxml2','2.9.9','fa3166c227f0095204521672b8ce4770dafd0035','Nick Wellnhofer','disable hash randomization when fuzzing  use the fuzzing_build_mode_unsafe_for_production macro proposed by libfuzzer.','dict.c','759','271','2','1','false','false','false','2019-04-12 12:06:34+02:00'),('libxml2','2.9.9','fa3166c227f0095204521672b8ce4770dafd0035','Nick Wellnhofer','disable hash randomization when fuzzing  use the fuzzing_build_mode_unsafe_for_production macro proposed by libfuzzer.','hash.c','688','216','2','1','false','false','false','2019-04-12 12:06:34+02:00'),('libxml2','2.9.9','93a1d2238087c3acc650ba741067f34fb94905fc','Nick Wellnhofer','fix memory leaks in xmlxpathparsenamecomplex error paths  found by oss-fuzz.','xpath.c','9748','3142','7','3','true','false','false','2019-04-16 13:37:47+02:00'),('libxml2','2.9.9','012f8e92847a4e5ff684e7bd8e81a0b1ad104e32','Nick Wellnhofer','limit recursion depth in xmlxpathoptimizeexpression','xpath.c','9764','3147','25','8','false','false','false','2019-04-20 17:01:19+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation  consolidate code paths evaluating xpath predicates and filters.  don\'t push context node on stack when evaluating predicates. i have no idea why this was done. it seems completely useless and trying to pop the context node from a corrupted stack has already caused security issues.  filter nodesets in-place and don\'t create node sets with null gaps which allows to simplify merging a great deal. simply move matched nodes backward and create a compact node set.  merge xmlxpathcompopevalpositionalpredicate into xmlxpathcompopevalpredicate.','chaptersbase','151','0','28','0','false','false','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation  consolidate code paths evaluating xpath predicates and filters.  don\'t push context node on stack when evaluating predicates. i have no idea why this was done. it seems completely useless and trying to pop the context node from a corrupted stack has already caused security issues.  filter nodesets in-place and don\'t create node sets with null gaps which allows to simplify merging a great deal. simply move matched nodes backward and create a compact node set.  merge xmlxpathcompopevalpositionalpredicate into xmlxpathcompopevalpredicate.','chaptersbase','10','0','4','0','false','false','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation  consolidate code paths evaluating xpath predicates and filters.  don\'t push context node on stack when evaluating predicates. i have no idea why this was done. it seems completely useless and trying to pop the context node from a corrupted stack has already caused security issues.  filter nodesets in-place and don\'t create node sets with null gaps which allows to simplify merging a great deal. simply move matched nodes backward and create a compact node set.  merge xmlxpathcompopevalpositionalpredicate into xmlxpathcompopevalpredicate.','xpath.c','9443','3077','303','875','false','false','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','c2f4da1a9328251e9171a48b19b95ce4c699460f','Nick Wellnhofer','improve xpath predicate and filter evaluation  consolidate code paths evaluating xpath predicates and filters.  don\'t push context node on stack when evaluating predicates. i have no idea why this was done. it seems completely useless and trying to pop the context node from a corrupted stack has already caused security issues.  filter nodesets in-place and don\'t create node sets with null gaps which allows to simplify merging a great deal. simply move matched nodes backward and create a compact node set.  merge xmlxpathcompopevalpositionalpredicate into xmlxpathcompopevalpredicate.','xpath.c','9443','3077','303','875','false','false','false','2019-04-22 14:48:46+02:00'),('libxml2','2.9.9','949eced484520bdde3348e55eba048501b809127','Nick Wellnhofer','fix null deref in previous commit','xpath.c','9445','3078','3','1','true','false','false','2019-04-22 16:04:26+02:00'),('libxml2','2.9.9','f75256e7db7728a6f6cf519955319ed6ef7797ed','Nick Wellnhofer','remove unreachable code in xmlxpathcountfunction  after the initial test, the condition      (type == xpath_nodeset) || (type == xpath_xslt_tree)  always holds true.','xpath.c','9427','3071','1','20','false','false','false','2019-04-23 18:04:19+02:00'),('libxml2','2.9.9','346febc6abbd63d1fa6a532c7429d2c11b5c269b','Nick Wellnhofer','fix call stack overflow in xmlfreepattern  since xmlfreepattern tried to free the next pattern recursively, its behavior is identical to xmlfreepatternlist. make it call xmlfreepatternlist to avoid call stack overflows.  found by oss-fuzz.','pattern.c','1751','509','6','3','true','false','false','2019-04-25 11:37:37+02:00'),('libxml2','2.9.9','9948a9a3558095d91611382671084c60257a6463','Jérôme Duval','timsort.h: support older gccs  cherry-pick upstream pull request: __builtin_clzll isn\'t available on older gccs','timsort.h','359','88','1','1','false','false','false','2019-05-01 16:31:05+02:00'),('libxml2','2.9.9','9948a9a3558095d91611382671084c60257a6463','Jérôme Duval','timsort.h: support older gccs  cherry-pick upstream pull request: __builtin_clzll isn\'t available on older gccs','timsort.h','359','88','1','1','false','false','false','2019-05-01 16:31:05+02:00'),('libxml2','2.9.9','ad93f087d118ac805a8600468ad26d68cc1f6a48','Nick Wellnhofer','remove -wno-array-bounds  it\'s unsupported on gcc versions older than 4.3 and the false positives seem to be fixed in newer versions.','.travis.yml','19','0','1','1','true','false','false','2019-05-01 16:31:58+02:00'),('libxml2','2.9.9','ad93f087d118ac805a8600468ad26d68cc1f6a48','Nick Wellnhofer','remove -wno-array-bounds  it\'s unsupported on gcc versions older than 4.3 and the false positives seem to be fixed in newer versions.','configure.ac','1623','0','1','1','true','false','false','2019-05-01 16:31:58+02:00'),('libxml2','2.9.9','14ed63b7d09fce1a78f925e0a1d668c12e011fec','Nick Wellnhofer','limit recursion depth in xmlxpathcompopevalpredicate','xpath.c','9431','3072','4','0','false','false','false','2019-05-08 12:00:51+02:00'),('libxml2','2.9.9','96125557b608bdba0c74c2c2b13380194150f8a2','Nick Wellnhofer','remove unused member `doc` in xmlsavectxt','xmlsave.c','1827','602','0','11','false','false','false','2019-05-10 12:30:03+02:00'),('libxml2','2.9.9','3c0d62b4193c5c1fe15a143a138f76ffa1278779','David Warring','fix parser termination from \"double hyphen within comment\" error  the patch fixes the parser not halting immediately when the error handler attempts to stop the parser.  rather it was running on and continuing to reference the freed buffer in the while loop termination test.  this is only a problem if xmlstopparser is called from an error handler. probably caused by commit 123234f2. fixes #58.','parser.c','10240','3468','4','0','true','false','false','2019-05-14 15:55:12+02:00'),('libxml2','2.9.9','407b393d8023a6f20422fb3bf5806cf15ab750ad','Nick Wellnhofer','fix return value of xmloutputbufferwrite  when using memory buffers, the total size of the buffer was added again and again, potentially leading to an integer overflow.  found by oss-fuzz.','xmlIO.c','2139','711','22','10','true','false','false','2019-05-15 13:01:52+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','HTMLparser.c','4770','1393','2','0','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','dbc6b55b59d67485e5ccb39079d5c7412796ec76','Nick Wellnhofer','fix warnings when compiling without reader or push parser','xmllint.c','2734','867','16','20','true','false','false','2019-05-16 21:06:56+02:00'),('libxml2','2.9.9','f9fce963132b2a56a0f91bc19223a5c60f9786cb','Nick Wellnhofer','fix unsigned integer overflow  it\'s defined behavior but -fsanitize=unsigned-integer-overflow is useful to discover bugs.','parser.c','10246','3468','20','14','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f9fce963132b2a56a0f91bc19223a5c60f9786cb','Nick Wellnhofer','fix unsigned integer overflow  it\'s defined behavior but -fsanitize=unsigned-integer-overflow is useful to discover bugs.','charref1.xml.err','3','0','1','1','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f9fce963132b2a56a0f91bc19223a5c60f9786cb','Nick Wellnhofer','fix unsigned integer overflow  it\'s defined behavior but -fsanitize=unsigned-integer-overflow is useful to discover bugs.','charref1.xml.str','4','0','1','1','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f9fce963132b2a56a0f91bc19223a5c60f9786cb','Nick Wellnhofer','fix unsigned integer overflow  it\'s defined behavior but -fsanitize=unsigned-integer-overflow is useful to discover bugs.','timsort.h','360','88','2','1','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f9fce963132b2a56a0f91bc19223a5c60f9786cb','Nick Wellnhofer','fix unsigned integer overflow  it\'s defined behavior but -fsanitize=unsigned-integer-overflow is useful to discover bugs.','uri.c','1508','578','4','2','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','44e7a0d5f7a7e2c167a8a4196a5358830f695ab0','Nick Wellnhofer','annotate functions with __attribute__((no_sanitize))','dict.c','761','271','2','0','false','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','44e7a0d5f7a7e2c167a8a4196a5358830f695ab0','Nick Wellnhofer','annotate functions with __attribute__((no_sanitize))','hash.c','690','216','2','0','false','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','44e7a0d5f7a7e2c167a8a4196a5358830f695ab0','Nick Wellnhofer','annotate functions with __attribute__((no_sanitize))','libxml.h','24','0','7','0','false','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','44e7a0d5f7a7e2c167a8a4196a5358830f695ab0','Nick Wellnhofer','annotate functions with __attribute__((no_sanitize))','xpath.c','9432','3072','1','0','false','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','e79a903f3e7d5af5da5a738eea9b0c3c9d891ba3','Nick Wellnhofer','remove redundant code in xmlxpathcomprelationalexpr  thanks to anish k kurian for the report. closes #59.','xpath.c','9429','3068','1','4','false','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f824a4bd4d341d765a0fb6102a03a733faa15cbb','Nick Wellnhofer','fix memory leak in xmlallocoutputbufferinternal error path  thanks to anish k kurian for the report. closes #60.','xmlIO.c','2140','711','1','0','true','false','false','2019-05-20 13:38:22+02:00'),('libxml2','2.9.9','f209e55107697159b49460f43ef74c735c4bfd5b','Nick Wellnhofer','fix build without reader but with pattern  broken by commit dbc6b55b.','xmllint.c','2734','867','1','1','true','false','false','2019-06-25 11:45:16+02:00'),('libxml2','2.9.9','5ccac8cecffd58feb92cb8f508cdb74d84702810','Nick Wellnhofer','make sure that xmlparseqname returns null in error case  if there\'s an error growing the input buffer when recovering from invalid qnames, make sure to return null. otherwise, callers could be confused. in xmlparsestarttag2, for example, `tlen` could become negative.  found by oss-fuzz.','parser.c','10250','3470','4','0','true','false','false','2019-06-27 10:23:36+02:00'),('libxml2','2.9.9','01ea9c5af712bc8a653e9f599d85f6dd136160b6','Nick Wellnhofer','fix another code path in xmlparseqname  check for buffer errors in another code path missed in the previous commit.  found by oss-fuzz.','parser.c','10252','3471','4','2','true','false','false','2019-07-08 11:29:40+02:00'),('libxml2','2.9.9','37189c08e61ee90e6a1e46276ac724decf467a4b','Nick Wellnhofer','dict.h: gcc 2.95 doesn\'t allow multiple storage classes  this is a partial revert of commit c71f9305. i\'m not sure what issue this commit was trying to solve but it seems to be related to a circular dependency. it might be related to tree.h being included from dict.h which is unnecessary.  resolves !22.','apibuild.py','1872','725','0','1','false','false','false','2019-07-08 12:23:13+02:00'),('libxml2','2.9.9','37189c08e61ee90e6a1e46276ac724decf467a4b','Nick Wellnhofer','dict.h: gcc 2.95 doesn\'t allow multiple storage classes  this is a partial revert of commit c71f9305. i\'m not sure what issue this commit was trying to solve but it seems to be related to a circular dependency. it might be related to tree.h being included from dict.h which is unnecessary.  resolves !22.','dict.h','39','0','6','13','false','false','false','2019-07-08 12:23:13+02:00'),('libxml2','2.9.9','37189c08e61ee90e6a1e46276ac724decf467a4b','Nick Wellnhofer','dict.h: gcc 2.95 doesn\'t allow multiple storage classes  this is a partial revert of commit c71f9305. i\'m not sure what issue this commit was trying to solve but it seems to be related to a circular dependency. it might be related to tree.h being included from dict.h which is unnecessary.  resolves !22.','dict.h','39','0','6','13','false','false','false','2019-07-08 12:23:13+02:00'),('libxml2','2.9.9','0df3c2c9aa005605adb265ce7d2beb51501b59df','zhouzhongyuan','fix comment in testreader.c','testReader.c','100','31','1','1','true','false','false','2019-07-08 12:24:45+02:00'),('libxml2','2.9.9','b3a95d57f239b372f19b96784b66271dd66d26d3','Jens Eggerstedt','fix unsigned int overflow','xmlschemastypes.c','4331','1594','1','1','true','false','false','2019-07-08 12:26:06+02:00'),('libxml2','2.9.9','6348496230a4b84caa8e2205cfa9a6a3239bcf20','Nick Wellnhofer','remove redundant code in xmlrelaxngvalidatestate  closes #70.','relaxng.c','8378','2294','0','1','false','false','false','2019-07-08 12:28:39+02:00'),('libxml2','2.9.9','87125732cc6c7a6251e4d0bc116387c84e09592d','Stephen Chenney','switched from unsigned long to ptrdiff_t in parser.c  using unsigned long instead of ptrdiff_t results in non-zero pointer deltas being stored as zero delta, giving incorrect offsets into arrays and hence out of bounds reads.  this patch fixes the issue in all places in parser.c and adds a macro to reduce the chances of cut-and-paste errors.  only affects platforms where \'sizeof(long) < sizeof(size_t)\' like 64-bit windows.  see https://bugs.chromium.org/p/chromium/issues/detail?id=894933  closes #44.','parser.c','10218','3464','21','43','true','false','false','2019-07-08 13:00:12+02:00'),('libxml2','2.9.9','1fc410d3d3cb7cf8ec4181f39dfdd66d39c240eb','Hugh McMaster','xml2-config: add a --dynamic switch to print only shared libraries  `xml2-config --libs` prints static library linking information by default. this is un-necessary for most programs, so introduce a new option, --dynamic, which, when combined with --libs, only prints shared library linking information.','Makefile.am','1204','0','1','0','false','false','false','2019-07-17 23:24:24+10:00'),('libxml2','2.9.9','1fc410d3d3cb7cf8ec4181f39dfdd66d39c240eb','Hugh McMaster','xml2-config: add a --dynamic switch to print only shared libraries  `xml2-config --libs` prints static library linking information by default. this is un-necessary for most programs, so introduce a new option, --dynamic, which, when combined with --libs, only prints shared library linking information.','configure.ac','1625','0','3','1','false','false','false','2019-07-17 23:24:24+10:00'),('libxml2','2.9.9','1fc410d3d3cb7cf8ec4181f39dfdd66d39c240eb','Hugh McMaster','xml2-config: add a --dynamic switch to print only shared libraries  `xml2-config --libs` prints static library linking information by default. this is un-necessary for most programs, so introduce a new option, --dynamic, which, when combined with --libs, only prints shared library linking information.','xml2-config.1','31','0','1','0','false','false','false','2019-07-17 23:24:24+10:00'),('libxml2','2.9.9','1fc410d3d3cb7cf8ec4181f39dfdd66d39c240eb','Hugh McMaster','xml2-config: add a --dynamic switch to print only shared libraries  `xml2-config --libs` prints static library linking information by default. this is un-necessary for most programs, so introduce a new option, --dynamic, which, when combined with --libs, only prints shared library linking information.','xml2-config.in','86','2','14','12','false','false','false','2019-07-17 23:24:24+10:00'),('libxml2','2.9.9','1fc410d3d3cb7cf8ec4181f39dfdd66d39c240eb','Hugh McMaster','xml2-config: add a --dynamic switch to print only shared libraries  `xml2-config --libs` prints static library linking information by default. this is un-necessary for most programs, so introduce a new option, --dynamic, which, when combined with --libs, only prints shared library linking information.','xml2Conf.sh.in','6','0','1','1','false','false','false','2019-07-17 23:24:24+10:00'),('libxml2','2.9.9','4f67dbb0a1314326caac5e2780046c56210af2b1','zhouzhongyuan','fix memory leak in xmlallocoutputbuffer','xmlIO.c','2141','711','1','0','true','false','false','2019-07-30 12:43:26+02:00'),('libxml2','2.9.9','0c1b4fd2cfc020451110d8131e8007203e2ccffc','zhouzhongyuan','fix comments in test code','runxmlconf.c','475','104','1','1','true','false','false','2019-07-30 12:53:50+02:00'),('libxml2','2.9.9','0c1b4fd2cfc020451110d8131e8007203e2ccffc','zhouzhongyuan','fix comments in test code','testAutomata.c','270','81','1','1','true','false','false','2019-07-30 12:53:50+02:00'),('libxml2','2.9.9','2f2bf4b2caa1cb9a4a5039b7a44db101943382d1','Hugh McMaster','xml2-config.in: output cflags and libs on the same line  xml2-config currently outputs the results of \'--cflags --libs\' on two lines. printing this information on one line is far more useful.','xml2-config.in','87','2','9','8','false','false','false','2019-08-01 14:55:07+02:00'),('libxml2','2.9.9','6c91dd94959c94ee139e870843f285fcb22fc55c','Daniel Richard G','don\'t call printf with null string in runtest.c  avoids undefined behavior causing problems on hp-ux and solaris.  closes #78.','runtest.c','3281','697','2','0','false','false','false','2019-08-02 13:18:13+02:00'),('libxml2','2.9.9','b17e3d1c2b6a6d4f3d365faa9908d2c91ca32420','Daniel Richard G','work around buggy ceil() function on aix  aix has a buggy ceil() function that does not handle negative-zero correctly.  closes #79.','xpath.c','9430','3069','5','0','false','false','false','2019-08-02 13:18:13+02:00'),('libxml2','2.9.9','59028ba08c7e035a9976ed492598fa8a50139801','zhouzhongyuan','fix possible null dereference in xmlxpathidfunction  if a certain memory allocation fails, xmlxpathidfunction would dereference a null pointer.  closes #77.','xpath.c','9431','3070','1','0','true','false','false','2019-08-25 13:19:29+02:00'),('libxml2','2.9.9','81958b6e94bce3b51effd1fa145daceab173b7a0','Jan Pokorný','doc: do not mislead towards \"infeasible\" scenario wrt. xmlbufnodedump  at least when merely public api is to be leveraged, one cannot use xmlbufcreate function that would otherwise be a clear fit, and relying on some invariants wrt. how some other struct fields will get initialized along the construction/filling such parent struct and (ab)using that instead does not appear clever, either.  hence, instruct people what\'s the right thing for the moment, that is, make them use xmlnodedumpoutput instead (together with likewise public xmlallocoutputbuffer).  going forward, it\'s questionable what do with xmlbuf* family of functions that are once public, since they, for any practical purpose, cannot be used by the library clients (that\'s how i\'ve run into this).  signed-off-by: jan pokorný <jpokorny@redhat.com>','libxml2-tree.html','1590','0','1','1','false','false','false','2019-08-25 13:23:49+02:00'),('libxml2','2.9.9','81958b6e94bce3b51effd1fa145daceab173b7a0','Jan Pokorný','doc: do not mislead towards \"infeasible\" scenario wrt. xmlbufnodedump  at least when merely public api is to be leveraged, one cannot use xmlbufcreate function that would otherwise be a clear fit, and relying on some invariants wrt. how some other struct fields will get initialized along the construction/filling such parent struct and (ab)using that instead does not appear clever, either.  hence, instruct people what\'s the right thing for the moment, that is, make them use xmlnodedumpoutput instead (together with likewise public xmlallocoutputbuffer).  going forward, it\'s questionable what do with xmlbuf* family of functions that are once public, since they, for any practical purpose, cannot be used by the library clients (that\'s how i\'ve run into this).  signed-off-by: jan pokorný <jpokorny@redhat.com>','libxml2-api.xml','18523','1','1','1','false','false','false','2019-08-25 13:23:49+02:00'),('libxml2','2.9.9','81958b6e94bce3b51effd1fa145daceab173b7a0','Jan Pokorný','doc: do not mislead towards \"infeasible\" scenario wrt. xmlbufnodedump  at least when merely public api is to be leveraged, one cannot use xmlbufcreate function that would otherwise be a clear fit, and relying on some invariants wrt. how some other struct fields will get initialized along the construction/filling such parent struct and (ab)using that instead does not appear clever, either.  hence, instruct people what\'s the right thing for the moment, that is, make them use xmlnodedumpoutput instead (together with likewise public xmlallocoutputbuffer).  going forward, it\'s questionable what do with xmlbuf* family of functions that are once public, since they, for any practical purpose, cannot be used by the library clients (that\'s how i\'ve run into this).  signed-off-by: jan pokorný <jpokorny@redhat.com>','libxml2-refs.xml','32133','0','3','3','false','false','false','2019-08-25 13:23:49+02:00'),('libxml2','2.9.9','81958b6e94bce3b51effd1fa145daceab173b7a0','Jan Pokorný','doc: do not mislead towards \"infeasible\" scenario wrt. xmlbufnodedump  at least when merely public api is to be leveraged, one cannot use xmlbufcreate function that would otherwise be a clear fit, and relying on some invariants wrt. how some other struct fields will get initialized along the construction/filling such parent struct and (ab)using that instead does not appear clever, either.  hence, instruct people what\'s the right thing for the moment, that is, make them use xmlnodedumpoutput instead (together with likewise public xmlallocoutputbuffer).  going forward, it\'s questionable what do with xmlbuf* family of functions that are once public, since they, for any practical purpose, cannot be used by the library clients (that\'s how i\'ve run into this).  signed-off-by: jan pokorný <jpokorny@redhat.com>','xmlsave.c','1827','602','2','2','false','false','false','2019-08-25 13:23:49+02:00'),('libxml2','2.9.9','8074b881792b354b0e8c1b4076c5f41efd951a52','Jan Pokorný','fix unability to validate ambiguously constructed interleave for relaxng  previously, test/relaxng/ambig_name-class.xml would fail to validate for a simple reason -- interleave within \"open-name-class\" context is supposed to be fine with whatever else is pending the consumption, since effectively, it\'s unrelated from a higher parsing perspective.  signed-off-by: jan pokorný <jpokorny@redhat.com>','relaxng.c','8381','2296','11','1','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','8074b881792b354b0e8c1b4076c5f41efd951a52','Jan Pokorný','fix unability to validate ambiguously constructed interleave for relaxng  previously, test/relaxng/ambig_name-class.xml would fail to validate for a simple reason -- interleave within \"open-name-class\" context is supposed to be fine with whatever else is pending the consumption, since effectively, it\'s unrelated from a higher parsing perspective.  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class_err','1','0','1','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','8074b881792b354b0e8c1b4076c5f41efd951a52','Jan Pokorný','fix unability to validate ambiguously constructed interleave for relaxng  previously, test/relaxng/ambig_name-class.xml would fail to validate for a simple reason -- interleave within \"open-name-class\" context is supposed to be fine with whatever else is pending the consumption, since effectively, it\'s unrelated from a higher parsing perspective.  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class_valid','None','None','0','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','8074b881792b354b0e8c1b4076c5f41efd951a52','Jan Pokorný','fix unability to validate ambiguously constructed interleave for relaxng  previously, test/relaxng/ambig_name-class.xml would fail to validate for a simple reason -- interleave within \"open-name-class\" context is supposed to be fine with whatever else is pending the consumption, since effectively, it\'s unrelated from a higher parsing perspective.  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class.rng','1','0','1','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','8074b881792b354b0e8c1b4076c5f41efd951a52','Jan Pokorný','fix unability to validate ambiguously constructed interleave for relaxng  previously, test/relaxng/ambig_name-class.xml would fail to validate for a simple reason -- interleave within \"open-name-class\" context is supposed to be fine with whatever else is pending the consumption, since effectively, it\'s unrelated from a higher parsing perspective.  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class.xml','16','0','16','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','ea695ac0d608e79ce7b86804bab64565e85a8866','Jan Pokorný','fix unability to relaxng-validate grammar with choice-based name class  previously, test/relaxng/ambig_name-class2.xml would fail to validate against test/relaxng/ambig_name-class2.rng:  > test/relaxng/ambig_name-class2.rng:4: >   element attribute: relax-ng parser error : >       found anyname attribute without oneormore ancestor > relax-ng schema test/relaxng/ambig_name-class2.rng failed to compile  signed-off-by: jan pokorný <jpokorny@redhat.com>','relaxng.c','8382','2297','4','1','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','ea695ac0d608e79ce7b86804bab64565e85a8866','Jan Pokorný','fix unability to relaxng-validate grammar with choice-based name class  previously, test/relaxng/ambig_name-class2.xml would fail to validate against test/relaxng/ambig_name-class2.rng:  > test/relaxng/ambig_name-class2.rng:4: >   element attribute: relax-ng parser error : >       found anyname attribute without oneormore ancestor > relax-ng schema test/relaxng/ambig_name-class2.rng failed to compile  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class2_err','1','0','1','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','ea695ac0d608e79ce7b86804bab64565e85a8866','Jan Pokorný','fix unability to relaxng-validate grammar with choice-based name class  previously, test/relaxng/ambig_name-class2.xml would fail to validate against test/relaxng/ambig_name-class2.rng:  > test/relaxng/ambig_name-class2.rng:4: >   element attribute: relax-ng parser error : >       found anyname attribute without oneormore ancestor > relax-ng schema test/relaxng/ambig_name-class2.rng failed to compile  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class2_valid','None','None','0','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','ea695ac0d608e79ce7b86804bab64565e85a8866','Jan Pokorný','fix unability to relaxng-validate grammar with choice-based name class  previously, test/relaxng/ambig_name-class2.xml would fail to validate against test/relaxng/ambig_name-class2.rng:  > test/relaxng/ambig_name-class2.rng:4: >   element attribute: relax-ng parser error : >       found anyname attribute without oneormore ancestor > relax-ng schema test/relaxng/ambig_name-class2.rng failed to compile  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class2.rng','1','0','1','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','ea695ac0d608e79ce7b86804bab64565e85a8866','Jan Pokorný','fix unability to relaxng-validate grammar with choice-based name class  previously, test/relaxng/ambig_name-class2.xml would fail to validate against test/relaxng/ambig_name-class2.rng:  > test/relaxng/ambig_name-class2.rng:4: >   element attribute: relax-ng parser error : >       found anyname attribute without oneormore ancestor > relax-ng schema test/relaxng/ambig_name-class2.rng failed to compile  signed-off-by: jan pokorný <jpokorny@redhat.com>','ambig_name-class2.xml','1','0','1','0','true','false','false','2019-08-25 13:29:04+02:00'),('libxml2','2.9.9','0571b4e6073d5afbd0f4682e0486e655e347e0da','zhouzhongyuan','fix null deref in xmlreader buffer','xmlreader.c','3876','1288','2','0','true','false','false','2019-08-25 13:30:10+02:00'),('libxml2','2.9.9','5c0e48b8833f04d895e8196ccb3caecc46f43929','Jan Pokorný','fix typo: xpath: simpli{ -> fi}ed  signed-off-by: jan pokorný <jpokorny@redhat.com>','xpath.c','9431','3070','1','1','true','false','false','2019-08-25 13:31:18+02:00'),('libxml2','2.9.9','39f10232b50959ec5193cb3fcbaf9fed8ce0680f','Jan Pokorný','fix typos: tree: move{ -> s}, reconcil{i -> }ed, h{o -> e}ld by...  ...seems to { -> be to} add.  signed-off-by: jan pokorný <jpokorny@redhat.com>','tree.c','6376','2430','4','4','true','false','false','2019-08-25 13:31:18+02:00'),('libxml2','2.9.9','e3f1c7f751192d8f271a86e314ab12556293786b','Nick Wellnhofer','partial fix for comparison of xs:durations  see https://bugzilla.gnome.org/show_bug.cgi?id=777139  thanks to zhongyuan zhou for the initial merge request !34.','xmlschemastypes.c','4330','1594','4','2','true','false','false','2019-08-25 14:12:23+02:00'),('libxml2','2.9.9','a6a578675b1b6e50e31feba3b5127822711c59e5','Wang Kirin','fix memory leak in xmlxincludeloadtxt','xinclude.c','1757','536','1','0','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','decimal-2_1_0.err','2','0','0','2','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','decimal-3_1_0.err','4','0','0','4','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','hexbinary_0_1.err','7','0','0','3','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','restriction-enum-1_1_0.err','1','0','0','1','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','vdv-first4_0_2.err','1','0','0','1','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','01d8cf07d9136aa2ecb1e4925a239973cbc89285','bettermanzzy','misleading error message with xs:{min|max}inclusive  closes #53.','xmlschemas.c','18788','4696','1','1','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','09b6f8183d05719830de80334dea83edeeec44e6','Nick Wellnhofer','fix potential null deref in xmlrelaxngparsepatterns  thanks to zhongyuan zhou for the initial patch.','relaxng.c','8386','2299','4','0','true','false','false','2019-08-25 14:12:34+02:00'),('libxml2','2.9.9','5a02583c7e683896d84878bd90641d8d9b0d0549','Zhipeng Xie','fix memory leak in xmlparsebalancedchunkmemoryrecover  when doc is null, namespace created in xmltreeensurexmldecl is bind to newdoc->oldns, in this case, set newdoc->oldns to null and free newdoc will cause a memory leak.  found with libfuzzer.  closes #82.','parser.c','10219','3465','2','1','true','false','false','2019-08-26 11:20:49+02:00'),('libxml2','2.9.9','8efc5b283cdc808bee17a5567c0a0f29dcdd9b9b','Nick Wellnhofer','14:00 is a valid timezone for xs:datetime  closes #100','date_0.xml','27','0','1','0','false','false','false','2019-09-13 12:24:23+02:00'),('libxml2','2.9.9','8efc5b283cdc808bee17a5567c0a0f29dcdd9b9b','Nick Wellnhofer','14:00 is a valid timezone for xs:datetime  closes #100','xmlschemastypes.c','4330','1594','1','1','false','false','false','2019-09-13 12:24:23+02:00'),('libxml2','2.9.9','0b793591acccda4c4e8fe420cc9fe5ae8674b4f3','zhouzhongyuan','fix memory leak in xmlregepxfromparse  merge request !39','xmlregexp.c','5843','1978','2','0','true','false','false','2019-09-13 15:37:56+02:00'),('libxml2','2.9.9','fa5e8ca66f226107a87d6c39b3e7820ba3dcba6b','zhouzhongyuan','optimize build instructions in readme  fixes bug #792181 https://bugzilla.gnome.org/show_bug.cgi?id=792181  merge request !40','README','29','0','1','0','true','false','false','2019-09-13 15:39:30+02:00'),('libxml2','2.9.9','e32afd3fd7785d861066dd06f93266cb6f433969','Nick Wellnhofer','fix error message when processing xincludes with fallbacks  fixes bug #616491 https://bugzilla.gnome.org/show_bug.cgi?id=616491  based on merge request !41','xinclude.c','1758','536','2','1','true','false','false','2019-09-13 15:45:21+02:00'),('libxml2','2.9.9','5f1f455c2f659eb6c82adf2b1d3ae00466367873','Nick Wellnhofer','fix potential memory leak in xmlbufbacktobuffer  fixes bug #794373 https://bugzilla.gnome.org/show_bug.cgi?id=794373  also see merge request !42','buf.c','755','240','2','2','true','false','false','2019-09-13 15:51:16+02:00'),('libxml2','2.9.9','4e326a3aa93b1709118a814c013a0178028dd9a3','zhouzhongyuan','fix potential null deref in xmlschemaidcfillnodetables  merge request !45','xmlschemas.c','18790','4697','2','0','true','false','false','2019-09-13 15:57:25+02:00'),('libxml2','2.9.9','e8c9cd5c7a0d2ea95edf08b13af3baabce62dd63','Nick Wellnhofer','fix schema determinism check of ##other namespaces  non-compound (##local) and compound string atoms are always disjoint regardless of whether the compound atom is negated (##other).  closes #40.','issue40_0_0','1','0','1','0','true','false','false','2019-09-16 15:36:02+02:00'),('libxml2','2.9.9','e8c9cd5c7a0d2ea95edf08b13af3baabce62dd63','Nick Wellnhofer','fix schema determinism check of ##other namespaces  non-compound (##local) and compound string atoms are always disjoint regardless of whether the compound atom is negated (##other).  closes #40.','issue40_0_0.err','None','None','0','0','true','false','false','2019-09-16 15:36:02+02:00'),('libxml2','2.9.9','e8c9cd5c7a0d2ea95edf08b13af3baabce62dd63','Nick Wellnhofer','fix schema determinism check of ##other namespaces  non-compound (##local) and compound string atoms are always disjoint regardless of whether the compound atom is negated (##other).  closes #40.','issue40_0.xml','3','0','3','0','true','false','false','2019-09-16 15:36:02+02:00'),('libxml2','2.9.9','e8c9cd5c7a0d2ea95edf08b13af3baabce62dd63','Nick Wellnhofer','fix schema determinism check of ##other namespaces  non-compound (##local) and compound string atoms are always disjoint regardless of whether the compound atom is negated (##other).  closes #40.','issue40_0.xsd','10','0','10','0','true','false','false','2019-09-16 15:36:02+02:00'),('libxml2','2.9.9','e8c9cd5c7a0d2ea95edf08b13af3baabce62dd63','Nick Wellnhofer','fix schema determinism check of ##other namespaces  non-compound (##local) and compound string atoms are always disjoint regardless of whether the compound atom is negated (##other).  closes #40.','xmlregexp.c','5849','1979','12','3','true','false','false','2019-09-16 15:36:02+02:00'),('libxml2','2.9.9','eee1dd5acf9404aa453ca3fddfacc0e1839634b2','Nick Wellnhofer','fix expected output of test/schemas/any4  libxml2 correctly rejects any4_0.xsd as invalid schema. i can\'t figure out what the intent behind this test case was. simply adjust the expected output to match the current behavior.  closes #92.','any4_0_0','None','None','0','1','true','false','false','2019-09-16 15:36:44+02:00'),('libxml2','2.9.9','eee1dd5acf9404aa453ca3fddfacc0e1839634b2','Nick Wellnhofer','fix expected output of test/schemas/any4  libxml2 correctly rejects any4_0.xsd as invalid schema. i can\'t figure out what the intent behind this test case was. simply adjust the expected output to match the current behavior.  closes #92.','any4_0_0.err','1','0','1','0','true','false','false','2019-09-16 15:36:44+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','README','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','buf.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','chvalid.def','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-1','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-2','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-3','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-4','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-5','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-6','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-7','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-8','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','4rects.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','a-valid.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','a-wf.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','bike.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','circle.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','defs.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','desc.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','ellipse.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','flower2.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','gradient.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','group01.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','group02.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','group03.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','image-valid.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','image-wf.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','lin-gradient.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','marker.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','mask.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','mathswitch.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','parentns.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','path01.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','path02.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','patternfill.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','polyline.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','private.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','rad-gradient.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','rectangle.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','richdesc.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','script.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','structure01.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','style.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','switch.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','symbol-use.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','template.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','text01.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','text02.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','text03.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','toap01.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','toap02.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','transform.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','trivial.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','twin-gradients.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','v-template.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','viewport-nest.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','viewport-transform.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','viewport.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','wf-template.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','doc.dtd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-1.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-2.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-3.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-4.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-5.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-6.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-7.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-7.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-8.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','example-8.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','world.txt','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-1.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-1.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-2.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-2.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-3.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-3.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-4.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-4.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-5.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-5.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-6.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-6.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-7.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlbase-prop-7.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlid-prop-1.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlid-prop-2.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmllang-prop-1.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmllang-prop-2.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmllang-prop-3.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmllang-prop-4.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlspace-prop-1.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlspace-prop-2.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlspace-prop-3.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlspace-prop-4.xpath','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','759398.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','any6_0.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','any7_0.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','any7_1.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','any7_1.xsd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','any7_2.xsd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','bug152470_1.xml','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','bug152470_1.xsd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','import-bad-1_0.imp','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','vdv-first4_0.xsd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','spec.dtd','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','testAutomata.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','testReader.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlIO.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlreader.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xmlschemastypes.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','6705f4d28efd494581b44cdc8ab5ec98a4a981ae','Nick Wellnhofer','remove executable bit from non-executable files','xpath.c','None','None','0','0','false','false','false','2019-09-16 15:48:59+02:00'),('libxml2','2.9.9','e91cbcf63933d1f3b8ab97a500321edd20f35e97','Nick Wellnhofer','don\'t read external entities or xincludes from stdin  the file input callbacks try to read from stdin if \"-\" is passed as url. this should never be done when loading indirect resources like external entities or xincludes. unfortunately, the stdin substitution happens deep inside the io code, so we simply replace \"-\" with \"./-\" in specific locations.  this issue also affects other users of the library like libxslt. ideally, stdin should only be substituted on explicit request. but more intrusive changes could break existing code.  closes #90 and #102.','parser.c','10221','3466','4','0','false','false','false','2019-09-20 13:26:51+02:00'),('libxml2','2.9.9','e91cbcf63933d1f3b8ab97a500321edd20f35e97','Nick Wellnhofer','don\'t read external entities or xincludes from stdin  the file input callbacks try to read from stdin if \"-\" is passed as url. this should never be done when loading indirect resources like external entities or xincludes. unfortunately, the stdin substitution happens deep inside the io code, so we simply replace \"-\" with \"./-\" in specific locations.  this issue also affects other users of the library like libxslt. ideally, stdin should only be substituted on explicit request. but more intrusive changes could break existing code.  closes #90 and #102.','xinclude.c','1762','539','8','0','false','false','false','2019-09-20 13:26:51+02:00'),('libxml2','2.9.9','a28bc7515819bcf86382353611812dc4b73ac0fe','Nick Wellnhofer','fix integer overflow in entity recursion check','parser.c','10230','3469','15','6','true','false','false','2019-09-20 13:46:58+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive  split xmlparseelement into subfunctions. use namenspush to store prefix, uri and nsnr on the heap, similar to the push parser.  closes #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive  split xmlparseelement into subfunctions. use namenspush to store prefix, uri and nsnr on the heap, similar to the push parser.  closes #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive  split xmlparseelement into subfunctions. use namenspush to store prefix, uri and nsnr on the heap, similar to the push parser.  closes #84.','parser.c','10238','3472','71','50','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive  split xmlparseelement into subfunctions. use namenspush to store prefix, uri and nsnr on the heap, similar to the push parser.  closes #84.','754947.xml.err','7','0','1','1','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','62150ed2ab19a4dd76c15acc62c7d923d9f3b2cc','Nick Wellnhofer','make xmlparsecontent and xmlparseelement non-recursive  split xmlparseelement into subfunctions. use namenspush to store prefix, uri and nsnr on the heap, similar to the push parser.  closes #84.','759398.xml.err','12','0','2','2','false','false','false','2019-09-23 17:45:50+02:00'),('libxml2','2.9.9','0762c9b69ba01628f72eada1c64ff3d361fb5716','Nick Wellnhofer','make xmlfreenodelist non-recursive  avoid call stack overflow when freeing deeply nested documents.','tree.c','6390','2434','21','5','false','false','false','2019-09-23 17:46:32+02:00'),('libxml2','2.9.9','1fbcf4098ba2aefe241de8d7ceb229b995d8daec','Nick Wellnhofer','make xmltextreaderfreenodelist non-recursive  avoid call stack overflow when freeing deeply nested documents.  found by oss-fuzz.','xmlreader.c','3888','1292','23','9','false','false','false','2019-09-23 17:46:32+02:00'),('libxml2','2.9.9','c2b0a184a9e052d445bedda817b233c05424062e','Nick Wellnhofer','fix empty branch in regex  fixes bug 649244: https://bugzilla.gnome.org/show_bug.cgi?id=649244  closes #57.','bug649244','9','0','9','0','true','false','false','2019-09-25 14:22:47+02:00'),('libxml2','2.9.9','c2b0a184a9e052d445bedda817b233c05424062e','Nick Wellnhofer','fix empty branch in regex  fixes bug 649244: https://bugzilla.gnome.org/show_bug.cgi?id=649244  closes #57.','bug649244','9','0','9','0','true','false','false','2019-09-25 14:22:47+02:00'),('libxml2','2.9.9','c2b0a184a9e052d445bedda817b233c05424062e','Nick Wellnhofer','fix empty branch in regex  fixes bug 649244: https://bugzilla.gnome.org/show_bug.cgi?id=649244  closes #57.','xmlregexp.c','5848','1980','7','7','true','false','false','2019-09-25 14:22:47+02:00'),('libxml2','2.9.9','99a864a1f7a9cb59865f803770d7d62fb47cad69','Nick Wellnhofer','fix regextests  - one of the bug316338 test cases is expected to succeed. - memory leak in testregexp.c. - refcount handling in xmlexphashgetentry.','bug316338','20','0','1','1','true','false','false','2019-09-25 15:27:45+02:00'),('libxml2','2.9.9','99a864a1f7a9cb59865f803770d7d62fb47cad69','Nick Wellnhofer','fix regextests  - one of the bug316338 test cases is expected to succeed. - memory leak in testregexp.c. - refcount handling in xmlexphashgetentry.','testRegexp.c','345','111','2','2','true','false','false','2019-09-25 15:27:45+02:00'),('libxml2','2.9.9','99a864a1f7a9cb59865f803770d7d62fb47cad69','Nick Wellnhofer','fix regextests  - one of the bug316338 test cases is expected to succeed. - memory leak in testregexp.c. - refcount handling in xmlexphashgetentry.','xmlregexp.c','5848','1980','1','1','true','false','false','2019-09-25 15:27:45+02:00'),('libxml2','2.9.9','664f881008f40356c0502c8cc154e17e3c80e353','Nick Wellnhofer','fix use-after-free in xmltextreaderfreenodelist  recent commit 1fbcf40 caused a use-after-free read because it didn\'t account for the fact that xmltextreaderfreedoc frees entities before freeing entity references via xmltextreaderfreenodelist.  found by oss-fuzz.','xmlreader.c','3888','1292','4','4','true','false','false','2019-09-26 11:09:17+02:00'),('libxml2','2.9.9','d56184a0859aaf6873a3886b43a9638e9cf9f167','Nick Wellnhofer','disable xmlexp regex code  this is apparently another regex engine that was never used, see commit 81a8ec6.','Makefile.am','1205','0','3','0','false','false','false','2019-09-26 12:11:39+02:00'),('libxml2','2.9.9','d56184a0859aaf6873a3886b43a9638e9cf9f167','Nick Wellnhofer','disable xmlexp regex code  this is apparently another regex engine that was never used, see commit 81a8ec6.','xmlversion.h.in','4','0','3','1','false','false','false','2019-09-26 12:11:39+02:00'),('libxml2','2.9.9','9d461ac7d097fc9d0ac2e947b2796d9e189c7e81','Nick Wellnhofer','adjust expected error in python tests  closes #107.','tstLastError.py','66','10','2','2','true','false','false','2019-09-26 16:17:31+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','parser.c','10228','3460','129','136','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','759573-2.xml.err','48','0','0','10','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','759573.xml.err','21','0','0','10','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect1.xml','8','0','8','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect1.xml.err','None','None','0','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect1.xml.err.rdr','None','None','0','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect2.xml','None','None','0','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect2.xml.err','8','0','9','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect2.xml.err.rdr','9','0','10','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect1.xml','7','0','7','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect2.xml','4','0','4','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect1.dtd','20','0','20','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c51e38cb3a808e315248e03c9e52bce08943c22b','Nick Wellnhofer','make xmlparseconditionalsections non-recursive  avoid call stack overflow in deeply nested conditional sections.  found by oss-fuzz.','cond_sect2.dtd','16','0','16','0','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c2f209c09f383ccfaa2bf8fe9b63882366bf4aec','Nick Wellnhofer','disallow conditional sections in internal subset  conditional sections are only allowed in *external* parameter entities referenced from the internal subset.','parser.c','10228','3461','2','2','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c2f209c09f383ccfaa2bf8fe9b63882366bf4aec','Nick Wellnhofer','disallow conditional sections in internal subset  conditional sections are only allowed in *external* parameter entities referenced from the internal subset.','759573-2.xml.err','34','0','11','24','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','c2f209c09f383ccfaa2bf8fe9b63882366bf4aec','Nick Wellnhofer','disallow conditional sections in internal subset  conditional sections are only allowed in *external* parameter entities referenced from the internal subset.','759573.xml.err','30','0','13','2','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','80b110a95da9deac24029b010ecc4f71cee226e9','Nick Wellnhofer','mark xmlexp* symbols as removed','symbols.xml','1771','0','21','21','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','80b110a95da9deac24029b010ecc4f71cee226e9','Nick Wellnhofer','mark xmlexp* symbols as removed','libxml2.syms','1785','0','21','21','false','false','false','2019-09-30 15:47:30+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','ChangeLog','794','0','54','54','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','HTMLparser.c','4770','1393','7','7','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','HTMLtree.c','776','270','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','NEWS','3001','0','10','10','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','README.zOS','193','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','SAX2.c','2005','684','10','10','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','buf.c','755','240','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','c14n.c','1248','360','6','6','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','catalog.c','2524','776','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','check-xinclude-test-suite.py','183','44','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','check-xml-test-suite.py','320','75','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','configure.ac','1625','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','debugXML.c','2570','785','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','dict.c','761','271','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','README.docs','15','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','examples.xml','751','0','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','examples.xsl','161','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','index.html','14','0','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parse1.c','22','4','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parse2.c','31','6','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parse3.c','21','3','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parse4.c','58','10','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','reader3.c','52','9','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','reader4.c','58','12','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','index.py','1034','290','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xml.html','6213','0','11','11','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlreader.html','445','0','6','6','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','enc.h','8','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','encoding.c','2817','657','9','9','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','entities.c','724','195','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','error.c','647','229','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','gjobread.c','197','58','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','genChRanges.py','436','4','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','globals.c','651','103','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','c14n.h','43','0','6','6','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','catalog.h','108','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','hash.h','126','0','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parser.h','660','0','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parserInternals.h','238','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','schemasInternals.h','308','0','6','6','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','tree.h','824','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xlink.h','72','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlIO.h','188','0','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlerror.h','864','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xpath.h','265','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','win32config.h','36','8','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','libxml.h','24','0','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','nanohttp.c','1150','390','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parser.c','10228','3461','17','17','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','parserInternals.c','1311','385','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','pattern.c','1751','509','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','libxml.c','2962','592','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','types.c','691','163','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','relaxng.c','8386','2299','34','34','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','fallback.xml','5','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','fallback.xml.rdr','9','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','REC-xml-19980210.xml','4070','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xhtml1.xhtml','1337','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','runsuite.c','966','201','7','7','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','runtest.c','3281','697','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','runxmlconf.c','475','104','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','save.h','10','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','schematron.c','1212','283','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','fallback.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','docbook_0.xml','4237','1','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','spec_0.xml','2904','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','tutor11_1_3.xml','4110','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','abc.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','acb.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','bac.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','bca.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','cab.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','cba.xml','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','REC-xml-19980210.xml','4110','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xhtml1.xhtml','1388','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','testapi.c','42059','6547','8','8','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','testchar.c','415','121','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','testlimits.c','1058','251','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','testrecurse.c','692','188','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','threads.c','543','175','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','timsort.h','360','88','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','tree.c','6390','2434','28','28','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','trio.c','4736','1078','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','trionan.c','401','100','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','uri.c','1508','578','7','7','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','valid.c','4781','1561','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','config.h','36','8','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','configure.js','647','178','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','wincecompat.c','44','10','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','wincecompat.h','10','0','3','3','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xinclude.c','1762','539','7','7','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlIO.c','2141','711','5','5','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmllint.c','2734','867','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlmodule.c','211','38','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlreader.c','3888','1292','14','14','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlregexp.c','5848','1980','32','32','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlsave.c','1827','602','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlschemas.c','18790','4697','83','101','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlschemastypes.c','4330','1594','4','4','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xmlwriter.c','3147','724','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xpath.c','9431','3070','15','15','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xpointer.c','1849','558','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xzlib.c','585','154','2','2','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','2a350ee9b47ad4cf251f94444073785619c31c77','Jared Yanovich','large batch of typo fixes  closes #109.','xzlib.h','6','0','1','1','true','false','false','2019-09-30 18:04:38+02:00'),('libxml2','2.9.9','74a8a91fdab1802f5c49aa1b507cbd9aec4e2ce7','Nick Wellnhofer','fix a few more typos (\"fonction\")','ChangeLog','794','0','2','2','true','false','false','2019-09-30 18:05:42+02:00'),('libxml2','2.9.9','74a8a91fdab1802f5c49aa1b507cbd9aec4e2ce7','Nick Wellnhofer','fix a few more typos (\"fonction\")','xmlIO.h','188','0','2','2','true','false','false','2019-09-30 18:05:42+02:00'),('libxml2','2.9.9','2e55f6dc67680f16296e98decfa8a0cb4353d40b','Nick Wellnhofer','make apibuild.py ignore attribute_no_sanitize','apibuild.py','1873','725','1','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk0.html','301','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk1.html','382','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk10.html','674','0','4','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk11.html','338','0','3','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk12.html','923','0','11','13','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk13.html','649','0','5','8','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk14.html','467','0','2','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk15.html','455','0','5','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk16.html','375','0','4','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk17.html','576','0','2','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk18.html','459','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk19.html','373','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk2.html','415','0','1','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk20.html','329','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk21.html','398','0','6','7','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk22.html','595','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk23.html','669','0','3','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk24.html','996','0','5','10','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk25.html','447','0','6','8','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk26.html','315','0','3','21','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk27.html','347','0','3','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk28.html','568','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk29.html','131','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk3.html','361','0','6','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk4.html','350','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk5.html','293','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk6.html','295','0','2','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk7.html','329','0','4','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk8.html','307','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIchunk9.html','273','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIconstructors.html','595','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIfiles.html','3594','0','3','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIfunctions.html','2348','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','APIsymbols.html','3590','0','4','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','DOM.html','17','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','FAQ.html','296','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','XMLinfo.html','35','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','XSLT.html','13','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','architecture.html','24','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','bugs.html','70','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','catalog.html','261','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','contribs.html','41','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-HTMLtree.html','168','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-c14n.html','91','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-catalog.html','277','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-debugXML.html','225','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-dict.html','134','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-encoding.html','226','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-entities.html','166','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-hash.html','219','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-parser.html','762','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-parserInternals.html','657','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-relaxng.html','278','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-schemasInternals.html','779','0','5','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-schematron.html','166','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-tree.html','1590','0','5','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-uri.html','154','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlIO.html','347','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlautomata.html','176','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlerror.html','953','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlexports.html','78','0','3','8','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlmodule.html','97','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlreader.html','565','0','9','9','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlregexp.html','280','1','5','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlschemas.html','314','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlversion.html','247','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xmlwriter.html','478','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-xpath.html','545','0','11','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2.devhelp','3577','0','2','1','false','false','false','2019-09-30 18:05:45+02:00');
INSERT INTO `libxml2` VALUES ('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','docs.html','34','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','downloads.html','40','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','encoding.html','217','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','entities.html','64','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','example.html','162','11','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','help.html','26','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','book1.html','13','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','index.html','13','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-DOCBparser.html','51','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-HTMLparser.html','184','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-HTMLtree.html','73','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-SAX.html','125','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-SAX2.html','128','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-c14n.html','38','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-catalog.html','142','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-chvalid.html','72','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-debugXML.html','120','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-dict.html','58','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-encoding.html','128','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-entities.html','79','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-globals.html','152','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-hash.html','119','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-lib.html','13','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-list.html','120','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-nanoftp.html','94','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-nanohttp.html','65','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-parser.html','559','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-parserInternals.html','322','0','5','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-pattern.html','76','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-relaxng.html','162','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-schemasInternals.html','373','0','6','6','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-schematron.html','81','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-threads.html','72','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-tree.html','991','0','7','7','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-uri.html','73','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-valid.html','289','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xinclude.html','59','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xlink.html','82','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlIO.html','212','0','4','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlautomata.html','85','0','5','5','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlerror.html','865','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlexports.html','19','0','1','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlmemory.html','103','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlmodule.html','38','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlreader.html','330','0','10','10','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlregexp.html','143','1','6','6','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlsave.html','60','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlschemas.html','185','0','3','3','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlschemastypes.html','123','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlstring.html','107','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlunicode.html','512','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlversion.html','63','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xmlwriter.html','261','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xpath.html','323','0','11','4','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xpathInternals.html','394','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml-xpointer.html','83','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','index.html','76','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','interface.html','59','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','intro.html','32','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','library.html','157','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-api.xml','18529','1','82','76','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2-refs.xml','32032','0','77','178','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','namespaces.html','50','1','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','news.html','2800','0','12','12','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','python.html','231','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','threads.html','30','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','tree.html','53','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','upgrade.html','112','0','2','2','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','xmldtd.html','107','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','xmlio.html','137','4','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','xmlmem.html','122','0','1','1','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','elfgcchack.h','3185','0','10','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','elfgcchack.h','3185','0','10','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','64966ebefdbd350a2c34577f1bf88e39b3a48ece','Nick Wellnhofer','rebuild docs','libxml2.def.src','1704','0','1','0','false','false','false','2019-09-30 18:05:45+02:00'),('libxml2','2.9.9','24e3973bc03c15d534b2eac6e70fc2b2bef2b6c0','Nick Wellnhofer','make xmldumpelementcontent non-recursive  avoid call stack overflow when dumping deeply nested element declarations.  found by oss-fuzz.','valid.c','4785','1561','89','68','false','false','false','2019-10-04 14:42:59+02:00'),('libxml2','2.9.9','b88ae6d2e1c9f22931f59ff1ec490befe201fb26','Nick Wellnhofer','avoid ignored attribute warnings under gcc  gcc doesn\'t support the unsigned-integer-overflow sanitizer.','dict.c','761','271','4','0','false','false','false','2019-10-14 15:40:32+02:00'),('libxml2','2.9.9','b88ae6d2e1c9f22931f59ff1ec490befe201fb26','Nick Wellnhofer','avoid ignored attribute warnings under gcc  gcc doesn\'t support the unsigned-integer-overflow sanitizer.','hash.c','690','216','4','0','false','false','false','2019-10-14 15:40:32+02:00'),('libxml2','2.9.9','61f2abb1f31e8f638c0059d631c064994add71e0','Nick Wellnhofer','enable continuous integration via gitlab ci  port the travis ci setup to gitlab. we currently run three builds:  - gcc with -std=c89 - clang with asan and ubsan - clang with msan  closes #110.','.gitlab-ci.yml','25','0','38','0','false','false','false','2019-10-14 15:52:10+02:00'),('libxml2','2.9.9','5eeb9d5fbb7147cd679d7bdc24aa6e25580a4f0f','Nick Wellnhofer','fix memory leak in xmlschemavalatomictype  don\'t collapse anyuris twice.  closes #104.','xmlschemastypes.c','4330','1595','1','1','true','false','false','2019-10-14 16:35:00+02:00'),('libxml2','2.9.9','f9f8df0a31ba9a2e168b97ba2f5e7b01ef3f90ce','Nick Wellnhofer','fix uninitialized memory access in html parser  the sax2 character handler expects null-terminated buffer.  closes #106.  also see https://github.com/lxml/lxml/pull/288','HTMLparser.c','4774','1393','10','5','true','false','false','2019-10-14 16:39:21+02:00'),('libxml2','2.9.9','1fda32480c45025da7277a88c910b62553cda130','Daniel Richard G','fix exponent digits when running tests under old msvc  switch printf output format to two-digit exponent under certain msvc versions.  closes #111.','runtest.c','3282','698','4','0','true','false','false','2019-10-14 16:48:32+02:00'),('libxml2','2.9.9','40e00bc5174ab61036c893078123467144b05a4a','Nick Wellnhofer','fix integer overflow when counting written bytes  check for integer overflow when updating the `written` member of struct xmloutputbuffer in xmlio.c.  closes #112. resolves !54 and !55.','xmlIO.c','2150','714','12','3','true','false','false','2019-10-14 17:06:20+02:00'),('libxml2','2.9.9','d8999b1da03006390f22a4dc8fafcbbab92f3594','Nick Wellnhofer','fix error code in xmltextwriterstartdocument  return xml_err_unsupported_encoding if no encoding handler could be found.  fixes bug #521808: https://bugzilla.gnome.org/show_bug.cgi?id=521808  resolves !53.','xmlwriter.c','3147','724','2','2','true','false','false','2019-10-14 17:06:36+02:00'),('libxml2','2.9.9','aec2bf715346251ad0fd59e62184e82ed786e618','Nick Wellnhofer','make xmlfreedocelementcontent non-recursive  avoid call stack overflow when freeing element type declarations with deeply nested contents.  found by oss-fuzz.','valid.c','4804','1568','27','5','false','false','false','2019-10-14 18:01:51+02:00'),('libxml2','2.9.9','390f05e7033fa8658f310dce9704f4f88e84b7fe','Nick Wellnhofer','propagate memory errors in xmlxpathcompexpradd  make sure that memory errors in xmlxpathcompexpradd are propagated to the parser context. hitting the step limit or running out of memory without raising an error could also lead to an out-of-bounds read.  also fixes a memory leak in xmlxpatherrmemory.  found by oss-fuzz.','xpath.c','9433','3070','10','8','true','false','false','2019-10-20 14:13:05+02:00'),('libxml2','2.9.9','429d4ecaae5d61d591f279220125a583836fb84e','Nick Wellnhofer','propagate memory errors in valuepush  currently, many memory allocation errors in xpath.c aren\'t propagated to the parser/evaluation context and for the most part ignored. most xpath objects allocated via one of the new, wrap or copy functions end up being pushed on the stack, so adding a check in valuepush handles many cases without much effort.  also simplify the code a little and make sure to return -1 in case of error.','xpath.c','9435','3070','16','9','true','false','false','2019-10-20 14:38:05+02:00'),('libxml2','2.9.9','bfc0f674ccf5c3929ce22e29307a6ffae17428ad','Nick Wellnhofer','audit memory error handling in xpath.c  memory allocation errors in the following functions a often ignored. add todo comments.  - xmlxpathnodesetcreate - xmlxpathnodesetadd* - xmlxpathnodesetmerge* - xmlxpathnodesetdupns  note that the following functions currently lack a way to propagate memory errors:  - xmlxpathcomparenodesets - xmlxpathequalnodesets','xpath.c','9435','3070','34','6','true','false','false','2019-10-20 14:39:46+02:00'),('libxml2','2.9.9','55d95dcf176db8ebae11a8d0a1c328be0ab2b5d9','Nick Wellnhofer','update gitlab ci config  - update dockerfile - don\'t configure with -werror - don\'t mention travis in contributing','.gitlab-ci.yml','26','0','12','9','false','false','false','2019-10-20 18:15:34+02:00'),('libxml2','2.9.9','55d95dcf176db8ebae11a8d0a1c328be0ab2b5d9','Nick Wellnhofer','update gitlab ci config  - update dockerfile - don\'t configure with -werror - don\'t mention travis in contributing','CONTRIBUTING','12','0','0','4','false','false','false','2019-10-20 18:15:34+02:00'),('libxml2','2.9.9','d188eb921a835e0ec40f0d9b974c27f7abf4fbc0','Nick Wellnhofer','make sure that python tests exit with error code  closes #108.','Makefile.am','74','0','11','9','true','false','false','2019-10-21 12:45:37+02:00'),('libxml2','2.9.9','c1035664f989c2ac7ca31407bc6f0b48396db42c','Nick Wellnhofer','fix for conditional sections at end of document  parsing conditional sections would fail if the final \']]>\' was at the end of the document. short-lived regression caused by commit c51e38cb.','parser.c','10228','3461','3','4','true','false','false','2019-10-23 11:40:34+02:00'),('libxml2','2.9.9','9acef289285008f81b4b66b4880baf600773cf67','Daniel Veillard','fix some release issues on fedora 30  * doc/makefile.am: xzlib.html seems not generated anymore since it   was only containing an internal define we can drop it * libxml.spec.in: don\'t run python tests as part of %check as this   is now breaking on f30','Makefile.am','321','0','0','1','true','false','false','2019-10-23 18:13:08+02:00'),('libxml2','2.9.9','9acef289285008f81b4b66b4880baf600773cf67','Daniel Veillard','fix some release issues on fedora 30  * doc/makefile.am: xzlib.html seems not generated anymore since it   was only containing an internal define we can drop it * libxml.spec.in: don\'t run python tests as part of %check as this   is now breaking on f30','libxml.spec.in','107','0','2','1','true','false','false','2019-10-23 18:13:08+02:00');
/*!40000 ALTER TABLE `libxml2` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-03-03 10:16:22
